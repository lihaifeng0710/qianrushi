
SPI_实现基本功能.elf:     file format elf32-littlearm
SPI_实现基本功能.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00006c59

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000068c0 memsz 0x000068c0 flags r--
    LOAD off    0x00006c00 vaddr 0x00006c00 paddr 0x00006c00 align 2**16
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00006c10 vaddr 0x00006c10 paddr 0x00006c10 align 2**16
         filesz 0x00003808 memsz 0x00003808 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x20000400 align 2**16
         filesz 0x00000000 memsz 0x00000530 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts     000000c0  00006800  00006800  00006800  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flash_config   00000010  00006c00  00006c00  00006c00  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text           000037f8  00006c10  00006c10  00006c10  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM            00000008  0000a408  0000a408  0000a408  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array     00000004  0000a410  0000a410  0000a410  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array     00000004  0000a414  0000a414  0000a414  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .mtb            00000000  20000400  20000400  0000a418  2**0  CONTENTS
  7 .data           00000000  20000400  20000400  0000a418  2**0  CONTENTS, ALLOC, LOAD, DATA
  8 .bss            0000022c  20000400  20000400  00010400  2**2  ALLOC
  9 .heap           00000204  2000062c  2000062c  00010400  2**0  ALLOC
 10 .stack          00000100  20000830  20000830  00010400  2**0  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000a418  2**0  CONTENTS, READONLY
 12 .debug_info     0000808b  00000000  00000000  0000a440  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev   0000186e  00000000  00000000  000124cb  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges  000002e8  00000000  00000000  00013d40  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges   00000228  00000000  00000000  00014028  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro    000021b2  00000000  00000000  00014250  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_line     000039e7  00000000  00000000  00016402  2**0  CONTENTS, READONLY, DEBUGGING
 18 .debug_str      0004f1e1  00000000  00000000  00019de9  2**0  CONTENTS, READONLY, DEBUGGING
 19 .comment        0000007e  00000000  00000000  00068fca  2**0  CONTENTS, READONLY
 20 .debug_frame    00000884  00000000  00000000  00069048  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00006800 l    d  .interrupts	00000000 .interrupts
00006c00 l    d  .flash_config	00000000 .flash_config
00006c10 l    d  .text	00000000 .text
0000a408 l    d  .ARM	00000000 .ARM
0000a410 l    d  .init_array	00000000 .init_array
0000a414 l    d  .fini_array	00000000 .fini_array
20000400 l    d  .mtb	00000000 .mtb
20000400 l    d  .data	00000000 .data
20000400 l    d  .bss	00000000 .bss
2000062c l    d  .heap	00000000 .heap
20000830 l    d  .stack	00000000 .stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_MKL36Z4.o
00000000 l    df *ABS*	00000000 crtstuff.c
0000a3f0 l     O .text	00000000 __EH_FRAME_BEGIN__
00006c10 l     F .text	00000000 __do_global_dtors_aux
20000400 l       .bss	00000001 completed.8654
0000a414 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00006c38 l     F .text	00000000 frame_dummy
20000404 l       .bss	00000018 object.8659
0000a410 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 _udivsi3.o
00006ca8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00006dbc l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 _clzdi2.o
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 system_MKL36Z4.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 suart.c
00008504 l     F .text	0000002c NVIC_EnableIRQ
00000000 l    df *ABS*	00000000 wdog.c
00000000 l    df *ABS*	00000000 spi.c
00008e88 l     F .text	0000002c NVIC_EnableIRQ
2000041c l     O .bss	00000004 index.5573
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 printf.c
00009660 l     F .text	0000004c printk_putc
00009928 l     F .text	000000f8 printk_mknumstr
00009a20 l     F .text	00000032 printk_pad_zero
00009a52 l     F .text	00000032 printk_pad_space
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 d:/ahl-gec-ide(4.11)/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crti.o
00000000 l    df *ABS*	00000000 d:/ahl-gec-ide(4.11)/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crtn.o
00000000 l    df *ABS*	00000000 
0000a414 l       .init_array	00000000 __init_array_end
0000a410 l       .init_array	00000000 __preinit_array_end
0000a410 l       .init_array	00000000 __init_array_start
0000a410 l       .init_array	00000000 __preinit_array_start
20000630 g       .heap	00000000 __HeapBase
00006fd4 g     F .text	00000012 .hidden __aeabi_dcmple
00008404 g     F .text	00000028 flash_read_physical
0000724c g     F .text	00000078 .hidden __eqdf2
20000400 g       .data	00000000 __data_start__
00000100 g       *ABS*	00000000 STACK_SIZE
00006ca0  w    F .text	00000006 I2C0_IRQHandler
00008768 g     F .text	00000276 suart_send
0000003e g       *ABS*	00000000 GEC_USER_SECTOR_END
00006ca0  w    F .text	00000006 HardFault_Handler
0000868c g     F .text	0000009c suart_set
00006ca0  w    F .text	00000006 SysTick_Handler
00006ca0  w    F .text	00000006 PendSV_Handler
00006ca0  w    F .text	00000006 NMI_Handler
0000a410 g       .ARM	00000000 __exidx_end
00009594 g     F .text	0000003c PORTC_PORTD_IRQHandler
00006ca0  w    F .text	00000006 I2C1_IRQHandler
00006ca0  w    F .text	00000006 UART1_IRQHandler
000072c4 g     F .text	000000c8 .hidden __gtdf2
0000a418 g       .fini_array	00000000 __etext
00006ca0  w    F .text	00000006 DMA2_IRQHandler
000093d0 g     F .text	00000024 spi_enable_re_int
20000420 g     O .bss	00000200 gRecvBuff
00006ca0  w    F .text	00000006 TPM0_IRQHandler
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmple
00006ca0  w    F .text	00000006 I2S0_IRQHandler
00006ca0  w    F .text	00000006 LLWU_IRQHandler
00008d48 g     F .text	000000f0 suart_enable_receive_interupt
0000001a g       *ABS*	00000000 GEC_USER_SECTOR_START
00006ca0  w    F .text	00000006 TSI0_IRQHandler
00008530 g     F .text	0000015c suart_init
00006ca0  w    F .text	00000006 UART0_IRQHandler
0000a1d4 g     F .text	00000012 memcpy
00006f94 g     F .text	00000020 .hidden __aeabi_cdrcmple
0000738c g     F .text	000000d0 .hidden __ltdf2
0000a410 g       .init_array	00000000 __DTOR_END__
00007010 g     F .text	0000003e .hidden __aeabi_uldivmod
00006ca0  w    F .text	00000006 ADC0_IRQHandler
00006ca8 g     F .text	0000010a .hidden __udivsi3
20000400 g       .bss	00000000 __START_BSS
00008eb4 g     F .text	000003bc spi_init
00007050 g     F .text	0000003c .hidden __fixunsdfsi
20000830 g       .heap	00000000 __HeapLimit
20000400 g       .bss	00000000 __bss_start__
000082dc g     F .text	00000098 flash_erase
0000803c g     F .text	00000064 .hidden __aeabi_ui2d
000095fc g     F .text	00000044 SPI1_IRQHandler
000070c8 g     F .text	00000182 .hidden __udivmoddi4
00006ca0  w    F .text	00000006 DefaultISR
00006fc0 g     F .text	00000012 .hidden __aeabi_dcmplt
0000a408 g       .ARM	00000000 __exidx_start
0000745c g     F .text	000004e4 .hidden __aeabi_dmul
000096ac g     F .text	0000027c printk_mkfloatstr
0000a3f0 g     F .text	00000000 _init
00006ca0  w    F .text	00000006 TPM2_IRQHandler
0000708c g     F .text	0000003c .hidden __aeabi_d2ulz
00006ca0  w    F .text	00000006 RTC_IRQHandler
00000400 g       *ABS*	00000000 MCU_SECTORSIZE
00006c58  w    F .text	00000048 Reset_Handler
00006ca0  w    F .text	00000006 LCD_IRQHandler
0000738c g     F .text	000000d0 .hidden __ledf2
200017ff g       *ABS*	00000000 GEC_USER_RAM_END
0000a198 g     F .text	0000003c myprintf
00006ca0  w    F .text	00000006 RTC_Seconds_IRQHandler
00006dbc g     F .text	00000000 .hidden __aeabi_idiv
00006ca0  w    F .text	00000006 MCG_IRQHandler
00006ca0  w    F .text	00000006 UART2_IRQHandler
20000400 g       .data	00000000 __data_end__
0000a410 g       .init_array	00000000 __CTOR_LIST__
00000200 g       *ABS*	00000000 HEAP_SIZE
00006fe8 g     F .text	00000012 .hidden __aeabi_dcmpgt
000080a0 g     F .text	0000003c .hidden __clzsi2
2000062c g       .bss	00000000 __bss_end__
00006ca0  w    F .text	00000006 Reserved20_IRQHandler
00006ffc g     F .text	00000012 .hidden __aeabi_dcmpge
000084a0 g     F .text	00000064 flash_cmd_launch
20000620 g     O .bss	00000003 gTime
00007940 g     F .text	00000690 .hidden __aeabi_dsub
20000624 g     O .bss	00000004 component_fun
20000400 g       *ABS*	00000000 GEC_USER_RAM_START
000089e0 g     F .text	00000368 suart_receive
0000a320 g     O .text	00000008 UART_ARR
00009270 g     F .text	00000074 spi_send1
00009640 g     F .text	00000020 out_char
00009a84 g     F .text	00000714 printk
00006f90  w    F .text	00000002 .hidden __aeabi_ldiv0
0000a1e6 g     F .text	00000010 memset
00006800 g       .interrupts	000000c0 __isr_vector
0000821c g     F .text	000000c0 main
00008e38 g     F .text	00000030 suart_get_port_pin
00006ca0  w    F .text	00000006 PIT_IRQHandler
00006ca8 g     F .text	00000000 .hidden __aeabi_uidiv
00006ca0  w    F .text	00000006 SVC_Handler
20000400 g       .data	00000000 __DATA_RAM
20000630 g       .heap	00000000 __end__
00006dbc g     F .text	000001cc .hidden __divsi3
0000a410 g       .init_array	00000000 __CTOR_END__
00006ca0  w    F .text	00000006 DMA3_IRQHandler
0000a410 g       .init_array	00000000 __DTOR_LIST__
2000062c g       .bss	00000000 __END_BSS
00008104 g     F .text	00000118 SystemInit
00006ca0  w    F .text	00000006 DMA0_IRQHandler
0000724c g     F .text	00000078 .hidden __nedf2
0000708c g     F .text	0000003c .hidden __fixunsdfdi
0000a3fc g     F .text	00000000 _fini
00006ca0  w    F .text	00000006 DAC0_IRQHandler
20001800 g       .stack	00000000 __StackTop
00008374 g     F .text	00000090 flash_write_physical
20000400 g       .mtb	00000000 _mtb_end
00008728 g     F .text	00000040 suart_get
0000a418 g       *ABS*	00000000 __DATA_END
0000842c g     F .text	00000072 flash_isempty
00007050 g     F .text	0000003c .hidden __aeabi_d2uiz
00006ca0  w    F .text	00000006 TPM1_IRQHandler
000093f4 g     F .text	000000d4 Vectors_Init
20001800 g       *ABS*	00000000 __stack
00006db4 g     F .text	00000008 .hidden __aeabi_uidivmod
00006fb4 g     F .text	0000000c .hidden __aeabi_dcmpeq
20000628 g     O .bss	00000001 gSendFlag
00006ca0  w    F .text	00000006 LVD_LVW_IRQHandler
000095d0 g     F .text	0000002a SPI0_IRQHandler
00006ca0  w    F .text	00000006 PORTA_IRQHandler
00006800 g       .interrupts	00000000 __VECTOR_TABLE
0000a418 g       .fini_array	00000000 __DATA_ROM
20001700 g       *ABS*	00000000 __StackLimit
00006ca0  w    F .text	00000006 FTFA_IRQHandler
00007fd0 g     F .text	0000006c .hidden __aeabi_d2iz
20000400 g       .mtb	00000000 _mtb_start
00006ca0  w    F .text	00000006 Reserved40_IRQHandler
00006f90  w    F .text	00000002 .hidden __aeabi_idiv0
00006ca0  w    F .text	00000006 LPTMR0_IRQHandler
000080f4 g     F .text	0000000e strlen
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
000072c4 g     F .text	000000c8 .hidden __gedf2
000094c8 g     F .text	000000ac uart_send1
00008e68 g     F .text	00000020 wdog_stop
00009574 g     F .text	00000020 uart_is_uartNo
000092e4 g     F .text	00000058 spi_sendN
000080dc g     F .text	00000016 .hidden __clzdi2
00006ca0  w    F .text	00000006 CMP0_IRQHandler
00006f88 g     F .text	00000008 .hidden __aeabi_idivmod
0000933c g     F .text	00000038 spi_receive1
00009374 g     F .text	0000005c spi_receiveN
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START
00006ca0  w    F .text	00000006 DMA1_IRQHandler



Disassembly of section .text:

00006c10 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    6c10:	b510      	push	{r4, lr}
    6c12:	4c06      	ldr	r4, [pc, #24]	; (6c2c <__do_global_dtors_aux+0x1c>)
    6c14:	7823      	ldrb	r3, [r4, #0]
    6c16:	2b00      	cmp	r3, #0
    6c18:	d107      	bne.n	6c2a <__do_global_dtors_aux+0x1a>
    6c1a:	4b05      	ldr	r3, [pc, #20]	; (6c30 <__do_global_dtors_aux+0x20>)
    6c1c:	2b00      	cmp	r3, #0
    6c1e:	d002      	beq.n	6c26 <__do_global_dtors_aux+0x16>
    6c20:	4804      	ldr	r0, [pc, #16]	; (6c34 <__do_global_dtors_aux+0x24>)
    6c22:	e000      	b.n	6c26 <__do_global_dtors_aux+0x16>
    6c24:	bf00      	nop
    6c26:	2301      	movs	r3, #1
    6c28:	7023      	strb	r3, [r4, #0]
    6c2a:	bd10      	pop	{r4, pc}
    6c2c:	20000400 	.word	0x20000400
    6c30:	00000000 	.word	0x00000000
    6c34:	0000a3f0 	.word	0x0000a3f0

00006c38 <frame_dummy>:
frame_dummy():
    6c38:	4b04      	ldr	r3, [pc, #16]	; (6c4c <frame_dummy+0x14>)
    6c3a:	b510      	push	{r4, lr}
    6c3c:	2b00      	cmp	r3, #0
    6c3e:	d003      	beq.n	6c48 <frame_dummy+0x10>
    6c40:	4903      	ldr	r1, [pc, #12]	; (6c50 <frame_dummy+0x18>)
    6c42:	4804      	ldr	r0, [pc, #16]	; (6c54 <frame_dummy+0x1c>)
    6c44:	e000      	b.n	6c48 <frame_dummy+0x10>
    6c46:	bf00      	nop
    6c48:	bd10      	pop	{r4, pc}
    6c4a:	46c0      	nop			; (mov r8, r8)
    6c4c:	00000000 	.word	0x00000000
    6c50:	20000404 	.word	0x20000404
    6c54:	0000a3f0 	.word	0x0000a3f0

00006c58 <Reset_Handler>:
Reset_Handler():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:118
    .align 2
    .globl   Reset_Handler
    .weak    Reset_Handler
    .type    Reset_Handler, %function
Reset_Handler:
    cpsid   i               /* Mask interrupts */
    6c58:	b672      	cpsid	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:120
#ifndef __NO_SYSTEM_INIT
    bl SystemInit
    6c5a:	f001 fa53 	bl	8104 <SystemInit>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:122
#endif
    cpsie   i               /* Unmask interrupts */
    6c5e:	b662      	cpsie	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:130
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */

    ldr    r1, =__etext
    6c60:	490a      	ldr	r1, [pc, #40]	; (6c8c <Reset_Handler+0x34>)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c62:	4a0b      	ldr	r2, [pc, #44]	; (6c90 <Reset_Handler+0x38>)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c64:	4b0b      	ldr	r3, [pc, #44]	; (6c94 <Reset_Handler+0x3c>)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:134

    subs    r3, r2
    6c66:	1a9b      	subs	r3, r3, r2
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:135
    ble     .LC0
    6c68:	dd03      	ble.n	6c72 <Reset_Handler+0x1a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:138

.LC1:
    subs    r3, 4
    6c6a:	3b04      	subs	r3, #4
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:139
    ldr    r0, [r1,r3]
    6c6c:	58c8      	ldr	r0, [r1, r3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:140
    str    r0, [r2,r3]
    6c6e:	50d0      	str	r0, [r2, r3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:141
    bgt    .LC1
    6c70:	dcfb      	bgt.n	6c6a <Reset_Handler+0x12>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:154
 *     Loop to zero out BSS section, which uses following symbols
 *     in linker script:
 *      __bss_start__: start of BSS section. Must align to 4
 *      __bss_end__: end of BSS section. Must align to 4
 */
    ldr r1, =__bss_start__
    6c72:	4909      	ldr	r1, [pc, #36]	; (6c98 <Reset_Handler+0x40>)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c74:	4a09      	ldr	r2, [pc, #36]	; (6c9c <Reset_Handler+0x44>)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:157

    subs    r2, r1
    6c76:	1a52      	subs	r2, r2, r1
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:158
    ble .LC3
    6c78:	dd03      	ble.n	6c82 <Reset_Handler+0x2a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:160

    movs    r0, 0
    6c7a:	2000      	movs	r0, #0
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:162
.LC2:
    str r0, [r1, r2]
    6c7c:	5088      	str	r0, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:163
    subs    r2, 4
    6c7e:	3a04      	subs	r2, #4
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:164
    bge .LC2
    6c80:	dafc      	bge.n	6c7c <Reset_Handler+0x24>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:173
#define __START _start
#endif


/*【User程序修改处1】*/
	bl	 Vectors_Init  
    6c82:	f002 fbb7 	bl	93f4 <Vectors_Init>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:175
  //  bl    __START
   bl main
    6c86:	f001 fac9 	bl	821c <main>
    6c8a:	0000      	.short	0x0000
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:130
    ldr    r1, =__etext
    6c8c:	0000a418 	.word	0x0000a418
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c90:	20000400 	.word	0x20000400
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c94:	20000400 	.word	0x20000400
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:154
    ldr r1, =__bss_start__
    6c98:	20000400 	.word	0x20000400
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c9c:	2000062c 	.word	0x2000062c

00006ca0 <ADC0_IRQHandler>:
DMA1_IRQHandler():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:186
    .weak DefaultISR
    .type DefaultISR, %function
DefaultISR:    
    //ldr	r0, =DefaultISR   //误中断，进入无限循环
    //bx r0
       push  {lr}        //【20200326】WYH改，误中断，回原处
    6ca0:	b500      	push	{lr}
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:187
       nop
    6ca2:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcs/startup_MKL36Z4.S:188
       pop   {pc}
    6ca4:	bd00      	pop	{pc}
    6ca6:	46c0      	nop			; (mov r8, r8)

00006ca8 <__udivsi3>:
__aeabi_uidiv():
    6ca8:	2200      	movs	r2, #0
    6caa:	0843      	lsrs	r3, r0, #1
    6cac:	428b      	cmp	r3, r1
    6cae:	d374      	bcc.n	6d9a <__udivsi3+0xf2>
    6cb0:	0903      	lsrs	r3, r0, #4
    6cb2:	428b      	cmp	r3, r1
    6cb4:	d35f      	bcc.n	6d76 <__udivsi3+0xce>
    6cb6:	0a03      	lsrs	r3, r0, #8
    6cb8:	428b      	cmp	r3, r1
    6cba:	d344      	bcc.n	6d46 <__udivsi3+0x9e>
    6cbc:	0b03      	lsrs	r3, r0, #12
    6cbe:	428b      	cmp	r3, r1
    6cc0:	d328      	bcc.n	6d14 <__udivsi3+0x6c>
    6cc2:	0c03      	lsrs	r3, r0, #16
    6cc4:	428b      	cmp	r3, r1
    6cc6:	d30d      	bcc.n	6ce4 <__udivsi3+0x3c>
    6cc8:	22ff      	movs	r2, #255	; 0xff
    6cca:	0209      	lsls	r1, r1, #8
    6ccc:	ba12      	rev	r2, r2
    6cce:	0c03      	lsrs	r3, r0, #16
    6cd0:	428b      	cmp	r3, r1
    6cd2:	d302      	bcc.n	6cda <__udivsi3+0x32>
    6cd4:	1212      	asrs	r2, r2, #8
    6cd6:	0209      	lsls	r1, r1, #8
    6cd8:	d065      	beq.n	6da6 <__udivsi3+0xfe>
    6cda:	0b03      	lsrs	r3, r0, #12
    6cdc:	428b      	cmp	r3, r1
    6cde:	d319      	bcc.n	6d14 <__udivsi3+0x6c>
    6ce0:	e000      	b.n	6ce4 <__udivsi3+0x3c>
    6ce2:	0a09      	lsrs	r1, r1, #8
    6ce4:	0bc3      	lsrs	r3, r0, #15
    6ce6:	428b      	cmp	r3, r1
    6ce8:	d301      	bcc.n	6cee <__udivsi3+0x46>
    6cea:	03cb      	lsls	r3, r1, #15
    6cec:	1ac0      	subs	r0, r0, r3
    6cee:	4152      	adcs	r2, r2
    6cf0:	0b83      	lsrs	r3, r0, #14
    6cf2:	428b      	cmp	r3, r1
    6cf4:	d301      	bcc.n	6cfa <__udivsi3+0x52>
    6cf6:	038b      	lsls	r3, r1, #14
    6cf8:	1ac0      	subs	r0, r0, r3
    6cfa:	4152      	adcs	r2, r2
    6cfc:	0b43      	lsrs	r3, r0, #13
    6cfe:	428b      	cmp	r3, r1
    6d00:	d301      	bcc.n	6d06 <__udivsi3+0x5e>
    6d02:	034b      	lsls	r3, r1, #13
    6d04:	1ac0      	subs	r0, r0, r3
    6d06:	4152      	adcs	r2, r2
    6d08:	0b03      	lsrs	r3, r0, #12
    6d0a:	428b      	cmp	r3, r1
    6d0c:	d301      	bcc.n	6d12 <__udivsi3+0x6a>
    6d0e:	030b      	lsls	r3, r1, #12
    6d10:	1ac0      	subs	r0, r0, r3
    6d12:	4152      	adcs	r2, r2
    6d14:	0ac3      	lsrs	r3, r0, #11
    6d16:	428b      	cmp	r3, r1
    6d18:	d301      	bcc.n	6d1e <__udivsi3+0x76>
    6d1a:	02cb      	lsls	r3, r1, #11
    6d1c:	1ac0      	subs	r0, r0, r3
    6d1e:	4152      	adcs	r2, r2
    6d20:	0a83      	lsrs	r3, r0, #10
    6d22:	428b      	cmp	r3, r1
    6d24:	d301      	bcc.n	6d2a <__udivsi3+0x82>
    6d26:	028b      	lsls	r3, r1, #10
    6d28:	1ac0      	subs	r0, r0, r3
    6d2a:	4152      	adcs	r2, r2
    6d2c:	0a43      	lsrs	r3, r0, #9
    6d2e:	428b      	cmp	r3, r1
    6d30:	d301      	bcc.n	6d36 <__udivsi3+0x8e>
    6d32:	024b      	lsls	r3, r1, #9
    6d34:	1ac0      	subs	r0, r0, r3
    6d36:	4152      	adcs	r2, r2
    6d38:	0a03      	lsrs	r3, r0, #8
    6d3a:	428b      	cmp	r3, r1
    6d3c:	d301      	bcc.n	6d42 <__udivsi3+0x9a>
    6d3e:	020b      	lsls	r3, r1, #8
    6d40:	1ac0      	subs	r0, r0, r3
    6d42:	4152      	adcs	r2, r2
    6d44:	d2cd      	bcs.n	6ce2 <__udivsi3+0x3a>
    6d46:	09c3      	lsrs	r3, r0, #7
    6d48:	428b      	cmp	r3, r1
    6d4a:	d301      	bcc.n	6d50 <__udivsi3+0xa8>
    6d4c:	01cb      	lsls	r3, r1, #7
    6d4e:	1ac0      	subs	r0, r0, r3
    6d50:	4152      	adcs	r2, r2
    6d52:	0983      	lsrs	r3, r0, #6
    6d54:	428b      	cmp	r3, r1
    6d56:	d301      	bcc.n	6d5c <__udivsi3+0xb4>
    6d58:	018b      	lsls	r3, r1, #6
    6d5a:	1ac0      	subs	r0, r0, r3
    6d5c:	4152      	adcs	r2, r2
    6d5e:	0943      	lsrs	r3, r0, #5
    6d60:	428b      	cmp	r3, r1
    6d62:	d301      	bcc.n	6d68 <__udivsi3+0xc0>
    6d64:	014b      	lsls	r3, r1, #5
    6d66:	1ac0      	subs	r0, r0, r3
    6d68:	4152      	adcs	r2, r2
    6d6a:	0903      	lsrs	r3, r0, #4
    6d6c:	428b      	cmp	r3, r1
    6d6e:	d301      	bcc.n	6d74 <__udivsi3+0xcc>
    6d70:	010b      	lsls	r3, r1, #4
    6d72:	1ac0      	subs	r0, r0, r3
    6d74:	4152      	adcs	r2, r2
    6d76:	08c3      	lsrs	r3, r0, #3
    6d78:	428b      	cmp	r3, r1
    6d7a:	d301      	bcc.n	6d80 <__udivsi3+0xd8>
    6d7c:	00cb      	lsls	r3, r1, #3
    6d7e:	1ac0      	subs	r0, r0, r3
    6d80:	4152      	adcs	r2, r2
    6d82:	0883      	lsrs	r3, r0, #2
    6d84:	428b      	cmp	r3, r1
    6d86:	d301      	bcc.n	6d8c <__udivsi3+0xe4>
    6d88:	008b      	lsls	r3, r1, #2
    6d8a:	1ac0      	subs	r0, r0, r3
    6d8c:	4152      	adcs	r2, r2
    6d8e:	0843      	lsrs	r3, r0, #1
    6d90:	428b      	cmp	r3, r1
    6d92:	d301      	bcc.n	6d98 <__udivsi3+0xf0>
    6d94:	004b      	lsls	r3, r1, #1
    6d96:	1ac0      	subs	r0, r0, r3
    6d98:	4152      	adcs	r2, r2
    6d9a:	1a41      	subs	r1, r0, r1
    6d9c:	d200      	bcs.n	6da0 <__udivsi3+0xf8>
    6d9e:	4601      	mov	r1, r0
    6da0:	4152      	adcs	r2, r2
    6da2:	4610      	mov	r0, r2
    6da4:	4770      	bx	lr
    6da6:	e7ff      	b.n	6da8 <__udivsi3+0x100>
    6da8:	b501      	push	{r0, lr}
    6daa:	2000      	movs	r0, #0
    6dac:	f000 f8f0 	bl	6f90 <__aeabi_idiv0>
    6db0:	bd02      	pop	{r1, pc}
    6db2:	46c0      	nop			; (mov r8, r8)

00006db4 <__aeabi_uidivmod>:
__aeabi_uidivmod():
    6db4:	2900      	cmp	r1, #0
    6db6:	d0f7      	beq.n	6da8 <__udivsi3+0x100>
    6db8:	e776      	b.n	6ca8 <__udivsi3>
    6dba:	4770      	bx	lr

00006dbc <__divsi3>:
__divsi3():
    6dbc:	4603      	mov	r3, r0
    6dbe:	430b      	orrs	r3, r1
    6dc0:	d47f      	bmi.n	6ec2 <__divsi3+0x106>
    6dc2:	2200      	movs	r2, #0
    6dc4:	0843      	lsrs	r3, r0, #1
    6dc6:	428b      	cmp	r3, r1
    6dc8:	d374      	bcc.n	6eb4 <__divsi3+0xf8>
    6dca:	0903      	lsrs	r3, r0, #4
    6dcc:	428b      	cmp	r3, r1
    6dce:	d35f      	bcc.n	6e90 <__divsi3+0xd4>
    6dd0:	0a03      	lsrs	r3, r0, #8
    6dd2:	428b      	cmp	r3, r1
    6dd4:	d344      	bcc.n	6e60 <__divsi3+0xa4>
    6dd6:	0b03      	lsrs	r3, r0, #12
    6dd8:	428b      	cmp	r3, r1
    6dda:	d328      	bcc.n	6e2e <__divsi3+0x72>
    6ddc:	0c03      	lsrs	r3, r0, #16
    6dde:	428b      	cmp	r3, r1
    6de0:	d30d      	bcc.n	6dfe <__divsi3+0x42>
    6de2:	22ff      	movs	r2, #255	; 0xff
    6de4:	0209      	lsls	r1, r1, #8
    6de6:	ba12      	rev	r2, r2
    6de8:	0c03      	lsrs	r3, r0, #16
    6dea:	428b      	cmp	r3, r1
    6dec:	d302      	bcc.n	6df4 <__divsi3+0x38>
    6dee:	1212      	asrs	r2, r2, #8
    6df0:	0209      	lsls	r1, r1, #8
    6df2:	d065      	beq.n	6ec0 <__divsi3+0x104>
    6df4:	0b03      	lsrs	r3, r0, #12
    6df6:	428b      	cmp	r3, r1
    6df8:	d319      	bcc.n	6e2e <__divsi3+0x72>
    6dfa:	e000      	b.n	6dfe <__divsi3+0x42>
    6dfc:	0a09      	lsrs	r1, r1, #8
    6dfe:	0bc3      	lsrs	r3, r0, #15
    6e00:	428b      	cmp	r3, r1
    6e02:	d301      	bcc.n	6e08 <__divsi3+0x4c>
    6e04:	03cb      	lsls	r3, r1, #15
    6e06:	1ac0      	subs	r0, r0, r3
    6e08:	4152      	adcs	r2, r2
    6e0a:	0b83      	lsrs	r3, r0, #14
    6e0c:	428b      	cmp	r3, r1
    6e0e:	d301      	bcc.n	6e14 <__divsi3+0x58>
    6e10:	038b      	lsls	r3, r1, #14
    6e12:	1ac0      	subs	r0, r0, r3
    6e14:	4152      	adcs	r2, r2
    6e16:	0b43      	lsrs	r3, r0, #13
    6e18:	428b      	cmp	r3, r1
    6e1a:	d301      	bcc.n	6e20 <__divsi3+0x64>
    6e1c:	034b      	lsls	r3, r1, #13
    6e1e:	1ac0      	subs	r0, r0, r3
    6e20:	4152      	adcs	r2, r2
    6e22:	0b03      	lsrs	r3, r0, #12
    6e24:	428b      	cmp	r3, r1
    6e26:	d301      	bcc.n	6e2c <__divsi3+0x70>
    6e28:	030b      	lsls	r3, r1, #12
    6e2a:	1ac0      	subs	r0, r0, r3
    6e2c:	4152      	adcs	r2, r2
    6e2e:	0ac3      	lsrs	r3, r0, #11
    6e30:	428b      	cmp	r3, r1
    6e32:	d301      	bcc.n	6e38 <__divsi3+0x7c>
    6e34:	02cb      	lsls	r3, r1, #11
    6e36:	1ac0      	subs	r0, r0, r3
    6e38:	4152      	adcs	r2, r2
    6e3a:	0a83      	lsrs	r3, r0, #10
    6e3c:	428b      	cmp	r3, r1
    6e3e:	d301      	bcc.n	6e44 <__divsi3+0x88>
    6e40:	028b      	lsls	r3, r1, #10
    6e42:	1ac0      	subs	r0, r0, r3
    6e44:	4152      	adcs	r2, r2
    6e46:	0a43      	lsrs	r3, r0, #9
    6e48:	428b      	cmp	r3, r1
    6e4a:	d301      	bcc.n	6e50 <__divsi3+0x94>
    6e4c:	024b      	lsls	r3, r1, #9
    6e4e:	1ac0      	subs	r0, r0, r3
    6e50:	4152      	adcs	r2, r2
    6e52:	0a03      	lsrs	r3, r0, #8
    6e54:	428b      	cmp	r3, r1
    6e56:	d301      	bcc.n	6e5c <__divsi3+0xa0>
    6e58:	020b      	lsls	r3, r1, #8
    6e5a:	1ac0      	subs	r0, r0, r3
    6e5c:	4152      	adcs	r2, r2
    6e5e:	d2cd      	bcs.n	6dfc <__divsi3+0x40>
    6e60:	09c3      	lsrs	r3, r0, #7
    6e62:	428b      	cmp	r3, r1
    6e64:	d301      	bcc.n	6e6a <__divsi3+0xae>
    6e66:	01cb      	lsls	r3, r1, #7
    6e68:	1ac0      	subs	r0, r0, r3
    6e6a:	4152      	adcs	r2, r2
    6e6c:	0983      	lsrs	r3, r0, #6
    6e6e:	428b      	cmp	r3, r1
    6e70:	d301      	bcc.n	6e76 <__divsi3+0xba>
    6e72:	018b      	lsls	r3, r1, #6
    6e74:	1ac0      	subs	r0, r0, r3
    6e76:	4152      	adcs	r2, r2
    6e78:	0943      	lsrs	r3, r0, #5
    6e7a:	428b      	cmp	r3, r1
    6e7c:	d301      	bcc.n	6e82 <__divsi3+0xc6>
    6e7e:	014b      	lsls	r3, r1, #5
    6e80:	1ac0      	subs	r0, r0, r3
    6e82:	4152      	adcs	r2, r2
    6e84:	0903      	lsrs	r3, r0, #4
    6e86:	428b      	cmp	r3, r1
    6e88:	d301      	bcc.n	6e8e <__divsi3+0xd2>
    6e8a:	010b      	lsls	r3, r1, #4
    6e8c:	1ac0      	subs	r0, r0, r3
    6e8e:	4152      	adcs	r2, r2
    6e90:	08c3      	lsrs	r3, r0, #3
    6e92:	428b      	cmp	r3, r1
    6e94:	d301      	bcc.n	6e9a <__divsi3+0xde>
    6e96:	00cb      	lsls	r3, r1, #3
    6e98:	1ac0      	subs	r0, r0, r3
    6e9a:	4152      	adcs	r2, r2
    6e9c:	0883      	lsrs	r3, r0, #2
    6e9e:	428b      	cmp	r3, r1
    6ea0:	d301      	bcc.n	6ea6 <__divsi3+0xea>
    6ea2:	008b      	lsls	r3, r1, #2
    6ea4:	1ac0      	subs	r0, r0, r3
    6ea6:	4152      	adcs	r2, r2
    6ea8:	0843      	lsrs	r3, r0, #1
    6eaa:	428b      	cmp	r3, r1
    6eac:	d301      	bcc.n	6eb2 <__divsi3+0xf6>
    6eae:	004b      	lsls	r3, r1, #1
    6eb0:	1ac0      	subs	r0, r0, r3
    6eb2:	4152      	adcs	r2, r2
    6eb4:	1a41      	subs	r1, r0, r1
    6eb6:	d200      	bcs.n	6eba <__divsi3+0xfe>
    6eb8:	4601      	mov	r1, r0
    6eba:	4152      	adcs	r2, r2
    6ebc:	4610      	mov	r0, r2
    6ebe:	4770      	bx	lr
    6ec0:	e05d      	b.n	6f7e <__divsi3+0x1c2>
    6ec2:	0fca      	lsrs	r2, r1, #31
    6ec4:	d000      	beq.n	6ec8 <__divsi3+0x10c>
    6ec6:	4249      	negs	r1, r1
    6ec8:	1003      	asrs	r3, r0, #32
    6eca:	d300      	bcc.n	6ece <__divsi3+0x112>
    6ecc:	4240      	negs	r0, r0
    6ece:	4053      	eors	r3, r2
    6ed0:	2200      	movs	r2, #0
    6ed2:	469c      	mov	ip, r3
    6ed4:	0903      	lsrs	r3, r0, #4
    6ed6:	428b      	cmp	r3, r1
    6ed8:	d32d      	bcc.n	6f36 <__divsi3+0x17a>
    6eda:	0a03      	lsrs	r3, r0, #8
    6edc:	428b      	cmp	r3, r1
    6ede:	d312      	bcc.n	6f06 <__divsi3+0x14a>
    6ee0:	22fc      	movs	r2, #252	; 0xfc
    6ee2:	0189      	lsls	r1, r1, #6
    6ee4:	ba12      	rev	r2, r2
    6ee6:	0a03      	lsrs	r3, r0, #8
    6ee8:	428b      	cmp	r3, r1
    6eea:	d30c      	bcc.n	6f06 <__divsi3+0x14a>
    6eec:	0189      	lsls	r1, r1, #6
    6eee:	1192      	asrs	r2, r2, #6
    6ef0:	428b      	cmp	r3, r1
    6ef2:	d308      	bcc.n	6f06 <__divsi3+0x14a>
    6ef4:	0189      	lsls	r1, r1, #6
    6ef6:	1192      	asrs	r2, r2, #6
    6ef8:	428b      	cmp	r3, r1
    6efa:	d304      	bcc.n	6f06 <__divsi3+0x14a>
    6efc:	0189      	lsls	r1, r1, #6
    6efe:	d03a      	beq.n	6f76 <__divsi3+0x1ba>
    6f00:	1192      	asrs	r2, r2, #6
    6f02:	e000      	b.n	6f06 <__divsi3+0x14a>
    6f04:	0989      	lsrs	r1, r1, #6
    6f06:	09c3      	lsrs	r3, r0, #7
    6f08:	428b      	cmp	r3, r1
    6f0a:	d301      	bcc.n	6f10 <__divsi3+0x154>
    6f0c:	01cb      	lsls	r3, r1, #7
    6f0e:	1ac0      	subs	r0, r0, r3
    6f10:	4152      	adcs	r2, r2
    6f12:	0983      	lsrs	r3, r0, #6
    6f14:	428b      	cmp	r3, r1
    6f16:	d301      	bcc.n	6f1c <__divsi3+0x160>
    6f18:	018b      	lsls	r3, r1, #6
    6f1a:	1ac0      	subs	r0, r0, r3
    6f1c:	4152      	adcs	r2, r2
    6f1e:	0943      	lsrs	r3, r0, #5
    6f20:	428b      	cmp	r3, r1
    6f22:	d301      	bcc.n	6f28 <__divsi3+0x16c>
    6f24:	014b      	lsls	r3, r1, #5
    6f26:	1ac0      	subs	r0, r0, r3
    6f28:	4152      	adcs	r2, r2
    6f2a:	0903      	lsrs	r3, r0, #4
    6f2c:	428b      	cmp	r3, r1
    6f2e:	d301      	bcc.n	6f34 <__divsi3+0x178>
    6f30:	010b      	lsls	r3, r1, #4
    6f32:	1ac0      	subs	r0, r0, r3
    6f34:	4152      	adcs	r2, r2
    6f36:	08c3      	lsrs	r3, r0, #3
    6f38:	428b      	cmp	r3, r1
    6f3a:	d301      	bcc.n	6f40 <__divsi3+0x184>
    6f3c:	00cb      	lsls	r3, r1, #3
    6f3e:	1ac0      	subs	r0, r0, r3
    6f40:	4152      	adcs	r2, r2
    6f42:	0883      	lsrs	r3, r0, #2
    6f44:	428b      	cmp	r3, r1
    6f46:	d301      	bcc.n	6f4c <__divsi3+0x190>
    6f48:	008b      	lsls	r3, r1, #2
    6f4a:	1ac0      	subs	r0, r0, r3
    6f4c:	4152      	adcs	r2, r2
    6f4e:	d2d9      	bcs.n	6f04 <__divsi3+0x148>
    6f50:	0843      	lsrs	r3, r0, #1
    6f52:	428b      	cmp	r3, r1
    6f54:	d301      	bcc.n	6f5a <__divsi3+0x19e>
    6f56:	004b      	lsls	r3, r1, #1
    6f58:	1ac0      	subs	r0, r0, r3
    6f5a:	4152      	adcs	r2, r2
    6f5c:	1a41      	subs	r1, r0, r1
    6f5e:	d200      	bcs.n	6f62 <__divsi3+0x1a6>
    6f60:	4601      	mov	r1, r0
    6f62:	4663      	mov	r3, ip
    6f64:	4152      	adcs	r2, r2
    6f66:	105b      	asrs	r3, r3, #1
    6f68:	4610      	mov	r0, r2
    6f6a:	d301      	bcc.n	6f70 <__divsi3+0x1b4>
    6f6c:	4240      	negs	r0, r0
    6f6e:	2b00      	cmp	r3, #0
    6f70:	d500      	bpl.n	6f74 <__divsi3+0x1b8>
    6f72:	4249      	negs	r1, r1
    6f74:	4770      	bx	lr
    6f76:	4663      	mov	r3, ip
    6f78:	105b      	asrs	r3, r3, #1
    6f7a:	d300      	bcc.n	6f7e <__divsi3+0x1c2>
    6f7c:	4240      	negs	r0, r0
    6f7e:	b501      	push	{r0, lr}
    6f80:	2000      	movs	r0, #0
    6f82:	f000 f805 	bl	6f90 <__aeabi_idiv0>
    6f86:	bd02      	pop	{r1, pc}

00006f88 <__aeabi_idivmod>:
__aeabi_idivmod():
    6f88:	2900      	cmp	r1, #0
    6f8a:	d0f8      	beq.n	6f7e <__divsi3+0x1c2>
    6f8c:	e716      	b.n	6dbc <__divsi3>
    6f8e:	4770      	bx	lr

00006f90 <__aeabi_idiv0>:
__aeabi_idiv0():
    6f90:	4770      	bx	lr
    6f92:	46c0      	nop			; (mov r8, r8)

00006f94 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    6f94:	4684      	mov	ip, r0
    6f96:	1c10      	adds	r0, r2, #0
    6f98:	4662      	mov	r2, ip
    6f9a:	468c      	mov	ip, r1
    6f9c:	1c19      	adds	r1, r3, #0
    6f9e:	4663      	mov	r3, ip
    6fa0:	e000      	b.n	6fa4 <__aeabi_cdcmpeq>
    6fa2:	46c0      	nop			; (mov r8, r8)

00006fa4 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    6fa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6fa6:	f000 f9f1 	bl	738c <__ledf2>
    6faa:	2800      	cmp	r0, #0
    6fac:	d401      	bmi.n	6fb2 <__aeabi_cdcmpeq+0xe>
    6fae:	2100      	movs	r1, #0
    6fb0:	42c8      	cmn	r0, r1
    6fb2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006fb4 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    6fb4:	b510      	push	{r4, lr}
    6fb6:	f000 f949 	bl	724c <__eqdf2>
    6fba:	4240      	negs	r0, r0
    6fbc:	3001      	adds	r0, #1
    6fbe:	bd10      	pop	{r4, pc}

00006fc0 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    6fc0:	b510      	push	{r4, lr}
    6fc2:	f000 f9e3 	bl	738c <__ledf2>
    6fc6:	2800      	cmp	r0, #0
    6fc8:	db01      	blt.n	6fce <__aeabi_dcmplt+0xe>
    6fca:	2000      	movs	r0, #0
    6fcc:	bd10      	pop	{r4, pc}
    6fce:	2001      	movs	r0, #1
    6fd0:	bd10      	pop	{r4, pc}
    6fd2:	46c0      	nop			; (mov r8, r8)

00006fd4 <__aeabi_dcmple>:
__aeabi_dcmple():
    6fd4:	b510      	push	{r4, lr}
    6fd6:	f000 f9d9 	bl	738c <__ledf2>
    6fda:	2800      	cmp	r0, #0
    6fdc:	dd01      	ble.n	6fe2 <__aeabi_dcmple+0xe>
    6fde:	2000      	movs	r0, #0
    6fe0:	bd10      	pop	{r4, pc}
    6fe2:	2001      	movs	r0, #1
    6fe4:	bd10      	pop	{r4, pc}
    6fe6:	46c0      	nop			; (mov r8, r8)

00006fe8 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    6fe8:	b510      	push	{r4, lr}
    6fea:	f000 f96b 	bl	72c4 <__gedf2>
    6fee:	2800      	cmp	r0, #0
    6ff0:	dc01      	bgt.n	6ff6 <__aeabi_dcmpgt+0xe>
    6ff2:	2000      	movs	r0, #0
    6ff4:	bd10      	pop	{r4, pc}
    6ff6:	2001      	movs	r0, #1
    6ff8:	bd10      	pop	{r4, pc}
    6ffa:	46c0      	nop			; (mov r8, r8)

00006ffc <__aeabi_dcmpge>:
__aeabi_dcmpge():
    6ffc:	b510      	push	{r4, lr}
    6ffe:	f000 f961 	bl	72c4 <__gedf2>
    7002:	2800      	cmp	r0, #0
    7004:	da01      	bge.n	700a <__aeabi_dcmpge+0xe>
    7006:	2000      	movs	r0, #0
    7008:	bd10      	pop	{r4, pc}
    700a:	2001      	movs	r0, #1
    700c:	bd10      	pop	{r4, pc}
    700e:	46c0      	nop			; (mov r8, r8)

00007010 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    7010:	2b00      	cmp	r3, #0
    7012:	d111      	bne.n	7038 <__aeabi_uldivmod+0x28>
    7014:	2a00      	cmp	r2, #0
    7016:	d10f      	bne.n	7038 <__aeabi_uldivmod+0x28>
    7018:	2900      	cmp	r1, #0
    701a:	d100      	bne.n	701e <__aeabi_uldivmod+0xe>
    701c:	2800      	cmp	r0, #0
    701e:	d002      	beq.n	7026 <__aeabi_uldivmod+0x16>
    7020:	2100      	movs	r1, #0
    7022:	43c9      	mvns	r1, r1
    7024:	1c08      	adds	r0, r1, #0
    7026:	b407      	push	{r0, r1, r2}
    7028:	4802      	ldr	r0, [pc, #8]	; (7034 <__aeabi_uldivmod+0x24>)
    702a:	a102      	add	r1, pc, #8	; (adr r1, 7034 <__aeabi_uldivmod+0x24>)
    702c:	1840      	adds	r0, r0, r1
    702e:	9002      	str	r0, [sp, #8]
    7030:	bd03      	pop	{r0, r1, pc}
    7032:	46c0      	nop			; (mov r8, r8)
    7034:	ffffff5d 	.word	0xffffff5d
    7038:	b403      	push	{r0, r1}
    703a:	4668      	mov	r0, sp
    703c:	b501      	push	{r0, lr}
    703e:	9802      	ldr	r0, [sp, #8]
    7040:	f000 f842 	bl	70c8 <__udivmoddi4>
    7044:	9b01      	ldr	r3, [sp, #4]
    7046:	469e      	mov	lr, r3
    7048:	b002      	add	sp, #8
    704a:	bc0c      	pop	{r2, r3}
    704c:	4770      	bx	lr
    704e:	46c0      	nop			; (mov r8, r8)

00007050 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    7050:	b570      	push	{r4, r5, r6, lr}
    7052:	2200      	movs	r2, #0
    7054:	4b0c      	ldr	r3, [pc, #48]	; (7088 <__aeabi_d2uiz+0x38>)
    7056:	0004      	movs	r4, r0
    7058:	000d      	movs	r5, r1
    705a:	f7ff ffcf 	bl	6ffc <__aeabi_dcmpge>
    705e:	2800      	cmp	r0, #0
    7060:	d104      	bne.n	706c <__aeabi_d2uiz+0x1c>
    7062:	0020      	movs	r0, r4
    7064:	0029      	movs	r1, r5
    7066:	f000 ffb3 	bl	7fd0 <__aeabi_d2iz>
    706a:	bd70      	pop	{r4, r5, r6, pc}
    706c:	4b06      	ldr	r3, [pc, #24]	; (7088 <__aeabi_d2uiz+0x38>)
    706e:	2200      	movs	r2, #0
    7070:	0020      	movs	r0, r4
    7072:	0029      	movs	r1, r5
    7074:	f000 fc64 	bl	7940 <__aeabi_dsub>
    7078:	f000 ffaa 	bl	7fd0 <__aeabi_d2iz>
    707c:	2380      	movs	r3, #128	; 0x80
    707e:	061b      	lsls	r3, r3, #24
    7080:	469c      	mov	ip, r3
    7082:	4460      	add	r0, ip
    7084:	e7f1      	b.n	706a <__aeabi_d2uiz+0x1a>
    7086:	46c0      	nop			; (mov r8, r8)
    7088:	41e00000 	.word	0x41e00000

0000708c <__aeabi_d2ulz>:
__fixunsdfdi():
    708c:	b570      	push	{r4, r5, r6, lr}
    708e:	2200      	movs	r2, #0
    7090:	4b0b      	ldr	r3, [pc, #44]	; (70c0 <__aeabi_d2ulz+0x34>)
    7092:	000d      	movs	r5, r1
    7094:	0004      	movs	r4, r0
    7096:	f000 f9e1 	bl	745c <__aeabi_dmul>
    709a:	f7ff ffd9 	bl	7050 <__aeabi_d2uiz>
    709e:	0006      	movs	r6, r0
    70a0:	f000 ffcc 	bl	803c <__aeabi_ui2d>
    70a4:	2200      	movs	r2, #0
    70a6:	4b07      	ldr	r3, [pc, #28]	; (70c4 <__aeabi_d2ulz+0x38>)
    70a8:	f000 f9d8 	bl	745c <__aeabi_dmul>
    70ac:	0002      	movs	r2, r0
    70ae:	000b      	movs	r3, r1
    70b0:	0020      	movs	r0, r4
    70b2:	0029      	movs	r1, r5
    70b4:	f000 fc44 	bl	7940 <__aeabi_dsub>
    70b8:	f7ff ffca 	bl	7050 <__aeabi_d2uiz>
    70bc:	0031      	movs	r1, r6
    70be:	bd70      	pop	{r4, r5, r6, pc}
    70c0:	3df00000 	.word	0x3df00000
    70c4:	41f00000 	.word	0x41f00000

000070c8 <__udivmoddi4>:
__udivmoddi4():
    70c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    70ca:	464f      	mov	r7, r9
    70cc:	4646      	mov	r6, r8
    70ce:	46d6      	mov	lr, sl
    70d0:	b5c0      	push	{r6, r7, lr}
    70d2:	0004      	movs	r4, r0
    70d4:	b082      	sub	sp, #8
    70d6:	000d      	movs	r5, r1
    70d8:	4691      	mov	r9, r2
    70da:	4698      	mov	r8, r3
    70dc:	428b      	cmp	r3, r1
    70de:	d82f      	bhi.n	7140 <__udivmoddi4+0x78>
    70e0:	d02c      	beq.n	713c <__udivmoddi4+0x74>
    70e2:	4641      	mov	r1, r8
    70e4:	4648      	mov	r0, r9
    70e6:	f000 fff9 	bl	80dc <__clzdi2>
    70ea:	0029      	movs	r1, r5
    70ec:	0006      	movs	r6, r0
    70ee:	0020      	movs	r0, r4
    70f0:	f000 fff4 	bl	80dc <__clzdi2>
    70f4:	1a33      	subs	r3, r6, r0
    70f6:	469c      	mov	ip, r3
    70f8:	3b20      	subs	r3, #32
    70fa:	469a      	mov	sl, r3
    70fc:	d500      	bpl.n	7100 <__udivmoddi4+0x38>
    70fe:	e076      	b.n	71ee <__udivmoddi4+0x126>
    7100:	464b      	mov	r3, r9
    7102:	4652      	mov	r2, sl
    7104:	4093      	lsls	r3, r2
    7106:	001f      	movs	r7, r3
    7108:	464b      	mov	r3, r9
    710a:	4662      	mov	r2, ip
    710c:	4093      	lsls	r3, r2
    710e:	001e      	movs	r6, r3
    7110:	42af      	cmp	r7, r5
    7112:	d828      	bhi.n	7166 <__udivmoddi4+0x9e>
    7114:	d025      	beq.n	7162 <__udivmoddi4+0x9a>
    7116:	4653      	mov	r3, sl
    7118:	1ba4      	subs	r4, r4, r6
    711a:	41bd      	sbcs	r5, r7
    711c:	2b00      	cmp	r3, #0
    711e:	da00      	bge.n	7122 <__udivmoddi4+0x5a>
    7120:	e07b      	b.n	721a <__udivmoddi4+0x152>
    7122:	2200      	movs	r2, #0
    7124:	2300      	movs	r3, #0
    7126:	9200      	str	r2, [sp, #0]
    7128:	9301      	str	r3, [sp, #4]
    712a:	2301      	movs	r3, #1
    712c:	4652      	mov	r2, sl
    712e:	4093      	lsls	r3, r2
    7130:	9301      	str	r3, [sp, #4]
    7132:	2301      	movs	r3, #1
    7134:	4662      	mov	r2, ip
    7136:	4093      	lsls	r3, r2
    7138:	9300      	str	r3, [sp, #0]
    713a:	e018      	b.n	716e <__udivmoddi4+0xa6>
    713c:	4282      	cmp	r2, r0
    713e:	d9d0      	bls.n	70e2 <__udivmoddi4+0x1a>
    7140:	2200      	movs	r2, #0
    7142:	2300      	movs	r3, #0
    7144:	9200      	str	r2, [sp, #0]
    7146:	9301      	str	r3, [sp, #4]
    7148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    714a:	2b00      	cmp	r3, #0
    714c:	d001      	beq.n	7152 <__udivmoddi4+0x8a>
    714e:	601c      	str	r4, [r3, #0]
    7150:	605d      	str	r5, [r3, #4]
    7152:	9800      	ldr	r0, [sp, #0]
    7154:	9901      	ldr	r1, [sp, #4]
    7156:	b002      	add	sp, #8
    7158:	bc1c      	pop	{r2, r3, r4}
    715a:	4690      	mov	r8, r2
    715c:	4699      	mov	r9, r3
    715e:	46a2      	mov	sl, r4
    7160:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7162:	42a3      	cmp	r3, r4
    7164:	d9d7      	bls.n	7116 <__udivmoddi4+0x4e>
    7166:	2200      	movs	r2, #0
    7168:	2300      	movs	r3, #0
    716a:	9200      	str	r2, [sp, #0]
    716c:	9301      	str	r3, [sp, #4]
    716e:	4663      	mov	r3, ip
    7170:	2b00      	cmp	r3, #0
    7172:	d0e9      	beq.n	7148 <__udivmoddi4+0x80>
    7174:	07fb      	lsls	r3, r7, #31
    7176:	4698      	mov	r8, r3
    7178:	4641      	mov	r1, r8
    717a:	0872      	lsrs	r2, r6, #1
    717c:	430a      	orrs	r2, r1
    717e:	087b      	lsrs	r3, r7, #1
    7180:	4666      	mov	r6, ip
    7182:	e00e      	b.n	71a2 <__udivmoddi4+0xda>
    7184:	42ab      	cmp	r3, r5
    7186:	d101      	bne.n	718c <__udivmoddi4+0xc4>
    7188:	42a2      	cmp	r2, r4
    718a:	d80c      	bhi.n	71a6 <__udivmoddi4+0xde>
    718c:	1aa4      	subs	r4, r4, r2
    718e:	419d      	sbcs	r5, r3
    7190:	2001      	movs	r0, #1
    7192:	1924      	adds	r4, r4, r4
    7194:	416d      	adcs	r5, r5
    7196:	2100      	movs	r1, #0
    7198:	3e01      	subs	r6, #1
    719a:	1824      	adds	r4, r4, r0
    719c:	414d      	adcs	r5, r1
    719e:	2e00      	cmp	r6, #0
    71a0:	d006      	beq.n	71b0 <__udivmoddi4+0xe8>
    71a2:	42ab      	cmp	r3, r5
    71a4:	d9ee      	bls.n	7184 <__udivmoddi4+0xbc>
    71a6:	3e01      	subs	r6, #1
    71a8:	1924      	adds	r4, r4, r4
    71aa:	416d      	adcs	r5, r5
    71ac:	2e00      	cmp	r6, #0
    71ae:	d1f8      	bne.n	71a2 <__udivmoddi4+0xda>
    71b0:	9800      	ldr	r0, [sp, #0]
    71b2:	9901      	ldr	r1, [sp, #4]
    71b4:	4653      	mov	r3, sl
    71b6:	1900      	adds	r0, r0, r4
    71b8:	4169      	adcs	r1, r5
    71ba:	2b00      	cmp	r3, #0
    71bc:	db23      	blt.n	7206 <__udivmoddi4+0x13e>
    71be:	002b      	movs	r3, r5
    71c0:	4652      	mov	r2, sl
    71c2:	40d3      	lsrs	r3, r2
    71c4:	002a      	movs	r2, r5
    71c6:	4664      	mov	r4, ip
    71c8:	40e2      	lsrs	r2, r4
    71ca:	001c      	movs	r4, r3
    71cc:	4653      	mov	r3, sl
    71ce:	0015      	movs	r5, r2
    71d0:	2b00      	cmp	r3, #0
    71d2:	db2d      	blt.n	7230 <__udivmoddi4+0x168>
    71d4:	0026      	movs	r6, r4
    71d6:	4657      	mov	r7, sl
    71d8:	40be      	lsls	r6, r7
    71da:	0033      	movs	r3, r6
    71dc:	0026      	movs	r6, r4
    71de:	4667      	mov	r7, ip
    71e0:	40be      	lsls	r6, r7
    71e2:	0032      	movs	r2, r6
    71e4:	1a80      	subs	r0, r0, r2
    71e6:	4199      	sbcs	r1, r3
    71e8:	9000      	str	r0, [sp, #0]
    71ea:	9101      	str	r1, [sp, #4]
    71ec:	e7ac      	b.n	7148 <__udivmoddi4+0x80>
    71ee:	4662      	mov	r2, ip
    71f0:	2320      	movs	r3, #32
    71f2:	1a9b      	subs	r3, r3, r2
    71f4:	464a      	mov	r2, r9
    71f6:	40da      	lsrs	r2, r3
    71f8:	4661      	mov	r1, ip
    71fa:	0013      	movs	r3, r2
    71fc:	4642      	mov	r2, r8
    71fe:	408a      	lsls	r2, r1
    7200:	0017      	movs	r7, r2
    7202:	431f      	orrs	r7, r3
    7204:	e780      	b.n	7108 <__udivmoddi4+0x40>
    7206:	4662      	mov	r2, ip
    7208:	2320      	movs	r3, #32
    720a:	1a9b      	subs	r3, r3, r2
    720c:	002a      	movs	r2, r5
    720e:	4666      	mov	r6, ip
    7210:	409a      	lsls	r2, r3
    7212:	0023      	movs	r3, r4
    7214:	40f3      	lsrs	r3, r6
    7216:	4313      	orrs	r3, r2
    7218:	e7d4      	b.n	71c4 <__udivmoddi4+0xfc>
    721a:	4662      	mov	r2, ip
    721c:	2320      	movs	r3, #32
    721e:	2100      	movs	r1, #0
    7220:	1a9b      	subs	r3, r3, r2
    7222:	2200      	movs	r2, #0
    7224:	9100      	str	r1, [sp, #0]
    7226:	9201      	str	r2, [sp, #4]
    7228:	2201      	movs	r2, #1
    722a:	40da      	lsrs	r2, r3
    722c:	9201      	str	r2, [sp, #4]
    722e:	e780      	b.n	7132 <__udivmoddi4+0x6a>
    7230:	2320      	movs	r3, #32
    7232:	4662      	mov	r2, ip
    7234:	0026      	movs	r6, r4
    7236:	1a9b      	subs	r3, r3, r2
    7238:	40de      	lsrs	r6, r3
    723a:	002f      	movs	r7, r5
    723c:	46b0      	mov	r8, r6
    723e:	4666      	mov	r6, ip
    7240:	40b7      	lsls	r7, r6
    7242:	4646      	mov	r6, r8
    7244:	003b      	movs	r3, r7
    7246:	4333      	orrs	r3, r6
    7248:	e7c8      	b.n	71dc <__udivmoddi4+0x114>
    724a:	46c0      	nop			; (mov r8, r8)

0000724c <__eqdf2>:
__nedf2():
    724c:	b5f0      	push	{r4, r5, r6, r7, lr}
    724e:	464f      	mov	r7, r9
    7250:	4646      	mov	r6, r8
    7252:	46d6      	mov	lr, sl
    7254:	4684      	mov	ip, r0
    7256:	b5c0      	push	{r6, r7, lr}
    7258:	4680      	mov	r8, r0
    725a:	4e19      	ldr	r6, [pc, #100]	; (72c0 <__eqdf2+0x74>)
    725c:	0318      	lsls	r0, r3, #12
    725e:	030f      	lsls	r7, r1, #12
    7260:	004d      	lsls	r5, r1, #1
    7262:	0b00      	lsrs	r0, r0, #12
    7264:	005c      	lsls	r4, r3, #1
    7266:	4682      	mov	sl, r0
    7268:	0b3f      	lsrs	r7, r7, #12
    726a:	0d6d      	lsrs	r5, r5, #21
    726c:	0fc9      	lsrs	r1, r1, #31
    726e:	4691      	mov	r9, r2
    7270:	0d64      	lsrs	r4, r4, #21
    7272:	0fdb      	lsrs	r3, r3, #31
    7274:	2001      	movs	r0, #1
    7276:	42b5      	cmp	r5, r6
    7278:	d00a      	beq.n	7290 <__eqdf2+0x44>
    727a:	42b4      	cmp	r4, r6
    727c:	d003      	beq.n	7286 <__eqdf2+0x3a>
    727e:	42a5      	cmp	r5, r4
    7280:	d101      	bne.n	7286 <__eqdf2+0x3a>
    7282:	4557      	cmp	r7, sl
    7284:	d00c      	beq.n	72a0 <__eqdf2+0x54>
    7286:	bc1c      	pop	{r2, r3, r4}
    7288:	4690      	mov	r8, r2
    728a:	4699      	mov	r9, r3
    728c:	46a2      	mov	sl, r4
    728e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7290:	4666      	mov	r6, ip
    7292:	433e      	orrs	r6, r7
    7294:	d1f7      	bne.n	7286 <__eqdf2+0x3a>
    7296:	42ac      	cmp	r4, r5
    7298:	d1f5      	bne.n	7286 <__eqdf2+0x3a>
    729a:	4654      	mov	r4, sl
    729c:	4314      	orrs	r4, r2
    729e:	d1f2      	bne.n	7286 <__eqdf2+0x3a>
    72a0:	2001      	movs	r0, #1
    72a2:	45c8      	cmp	r8, r9
    72a4:	d1ef      	bne.n	7286 <__eqdf2+0x3a>
    72a6:	4299      	cmp	r1, r3
    72a8:	d007      	beq.n	72ba <__eqdf2+0x6e>
    72aa:	2d00      	cmp	r5, #0
    72ac:	d1eb      	bne.n	7286 <__eqdf2+0x3a>
    72ae:	4663      	mov	r3, ip
    72b0:	431f      	orrs	r7, r3
    72b2:	0038      	movs	r0, r7
    72b4:	1e47      	subs	r7, r0, #1
    72b6:	41b8      	sbcs	r0, r7
    72b8:	e7e5      	b.n	7286 <__eqdf2+0x3a>
    72ba:	2000      	movs	r0, #0
    72bc:	e7e3      	b.n	7286 <__eqdf2+0x3a>
    72be:	46c0      	nop			; (mov r8, r8)
    72c0:	000007ff 	.word	0x000007ff

000072c4 <__gedf2>:
__gedf2():
    72c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    72c6:	464f      	mov	r7, r9
    72c8:	4646      	mov	r6, r8
    72ca:	46d6      	mov	lr, sl
    72cc:	004d      	lsls	r5, r1, #1
    72ce:	b5c0      	push	{r6, r7, lr}
    72d0:	030e      	lsls	r6, r1, #12
    72d2:	0fc9      	lsrs	r1, r1, #31
    72d4:	468a      	mov	sl, r1
    72d6:	492c      	ldr	r1, [pc, #176]	; (7388 <__gedf2+0xc4>)
    72d8:	031f      	lsls	r7, r3, #12
    72da:	005c      	lsls	r4, r3, #1
    72dc:	4680      	mov	r8, r0
    72de:	0b36      	lsrs	r6, r6, #12
    72e0:	0d6d      	lsrs	r5, r5, #21
    72e2:	4691      	mov	r9, r2
    72e4:	0b3f      	lsrs	r7, r7, #12
    72e6:	0d64      	lsrs	r4, r4, #21
    72e8:	0fdb      	lsrs	r3, r3, #31
    72ea:	428d      	cmp	r5, r1
    72ec:	d01e      	beq.n	732c <__gedf2+0x68>
    72ee:	428c      	cmp	r4, r1
    72f0:	d016      	beq.n	7320 <__gedf2+0x5c>
    72f2:	2d00      	cmp	r5, #0
    72f4:	d11e      	bne.n	7334 <__gedf2+0x70>
    72f6:	4330      	orrs	r0, r6
    72f8:	4684      	mov	ip, r0
    72fa:	2c00      	cmp	r4, #0
    72fc:	d101      	bne.n	7302 <__gedf2+0x3e>
    72fe:	433a      	orrs	r2, r7
    7300:	d023      	beq.n	734a <__gedf2+0x86>
    7302:	4662      	mov	r2, ip
    7304:	2a00      	cmp	r2, #0
    7306:	d01a      	beq.n	733e <__gedf2+0x7a>
    7308:	459a      	cmp	sl, r3
    730a:	d029      	beq.n	7360 <__gedf2+0x9c>
    730c:	4651      	mov	r1, sl
    730e:	2002      	movs	r0, #2
    7310:	3901      	subs	r1, #1
    7312:	4008      	ands	r0, r1
    7314:	3801      	subs	r0, #1
    7316:	bc1c      	pop	{r2, r3, r4}
    7318:	4690      	mov	r8, r2
    731a:	4699      	mov	r9, r3
    731c:	46a2      	mov	sl, r4
    731e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7320:	0039      	movs	r1, r7
    7322:	4311      	orrs	r1, r2
    7324:	d0e5      	beq.n	72f2 <__gedf2+0x2e>
    7326:	2002      	movs	r0, #2
    7328:	4240      	negs	r0, r0
    732a:	e7f4      	b.n	7316 <__gedf2+0x52>
    732c:	4330      	orrs	r0, r6
    732e:	d1fa      	bne.n	7326 <__gedf2+0x62>
    7330:	42ac      	cmp	r4, r5
    7332:	d00f      	beq.n	7354 <__gedf2+0x90>
    7334:	2c00      	cmp	r4, #0
    7336:	d10f      	bne.n	7358 <__gedf2+0x94>
    7338:	433a      	orrs	r2, r7
    733a:	d0e7      	beq.n	730c <__gedf2+0x48>
    733c:	e00c      	b.n	7358 <__gedf2+0x94>
    733e:	2201      	movs	r2, #1
    7340:	3b01      	subs	r3, #1
    7342:	4393      	bics	r3, r2
    7344:	0018      	movs	r0, r3
    7346:	3001      	adds	r0, #1
    7348:	e7e5      	b.n	7316 <__gedf2+0x52>
    734a:	4663      	mov	r3, ip
    734c:	2000      	movs	r0, #0
    734e:	2b00      	cmp	r3, #0
    7350:	d0e1      	beq.n	7316 <__gedf2+0x52>
    7352:	e7db      	b.n	730c <__gedf2+0x48>
    7354:	433a      	orrs	r2, r7
    7356:	d1e6      	bne.n	7326 <__gedf2+0x62>
    7358:	459a      	cmp	sl, r3
    735a:	d1d7      	bne.n	730c <__gedf2+0x48>
    735c:	42a5      	cmp	r5, r4
    735e:	dcd5      	bgt.n	730c <__gedf2+0x48>
    7360:	42a5      	cmp	r5, r4
    7362:	db05      	blt.n	7370 <__gedf2+0xac>
    7364:	42be      	cmp	r6, r7
    7366:	d8d1      	bhi.n	730c <__gedf2+0x48>
    7368:	d008      	beq.n	737c <__gedf2+0xb8>
    736a:	2000      	movs	r0, #0
    736c:	42be      	cmp	r6, r7
    736e:	d2d2      	bcs.n	7316 <__gedf2+0x52>
    7370:	4650      	mov	r0, sl
    7372:	2301      	movs	r3, #1
    7374:	3801      	subs	r0, #1
    7376:	4398      	bics	r0, r3
    7378:	3001      	adds	r0, #1
    737a:	e7cc      	b.n	7316 <__gedf2+0x52>
    737c:	45c8      	cmp	r8, r9
    737e:	d8c5      	bhi.n	730c <__gedf2+0x48>
    7380:	2000      	movs	r0, #0
    7382:	45c8      	cmp	r8, r9
    7384:	d3f4      	bcc.n	7370 <__gedf2+0xac>
    7386:	e7c6      	b.n	7316 <__gedf2+0x52>
    7388:	000007ff 	.word	0x000007ff

0000738c <__ledf2>:
__ledf2():
    738c:	b5f0      	push	{r4, r5, r6, r7, lr}
    738e:	464f      	mov	r7, r9
    7390:	4646      	mov	r6, r8
    7392:	46d6      	mov	lr, sl
    7394:	004d      	lsls	r5, r1, #1
    7396:	b5c0      	push	{r6, r7, lr}
    7398:	030e      	lsls	r6, r1, #12
    739a:	0fc9      	lsrs	r1, r1, #31
    739c:	468a      	mov	sl, r1
    739e:	492e      	ldr	r1, [pc, #184]	; (7458 <__ledf2+0xcc>)
    73a0:	031f      	lsls	r7, r3, #12
    73a2:	005c      	lsls	r4, r3, #1
    73a4:	4680      	mov	r8, r0
    73a6:	0b36      	lsrs	r6, r6, #12
    73a8:	0d6d      	lsrs	r5, r5, #21
    73aa:	4691      	mov	r9, r2
    73ac:	0b3f      	lsrs	r7, r7, #12
    73ae:	0d64      	lsrs	r4, r4, #21
    73b0:	0fdb      	lsrs	r3, r3, #31
    73b2:	428d      	cmp	r5, r1
    73b4:	d018      	beq.n	73e8 <__ledf2+0x5c>
    73b6:	428c      	cmp	r4, r1
    73b8:	d011      	beq.n	73de <__ledf2+0x52>
    73ba:	2d00      	cmp	r5, #0
    73bc:	d118      	bne.n	73f0 <__ledf2+0x64>
    73be:	4330      	orrs	r0, r6
    73c0:	4684      	mov	ip, r0
    73c2:	2c00      	cmp	r4, #0
    73c4:	d11e      	bne.n	7404 <__ledf2+0x78>
    73c6:	433a      	orrs	r2, r7
    73c8:	d11c      	bne.n	7404 <__ledf2+0x78>
    73ca:	4663      	mov	r3, ip
    73cc:	2000      	movs	r0, #0
    73ce:	2b00      	cmp	r3, #0
    73d0:	d030      	beq.n	7434 <__ledf2+0xa8>
    73d2:	4651      	mov	r1, sl
    73d4:	2002      	movs	r0, #2
    73d6:	3901      	subs	r1, #1
    73d8:	4008      	ands	r0, r1
    73da:	3801      	subs	r0, #1
    73dc:	e02a      	b.n	7434 <__ledf2+0xa8>
    73de:	0039      	movs	r1, r7
    73e0:	4311      	orrs	r1, r2
    73e2:	d0ea      	beq.n	73ba <__ledf2+0x2e>
    73e4:	2002      	movs	r0, #2
    73e6:	e025      	b.n	7434 <__ledf2+0xa8>
    73e8:	4330      	orrs	r0, r6
    73ea:	d1fb      	bne.n	73e4 <__ledf2+0x58>
    73ec:	42ac      	cmp	r4, r5
    73ee:	d026      	beq.n	743e <__ledf2+0xb2>
    73f0:	2c00      	cmp	r4, #0
    73f2:	d126      	bne.n	7442 <__ledf2+0xb6>
    73f4:	433a      	orrs	r2, r7
    73f6:	d124      	bne.n	7442 <__ledf2+0xb6>
    73f8:	4651      	mov	r1, sl
    73fa:	2002      	movs	r0, #2
    73fc:	3901      	subs	r1, #1
    73fe:	4008      	ands	r0, r1
    7400:	3801      	subs	r0, #1
    7402:	e017      	b.n	7434 <__ledf2+0xa8>
    7404:	4662      	mov	r2, ip
    7406:	2a00      	cmp	r2, #0
    7408:	d00f      	beq.n	742a <__ledf2+0x9e>
    740a:	459a      	cmp	sl, r3
    740c:	d1e1      	bne.n	73d2 <__ledf2+0x46>
    740e:	42a5      	cmp	r5, r4
    7410:	db05      	blt.n	741e <__ledf2+0x92>
    7412:	42be      	cmp	r6, r7
    7414:	d8dd      	bhi.n	73d2 <__ledf2+0x46>
    7416:	d019      	beq.n	744c <__ledf2+0xc0>
    7418:	2000      	movs	r0, #0
    741a:	42be      	cmp	r6, r7
    741c:	d20a      	bcs.n	7434 <__ledf2+0xa8>
    741e:	4650      	mov	r0, sl
    7420:	2301      	movs	r3, #1
    7422:	3801      	subs	r0, #1
    7424:	4398      	bics	r0, r3
    7426:	3001      	adds	r0, #1
    7428:	e004      	b.n	7434 <__ledf2+0xa8>
    742a:	2201      	movs	r2, #1
    742c:	3b01      	subs	r3, #1
    742e:	4393      	bics	r3, r2
    7430:	0018      	movs	r0, r3
    7432:	3001      	adds	r0, #1
    7434:	bc1c      	pop	{r2, r3, r4}
    7436:	4690      	mov	r8, r2
    7438:	4699      	mov	r9, r3
    743a:	46a2      	mov	sl, r4
    743c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    743e:	433a      	orrs	r2, r7
    7440:	d1d0      	bne.n	73e4 <__ledf2+0x58>
    7442:	459a      	cmp	sl, r3
    7444:	d1c5      	bne.n	73d2 <__ledf2+0x46>
    7446:	42a5      	cmp	r5, r4
    7448:	dcc3      	bgt.n	73d2 <__ledf2+0x46>
    744a:	e7e0      	b.n	740e <__ledf2+0x82>
    744c:	45c8      	cmp	r8, r9
    744e:	d8c0      	bhi.n	73d2 <__ledf2+0x46>
    7450:	2000      	movs	r0, #0
    7452:	45c8      	cmp	r8, r9
    7454:	d3e3      	bcc.n	741e <__ledf2+0x92>
    7456:	e7ed      	b.n	7434 <__ledf2+0xa8>
    7458:	000007ff 	.word	0x000007ff

0000745c <__aeabi_dmul>:
__aeabi_dmul():
    745c:	b5f0      	push	{r4, r5, r6, r7, lr}
    745e:	4657      	mov	r7, sl
    7460:	46de      	mov	lr, fp
    7462:	464e      	mov	r6, r9
    7464:	4645      	mov	r5, r8
    7466:	b5e0      	push	{r5, r6, r7, lr}
    7468:	4683      	mov	fp, r0
    746a:	0006      	movs	r6, r0
    746c:	030f      	lsls	r7, r1, #12
    746e:	0048      	lsls	r0, r1, #1
    7470:	b087      	sub	sp, #28
    7472:	4692      	mov	sl, r2
    7474:	001d      	movs	r5, r3
    7476:	0b3f      	lsrs	r7, r7, #12
    7478:	0d40      	lsrs	r0, r0, #21
    747a:	0fcc      	lsrs	r4, r1, #31
    747c:	2800      	cmp	r0, #0
    747e:	d100      	bne.n	7482 <__aeabi_dmul+0x26>
    7480:	e06f      	b.n	7562 <__aeabi_dmul+0x106>
    7482:	4bde      	ldr	r3, [pc, #888]	; (77fc <__aeabi_dmul+0x3a0>)
    7484:	4298      	cmp	r0, r3
    7486:	d038      	beq.n	74fa <__aeabi_dmul+0x9e>
    7488:	2380      	movs	r3, #128	; 0x80
    748a:	00ff      	lsls	r7, r7, #3
    748c:	041b      	lsls	r3, r3, #16
    748e:	431f      	orrs	r7, r3
    7490:	0f73      	lsrs	r3, r6, #29
    7492:	433b      	orrs	r3, r7
    7494:	9301      	str	r3, [sp, #4]
    7496:	4bda      	ldr	r3, [pc, #872]	; (7800 <__aeabi_dmul+0x3a4>)
    7498:	2700      	movs	r7, #0
    749a:	4699      	mov	r9, r3
    749c:	2300      	movs	r3, #0
    749e:	469b      	mov	fp, r3
    74a0:	00f6      	lsls	r6, r6, #3
    74a2:	4481      	add	r9, r0
    74a4:	032b      	lsls	r3, r5, #12
    74a6:	0069      	lsls	r1, r5, #1
    74a8:	0b1b      	lsrs	r3, r3, #12
    74aa:	4652      	mov	r2, sl
    74ac:	4698      	mov	r8, r3
    74ae:	0d49      	lsrs	r1, r1, #21
    74b0:	0fed      	lsrs	r5, r5, #31
    74b2:	2900      	cmp	r1, #0
    74b4:	d100      	bne.n	74b8 <__aeabi_dmul+0x5c>
    74b6:	e085      	b.n	75c4 <__aeabi_dmul+0x168>
    74b8:	4bd0      	ldr	r3, [pc, #832]	; (77fc <__aeabi_dmul+0x3a0>)
    74ba:	4299      	cmp	r1, r3
    74bc:	d100      	bne.n	74c0 <__aeabi_dmul+0x64>
    74be:	e073      	b.n	75a8 <__aeabi_dmul+0x14c>
    74c0:	4643      	mov	r3, r8
    74c2:	00da      	lsls	r2, r3, #3
    74c4:	2380      	movs	r3, #128	; 0x80
    74c6:	041b      	lsls	r3, r3, #16
    74c8:	4313      	orrs	r3, r2
    74ca:	4652      	mov	r2, sl
    74cc:	48cc      	ldr	r0, [pc, #816]	; (7800 <__aeabi_dmul+0x3a4>)
    74ce:	0f52      	lsrs	r2, r2, #29
    74d0:	4684      	mov	ip, r0
    74d2:	4313      	orrs	r3, r2
    74d4:	4652      	mov	r2, sl
    74d6:	2000      	movs	r0, #0
    74d8:	4461      	add	r1, ip
    74da:	00d2      	lsls	r2, r2, #3
    74dc:	4489      	add	r9, r1
    74de:	0021      	movs	r1, r4
    74e0:	4069      	eors	r1, r5
    74e2:	9100      	str	r1, [sp, #0]
    74e4:	468c      	mov	ip, r1
    74e6:	2101      	movs	r1, #1
    74e8:	4449      	add	r1, r9
    74ea:	468a      	mov	sl, r1
    74ec:	2f0f      	cmp	r7, #15
    74ee:	d900      	bls.n	74f2 <__aeabi_dmul+0x96>
    74f0:	e090      	b.n	7614 <__aeabi_dmul+0x1b8>
    74f2:	49c4      	ldr	r1, [pc, #784]	; (7804 <__aeabi_dmul+0x3a8>)
    74f4:	00bf      	lsls	r7, r7, #2
    74f6:	59cf      	ldr	r7, [r1, r7]
    74f8:	46bf      	mov	pc, r7
    74fa:	465b      	mov	r3, fp
    74fc:	433b      	orrs	r3, r7
    74fe:	9301      	str	r3, [sp, #4]
    7500:	d000      	beq.n	7504 <__aeabi_dmul+0xa8>
    7502:	e16a      	b.n	77da <__aeabi_dmul+0x37e>
    7504:	2302      	movs	r3, #2
    7506:	2708      	movs	r7, #8
    7508:	2600      	movs	r6, #0
    750a:	4681      	mov	r9, r0
    750c:	469b      	mov	fp, r3
    750e:	e7c9      	b.n	74a4 <__aeabi_dmul+0x48>
    7510:	0032      	movs	r2, r6
    7512:	4658      	mov	r0, fp
    7514:	9b01      	ldr	r3, [sp, #4]
    7516:	4661      	mov	r1, ip
    7518:	9100      	str	r1, [sp, #0]
    751a:	2802      	cmp	r0, #2
    751c:	d100      	bne.n	7520 <__aeabi_dmul+0xc4>
    751e:	e075      	b.n	760c <__aeabi_dmul+0x1b0>
    7520:	2803      	cmp	r0, #3
    7522:	d100      	bne.n	7526 <__aeabi_dmul+0xca>
    7524:	e1fe      	b.n	7924 <__aeabi_dmul+0x4c8>
    7526:	2801      	cmp	r0, #1
    7528:	d000      	beq.n	752c <__aeabi_dmul+0xd0>
    752a:	e12c      	b.n	7786 <__aeabi_dmul+0x32a>
    752c:	2300      	movs	r3, #0
    752e:	2700      	movs	r7, #0
    7530:	2600      	movs	r6, #0
    7532:	2500      	movs	r5, #0
    7534:	033f      	lsls	r7, r7, #12
    7536:	0d2a      	lsrs	r2, r5, #20
    7538:	0b3f      	lsrs	r7, r7, #12
    753a:	48b3      	ldr	r0, [pc, #716]	; (7808 <__aeabi_dmul+0x3ac>)
    753c:	0512      	lsls	r2, r2, #20
    753e:	433a      	orrs	r2, r7
    7540:	4002      	ands	r2, r0
    7542:	051b      	lsls	r3, r3, #20
    7544:	4313      	orrs	r3, r2
    7546:	9a00      	ldr	r2, [sp, #0]
    7548:	005b      	lsls	r3, r3, #1
    754a:	07d1      	lsls	r1, r2, #31
    754c:	085b      	lsrs	r3, r3, #1
    754e:	430b      	orrs	r3, r1
    7550:	0030      	movs	r0, r6
    7552:	0019      	movs	r1, r3
    7554:	b007      	add	sp, #28
    7556:	bc3c      	pop	{r2, r3, r4, r5}
    7558:	4690      	mov	r8, r2
    755a:	4699      	mov	r9, r3
    755c:	46a2      	mov	sl, r4
    755e:	46ab      	mov	fp, r5
    7560:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7562:	465b      	mov	r3, fp
    7564:	433b      	orrs	r3, r7
    7566:	9301      	str	r3, [sp, #4]
    7568:	d100      	bne.n	756c <__aeabi_dmul+0x110>
    756a:	e12f      	b.n	77cc <__aeabi_dmul+0x370>
    756c:	2f00      	cmp	r7, #0
    756e:	d100      	bne.n	7572 <__aeabi_dmul+0x116>
    7570:	e1a5      	b.n	78be <__aeabi_dmul+0x462>
    7572:	0038      	movs	r0, r7
    7574:	f000 fd94 	bl	80a0 <__clzsi2>
    7578:	0003      	movs	r3, r0
    757a:	3b0b      	subs	r3, #11
    757c:	2b1c      	cmp	r3, #28
    757e:	dd00      	ble.n	7582 <__aeabi_dmul+0x126>
    7580:	e196      	b.n	78b0 <__aeabi_dmul+0x454>
    7582:	221d      	movs	r2, #29
    7584:	1ad3      	subs	r3, r2, r3
    7586:	465a      	mov	r2, fp
    7588:	0001      	movs	r1, r0
    758a:	40da      	lsrs	r2, r3
    758c:	465e      	mov	r6, fp
    758e:	3908      	subs	r1, #8
    7590:	408f      	lsls	r7, r1
    7592:	0013      	movs	r3, r2
    7594:	408e      	lsls	r6, r1
    7596:	433b      	orrs	r3, r7
    7598:	9301      	str	r3, [sp, #4]
    759a:	4b9c      	ldr	r3, [pc, #624]	; (780c <__aeabi_dmul+0x3b0>)
    759c:	2700      	movs	r7, #0
    759e:	1a1b      	subs	r3, r3, r0
    75a0:	4699      	mov	r9, r3
    75a2:	2300      	movs	r3, #0
    75a4:	469b      	mov	fp, r3
    75a6:	e77d      	b.n	74a4 <__aeabi_dmul+0x48>
    75a8:	4641      	mov	r1, r8
    75aa:	4653      	mov	r3, sl
    75ac:	430b      	orrs	r3, r1
    75ae:	4993      	ldr	r1, [pc, #588]	; (77fc <__aeabi_dmul+0x3a0>)
    75b0:	468c      	mov	ip, r1
    75b2:	44e1      	add	r9, ip
    75b4:	2b00      	cmp	r3, #0
    75b6:	d000      	beq.n	75ba <__aeabi_dmul+0x15e>
    75b8:	e11a      	b.n	77f0 <__aeabi_dmul+0x394>
    75ba:	2202      	movs	r2, #2
    75bc:	2002      	movs	r0, #2
    75be:	4317      	orrs	r7, r2
    75c0:	2200      	movs	r2, #0
    75c2:	e78c      	b.n	74de <__aeabi_dmul+0x82>
    75c4:	4313      	orrs	r3, r2
    75c6:	d100      	bne.n	75ca <__aeabi_dmul+0x16e>
    75c8:	e10d      	b.n	77e6 <__aeabi_dmul+0x38a>
    75ca:	4643      	mov	r3, r8
    75cc:	2b00      	cmp	r3, #0
    75ce:	d100      	bne.n	75d2 <__aeabi_dmul+0x176>
    75d0:	e181      	b.n	78d6 <__aeabi_dmul+0x47a>
    75d2:	4640      	mov	r0, r8
    75d4:	f000 fd64 	bl	80a0 <__clzsi2>
    75d8:	0002      	movs	r2, r0
    75da:	3a0b      	subs	r2, #11
    75dc:	2a1c      	cmp	r2, #28
    75de:	dd00      	ble.n	75e2 <__aeabi_dmul+0x186>
    75e0:	e172      	b.n	78c8 <__aeabi_dmul+0x46c>
    75e2:	0001      	movs	r1, r0
    75e4:	4643      	mov	r3, r8
    75e6:	3908      	subs	r1, #8
    75e8:	408b      	lsls	r3, r1
    75ea:	4698      	mov	r8, r3
    75ec:	231d      	movs	r3, #29
    75ee:	1a9a      	subs	r2, r3, r2
    75f0:	4653      	mov	r3, sl
    75f2:	40d3      	lsrs	r3, r2
    75f4:	001a      	movs	r2, r3
    75f6:	4643      	mov	r3, r8
    75f8:	4313      	orrs	r3, r2
    75fa:	4652      	mov	r2, sl
    75fc:	408a      	lsls	r2, r1
    75fe:	4649      	mov	r1, r9
    7600:	1a08      	subs	r0, r1, r0
    7602:	4982      	ldr	r1, [pc, #520]	; (780c <__aeabi_dmul+0x3b0>)
    7604:	4689      	mov	r9, r1
    7606:	4481      	add	r9, r0
    7608:	2000      	movs	r0, #0
    760a:	e768      	b.n	74de <__aeabi_dmul+0x82>
    760c:	4b7b      	ldr	r3, [pc, #492]	; (77fc <__aeabi_dmul+0x3a0>)
    760e:	2700      	movs	r7, #0
    7610:	2600      	movs	r6, #0
    7612:	e78e      	b.n	7532 <__aeabi_dmul+0xd6>
    7614:	0c14      	lsrs	r4, r2, #16
    7616:	0412      	lsls	r2, r2, #16
    7618:	0c12      	lsrs	r2, r2, #16
    761a:	0011      	movs	r1, r2
    761c:	0c37      	lsrs	r7, r6, #16
    761e:	0436      	lsls	r6, r6, #16
    7620:	0c35      	lsrs	r5, r6, #16
    7622:	4379      	muls	r1, r7
    7624:	0028      	movs	r0, r5
    7626:	468c      	mov	ip, r1
    7628:	002e      	movs	r6, r5
    762a:	4360      	muls	r0, r4
    762c:	4460      	add	r0, ip
    762e:	4683      	mov	fp, r0
    7630:	4356      	muls	r6, r2
    7632:	0021      	movs	r1, r4
    7634:	0c30      	lsrs	r0, r6, #16
    7636:	4680      	mov	r8, r0
    7638:	4658      	mov	r0, fp
    763a:	4379      	muls	r1, r7
    763c:	4440      	add	r0, r8
    763e:	9102      	str	r1, [sp, #8]
    7640:	4584      	cmp	ip, r0
    7642:	d906      	bls.n	7652 <__aeabi_dmul+0x1f6>
    7644:	4688      	mov	r8, r1
    7646:	2180      	movs	r1, #128	; 0x80
    7648:	0249      	lsls	r1, r1, #9
    764a:	468c      	mov	ip, r1
    764c:	44e0      	add	r8, ip
    764e:	4641      	mov	r1, r8
    7650:	9102      	str	r1, [sp, #8]
    7652:	0436      	lsls	r6, r6, #16
    7654:	0c01      	lsrs	r1, r0, #16
    7656:	0c36      	lsrs	r6, r6, #16
    7658:	0400      	lsls	r0, r0, #16
    765a:	468b      	mov	fp, r1
    765c:	1981      	adds	r1, r0, r6
    765e:	0c1e      	lsrs	r6, r3, #16
    7660:	041b      	lsls	r3, r3, #16
    7662:	0c1b      	lsrs	r3, r3, #16
    7664:	9103      	str	r1, [sp, #12]
    7666:	0019      	movs	r1, r3
    7668:	4379      	muls	r1, r7
    766a:	468c      	mov	ip, r1
    766c:	0028      	movs	r0, r5
    766e:	4375      	muls	r5, r6
    7670:	4465      	add	r5, ip
    7672:	46a8      	mov	r8, r5
    7674:	4358      	muls	r0, r3
    7676:	0c05      	lsrs	r5, r0, #16
    7678:	4445      	add	r5, r8
    767a:	4377      	muls	r7, r6
    767c:	42a9      	cmp	r1, r5
    767e:	d903      	bls.n	7688 <__aeabi_dmul+0x22c>
    7680:	2180      	movs	r1, #128	; 0x80
    7682:	0249      	lsls	r1, r1, #9
    7684:	468c      	mov	ip, r1
    7686:	4467      	add	r7, ip
    7688:	0c29      	lsrs	r1, r5, #16
    768a:	468c      	mov	ip, r1
    768c:	0039      	movs	r1, r7
    768e:	0400      	lsls	r0, r0, #16
    7690:	0c00      	lsrs	r0, r0, #16
    7692:	042d      	lsls	r5, r5, #16
    7694:	182d      	adds	r5, r5, r0
    7696:	4461      	add	r1, ip
    7698:	44ab      	add	fp, r5
    769a:	9105      	str	r1, [sp, #20]
    769c:	4659      	mov	r1, fp
    769e:	9104      	str	r1, [sp, #16]
    76a0:	9901      	ldr	r1, [sp, #4]
    76a2:	040f      	lsls	r7, r1, #16
    76a4:	0c3f      	lsrs	r7, r7, #16
    76a6:	0c08      	lsrs	r0, r1, #16
    76a8:	0039      	movs	r1, r7
    76aa:	4351      	muls	r1, r2
    76ac:	4342      	muls	r2, r0
    76ae:	4690      	mov	r8, r2
    76b0:	0002      	movs	r2, r0
    76b2:	468c      	mov	ip, r1
    76b4:	0c09      	lsrs	r1, r1, #16
    76b6:	468b      	mov	fp, r1
    76b8:	4362      	muls	r2, r4
    76ba:	437c      	muls	r4, r7
    76bc:	4444      	add	r4, r8
    76be:	445c      	add	r4, fp
    76c0:	45a0      	cmp	r8, r4
    76c2:	d903      	bls.n	76cc <__aeabi_dmul+0x270>
    76c4:	2180      	movs	r1, #128	; 0x80
    76c6:	0249      	lsls	r1, r1, #9
    76c8:	4688      	mov	r8, r1
    76ca:	4442      	add	r2, r8
    76cc:	0c21      	lsrs	r1, r4, #16
    76ce:	4688      	mov	r8, r1
    76d0:	4661      	mov	r1, ip
    76d2:	0409      	lsls	r1, r1, #16
    76d4:	0c09      	lsrs	r1, r1, #16
    76d6:	468c      	mov	ip, r1
    76d8:	0039      	movs	r1, r7
    76da:	4359      	muls	r1, r3
    76dc:	4343      	muls	r3, r0
    76de:	4370      	muls	r0, r6
    76e0:	437e      	muls	r6, r7
    76e2:	0c0f      	lsrs	r7, r1, #16
    76e4:	18f6      	adds	r6, r6, r3
    76e6:	0424      	lsls	r4, r4, #16
    76e8:	19be      	adds	r6, r7, r6
    76ea:	4464      	add	r4, ip
    76ec:	4442      	add	r2, r8
    76ee:	468c      	mov	ip, r1
    76f0:	42b3      	cmp	r3, r6
    76f2:	d903      	bls.n	76fc <__aeabi_dmul+0x2a0>
    76f4:	2380      	movs	r3, #128	; 0x80
    76f6:	025b      	lsls	r3, r3, #9
    76f8:	4698      	mov	r8, r3
    76fa:	4440      	add	r0, r8
    76fc:	9b02      	ldr	r3, [sp, #8]
    76fe:	4661      	mov	r1, ip
    7700:	4698      	mov	r8, r3
    7702:	9b04      	ldr	r3, [sp, #16]
    7704:	0437      	lsls	r7, r6, #16
    7706:	4443      	add	r3, r8
    7708:	469b      	mov	fp, r3
    770a:	45ab      	cmp	fp, r5
    770c:	41ad      	sbcs	r5, r5
    770e:	426b      	negs	r3, r5
    7710:	040d      	lsls	r5, r1, #16
    7712:	9905      	ldr	r1, [sp, #20]
    7714:	0c2d      	lsrs	r5, r5, #16
    7716:	468c      	mov	ip, r1
    7718:	197f      	adds	r7, r7, r5
    771a:	4467      	add	r7, ip
    771c:	18fd      	adds	r5, r7, r3
    771e:	46a8      	mov	r8, r5
    7720:	465d      	mov	r5, fp
    7722:	192d      	adds	r5, r5, r4
    7724:	42a5      	cmp	r5, r4
    7726:	41a4      	sbcs	r4, r4
    7728:	4693      	mov	fp, r2
    772a:	4264      	negs	r4, r4
    772c:	46a4      	mov	ip, r4
    772e:	44c3      	add	fp, r8
    7730:	44dc      	add	ip, fp
    7732:	428f      	cmp	r7, r1
    7734:	41bf      	sbcs	r7, r7
    7736:	4598      	cmp	r8, r3
    7738:	419b      	sbcs	r3, r3
    773a:	4593      	cmp	fp, r2
    773c:	4192      	sbcs	r2, r2
    773e:	45a4      	cmp	ip, r4
    7740:	41a4      	sbcs	r4, r4
    7742:	425b      	negs	r3, r3
    7744:	427f      	negs	r7, r7
    7746:	431f      	orrs	r7, r3
    7748:	0c36      	lsrs	r6, r6, #16
    774a:	4252      	negs	r2, r2
    774c:	4264      	negs	r4, r4
    774e:	19bf      	adds	r7, r7, r6
    7750:	4322      	orrs	r2, r4
    7752:	18bf      	adds	r7, r7, r2
    7754:	4662      	mov	r2, ip
    7756:	1838      	adds	r0, r7, r0
    7758:	0243      	lsls	r3, r0, #9
    775a:	0dd2      	lsrs	r2, r2, #23
    775c:	9903      	ldr	r1, [sp, #12]
    775e:	4313      	orrs	r3, r2
    7760:	026a      	lsls	r2, r5, #9
    7762:	430a      	orrs	r2, r1
    7764:	1e50      	subs	r0, r2, #1
    7766:	4182      	sbcs	r2, r0
    7768:	4661      	mov	r1, ip
    776a:	0ded      	lsrs	r5, r5, #23
    776c:	432a      	orrs	r2, r5
    776e:	024e      	lsls	r6, r1, #9
    7770:	4332      	orrs	r2, r6
    7772:	01d9      	lsls	r1, r3, #7
    7774:	d400      	bmi.n	7778 <__aeabi_dmul+0x31c>
    7776:	e0b3      	b.n	78e0 <__aeabi_dmul+0x484>
    7778:	2601      	movs	r6, #1
    777a:	0850      	lsrs	r0, r2, #1
    777c:	4032      	ands	r2, r6
    777e:	4302      	orrs	r2, r0
    7780:	07de      	lsls	r6, r3, #31
    7782:	4332      	orrs	r2, r6
    7784:	085b      	lsrs	r3, r3, #1
    7786:	4c22      	ldr	r4, [pc, #136]	; (7810 <__aeabi_dmul+0x3b4>)
    7788:	4454      	add	r4, sl
    778a:	2c00      	cmp	r4, #0
    778c:	dd62      	ble.n	7854 <__aeabi_dmul+0x3f8>
    778e:	0751      	lsls	r1, r2, #29
    7790:	d009      	beq.n	77a6 <__aeabi_dmul+0x34a>
    7792:	200f      	movs	r0, #15
    7794:	4010      	ands	r0, r2
    7796:	2804      	cmp	r0, #4
    7798:	d005      	beq.n	77a6 <__aeabi_dmul+0x34a>
    779a:	1d10      	adds	r0, r2, #4
    779c:	4290      	cmp	r0, r2
    779e:	4192      	sbcs	r2, r2
    77a0:	4252      	negs	r2, r2
    77a2:	189b      	adds	r3, r3, r2
    77a4:	0002      	movs	r2, r0
    77a6:	01d9      	lsls	r1, r3, #7
    77a8:	d504      	bpl.n	77b4 <__aeabi_dmul+0x358>
    77aa:	2480      	movs	r4, #128	; 0x80
    77ac:	4819      	ldr	r0, [pc, #100]	; (7814 <__aeabi_dmul+0x3b8>)
    77ae:	00e4      	lsls	r4, r4, #3
    77b0:	4003      	ands	r3, r0
    77b2:	4454      	add	r4, sl
    77b4:	4818      	ldr	r0, [pc, #96]	; (7818 <__aeabi_dmul+0x3bc>)
    77b6:	4284      	cmp	r4, r0
    77b8:	dd00      	ble.n	77bc <__aeabi_dmul+0x360>
    77ba:	e727      	b.n	760c <__aeabi_dmul+0x1b0>
    77bc:	075e      	lsls	r6, r3, #29
    77be:	025b      	lsls	r3, r3, #9
    77c0:	08d2      	lsrs	r2, r2, #3
    77c2:	0b1f      	lsrs	r7, r3, #12
    77c4:	0563      	lsls	r3, r4, #21
    77c6:	4316      	orrs	r6, r2
    77c8:	0d5b      	lsrs	r3, r3, #21
    77ca:	e6b2      	b.n	7532 <__aeabi_dmul+0xd6>
    77cc:	2300      	movs	r3, #0
    77ce:	4699      	mov	r9, r3
    77d0:	3301      	adds	r3, #1
    77d2:	2704      	movs	r7, #4
    77d4:	2600      	movs	r6, #0
    77d6:	469b      	mov	fp, r3
    77d8:	e664      	b.n	74a4 <__aeabi_dmul+0x48>
    77da:	2303      	movs	r3, #3
    77dc:	9701      	str	r7, [sp, #4]
    77de:	4681      	mov	r9, r0
    77e0:	270c      	movs	r7, #12
    77e2:	469b      	mov	fp, r3
    77e4:	e65e      	b.n	74a4 <__aeabi_dmul+0x48>
    77e6:	2201      	movs	r2, #1
    77e8:	2001      	movs	r0, #1
    77ea:	4317      	orrs	r7, r2
    77ec:	2200      	movs	r2, #0
    77ee:	e676      	b.n	74de <__aeabi_dmul+0x82>
    77f0:	2303      	movs	r3, #3
    77f2:	2003      	movs	r0, #3
    77f4:	431f      	orrs	r7, r3
    77f6:	4643      	mov	r3, r8
    77f8:	e671      	b.n	74de <__aeabi_dmul+0x82>
    77fa:	46c0      	nop			; (mov r8, r8)
    77fc:	000007ff 	.word	0x000007ff
    7800:	fffffc01 	.word	0xfffffc01
    7804:	0000a2e0 	.word	0x0000a2e0
    7808:	800fffff 	.word	0x800fffff
    780c:	fffffc0d 	.word	0xfffffc0d
    7810:	000003ff 	.word	0x000003ff
    7814:	feffffff 	.word	0xfeffffff
    7818:	000007fe 	.word	0x000007fe
    781c:	2300      	movs	r3, #0
    781e:	2780      	movs	r7, #128	; 0x80
    7820:	9300      	str	r3, [sp, #0]
    7822:	033f      	lsls	r7, r7, #12
    7824:	2600      	movs	r6, #0
    7826:	4b43      	ldr	r3, [pc, #268]	; (7934 <__aeabi_dmul+0x4d8>)
    7828:	e683      	b.n	7532 <__aeabi_dmul+0xd6>
    782a:	9b01      	ldr	r3, [sp, #4]
    782c:	0032      	movs	r2, r6
    782e:	46a4      	mov	ip, r4
    7830:	4658      	mov	r0, fp
    7832:	e670      	b.n	7516 <__aeabi_dmul+0xba>
    7834:	46ac      	mov	ip, r5
    7836:	e66e      	b.n	7516 <__aeabi_dmul+0xba>
    7838:	2780      	movs	r7, #128	; 0x80
    783a:	9901      	ldr	r1, [sp, #4]
    783c:	033f      	lsls	r7, r7, #12
    783e:	4239      	tst	r1, r7
    7840:	d02d      	beq.n	789e <__aeabi_dmul+0x442>
    7842:	423b      	tst	r3, r7
    7844:	d12b      	bne.n	789e <__aeabi_dmul+0x442>
    7846:	431f      	orrs	r7, r3
    7848:	033f      	lsls	r7, r7, #12
    784a:	0b3f      	lsrs	r7, r7, #12
    784c:	9500      	str	r5, [sp, #0]
    784e:	0016      	movs	r6, r2
    7850:	4b38      	ldr	r3, [pc, #224]	; (7934 <__aeabi_dmul+0x4d8>)
    7852:	e66e      	b.n	7532 <__aeabi_dmul+0xd6>
    7854:	2501      	movs	r5, #1
    7856:	1b2d      	subs	r5, r5, r4
    7858:	2d38      	cmp	r5, #56	; 0x38
    785a:	dd00      	ble.n	785e <__aeabi_dmul+0x402>
    785c:	e666      	b.n	752c <__aeabi_dmul+0xd0>
    785e:	2d1f      	cmp	r5, #31
    7860:	dc40      	bgt.n	78e4 <__aeabi_dmul+0x488>
    7862:	4835      	ldr	r0, [pc, #212]	; (7938 <__aeabi_dmul+0x4dc>)
    7864:	001c      	movs	r4, r3
    7866:	4450      	add	r0, sl
    7868:	0016      	movs	r6, r2
    786a:	4082      	lsls	r2, r0
    786c:	4084      	lsls	r4, r0
    786e:	40ee      	lsrs	r6, r5
    7870:	1e50      	subs	r0, r2, #1
    7872:	4182      	sbcs	r2, r0
    7874:	4334      	orrs	r4, r6
    7876:	4314      	orrs	r4, r2
    7878:	40eb      	lsrs	r3, r5
    787a:	0762      	lsls	r2, r4, #29
    787c:	d009      	beq.n	7892 <__aeabi_dmul+0x436>
    787e:	220f      	movs	r2, #15
    7880:	4022      	ands	r2, r4
    7882:	2a04      	cmp	r2, #4
    7884:	d005      	beq.n	7892 <__aeabi_dmul+0x436>
    7886:	0022      	movs	r2, r4
    7888:	1d14      	adds	r4, r2, #4
    788a:	4294      	cmp	r4, r2
    788c:	4180      	sbcs	r0, r0
    788e:	4240      	negs	r0, r0
    7890:	181b      	adds	r3, r3, r0
    7892:	021a      	lsls	r2, r3, #8
    7894:	d53e      	bpl.n	7914 <__aeabi_dmul+0x4b8>
    7896:	2301      	movs	r3, #1
    7898:	2700      	movs	r7, #0
    789a:	2600      	movs	r6, #0
    789c:	e649      	b.n	7532 <__aeabi_dmul+0xd6>
    789e:	2780      	movs	r7, #128	; 0x80
    78a0:	9b01      	ldr	r3, [sp, #4]
    78a2:	033f      	lsls	r7, r7, #12
    78a4:	431f      	orrs	r7, r3
    78a6:	033f      	lsls	r7, r7, #12
    78a8:	0b3f      	lsrs	r7, r7, #12
    78aa:	9400      	str	r4, [sp, #0]
    78ac:	4b21      	ldr	r3, [pc, #132]	; (7934 <__aeabi_dmul+0x4d8>)
    78ae:	e640      	b.n	7532 <__aeabi_dmul+0xd6>
    78b0:	0003      	movs	r3, r0
    78b2:	465a      	mov	r2, fp
    78b4:	3b28      	subs	r3, #40	; 0x28
    78b6:	409a      	lsls	r2, r3
    78b8:	2600      	movs	r6, #0
    78ba:	9201      	str	r2, [sp, #4]
    78bc:	e66d      	b.n	759a <__aeabi_dmul+0x13e>
    78be:	4658      	mov	r0, fp
    78c0:	f000 fbee 	bl	80a0 <__clzsi2>
    78c4:	3020      	adds	r0, #32
    78c6:	e657      	b.n	7578 <__aeabi_dmul+0x11c>
    78c8:	0003      	movs	r3, r0
    78ca:	4652      	mov	r2, sl
    78cc:	3b28      	subs	r3, #40	; 0x28
    78ce:	409a      	lsls	r2, r3
    78d0:	0013      	movs	r3, r2
    78d2:	2200      	movs	r2, #0
    78d4:	e693      	b.n	75fe <__aeabi_dmul+0x1a2>
    78d6:	4650      	mov	r0, sl
    78d8:	f000 fbe2 	bl	80a0 <__clzsi2>
    78dc:	3020      	adds	r0, #32
    78de:	e67b      	b.n	75d8 <__aeabi_dmul+0x17c>
    78e0:	46ca      	mov	sl, r9
    78e2:	e750      	b.n	7786 <__aeabi_dmul+0x32a>
    78e4:	201f      	movs	r0, #31
    78e6:	001e      	movs	r6, r3
    78e8:	4240      	negs	r0, r0
    78ea:	1b04      	subs	r4, r0, r4
    78ec:	40e6      	lsrs	r6, r4
    78ee:	2d20      	cmp	r5, #32
    78f0:	d003      	beq.n	78fa <__aeabi_dmul+0x49e>
    78f2:	4c12      	ldr	r4, [pc, #72]	; (793c <__aeabi_dmul+0x4e0>)
    78f4:	4454      	add	r4, sl
    78f6:	40a3      	lsls	r3, r4
    78f8:	431a      	orrs	r2, r3
    78fa:	1e50      	subs	r0, r2, #1
    78fc:	4182      	sbcs	r2, r0
    78fe:	4332      	orrs	r2, r6
    7900:	2607      	movs	r6, #7
    7902:	2700      	movs	r7, #0
    7904:	4016      	ands	r6, r2
    7906:	d009      	beq.n	791c <__aeabi_dmul+0x4c0>
    7908:	200f      	movs	r0, #15
    790a:	2300      	movs	r3, #0
    790c:	4010      	ands	r0, r2
    790e:	0014      	movs	r4, r2
    7910:	2804      	cmp	r0, #4
    7912:	d1b9      	bne.n	7888 <__aeabi_dmul+0x42c>
    7914:	0022      	movs	r2, r4
    7916:	075e      	lsls	r6, r3, #29
    7918:	025b      	lsls	r3, r3, #9
    791a:	0b1f      	lsrs	r7, r3, #12
    791c:	08d2      	lsrs	r2, r2, #3
    791e:	4316      	orrs	r6, r2
    7920:	2300      	movs	r3, #0
    7922:	e606      	b.n	7532 <__aeabi_dmul+0xd6>
    7924:	2780      	movs	r7, #128	; 0x80
    7926:	033f      	lsls	r7, r7, #12
    7928:	431f      	orrs	r7, r3
    792a:	033f      	lsls	r7, r7, #12
    792c:	0b3f      	lsrs	r7, r7, #12
    792e:	0016      	movs	r6, r2
    7930:	4b00      	ldr	r3, [pc, #0]	; (7934 <__aeabi_dmul+0x4d8>)
    7932:	e5fe      	b.n	7532 <__aeabi_dmul+0xd6>
    7934:	000007ff 	.word	0x000007ff
    7938:	0000041e 	.word	0x0000041e
    793c:	0000043e 	.word	0x0000043e

00007940 <__aeabi_dsub>:
__aeabi_dsub():
    7940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7942:	4657      	mov	r7, sl
    7944:	464e      	mov	r6, r9
    7946:	4645      	mov	r5, r8
    7948:	46de      	mov	lr, fp
    794a:	000c      	movs	r4, r1
    794c:	0309      	lsls	r1, r1, #12
    794e:	b5e0      	push	{r5, r6, r7, lr}
    7950:	0a49      	lsrs	r1, r1, #9
    7952:	0f46      	lsrs	r6, r0, #29
    7954:	005f      	lsls	r7, r3, #1
    7956:	4331      	orrs	r1, r6
    7958:	031e      	lsls	r6, r3, #12
    795a:	0fdb      	lsrs	r3, r3, #31
    795c:	0a76      	lsrs	r6, r6, #9
    795e:	469b      	mov	fp, r3
    7960:	0f53      	lsrs	r3, r2, #29
    7962:	4333      	orrs	r3, r6
    7964:	4ec8      	ldr	r6, [pc, #800]	; (7c88 <__aeabi_dsub+0x348>)
    7966:	0065      	lsls	r5, r4, #1
    7968:	00c0      	lsls	r0, r0, #3
    796a:	0fe4      	lsrs	r4, r4, #31
    796c:	00d2      	lsls	r2, r2, #3
    796e:	0d6d      	lsrs	r5, r5, #21
    7970:	46a2      	mov	sl, r4
    7972:	4681      	mov	r9, r0
    7974:	0d7f      	lsrs	r7, r7, #21
    7976:	469c      	mov	ip, r3
    7978:	4690      	mov	r8, r2
    797a:	42b7      	cmp	r7, r6
    797c:	d100      	bne.n	7980 <__aeabi_dsub+0x40>
    797e:	e0b9      	b.n	7af4 <__aeabi_dsub+0x1b4>
    7980:	465b      	mov	r3, fp
    7982:	2601      	movs	r6, #1
    7984:	4073      	eors	r3, r6
    7986:	469b      	mov	fp, r3
    7988:	1bee      	subs	r6, r5, r7
    798a:	45a3      	cmp	fp, r4
    798c:	d100      	bne.n	7990 <__aeabi_dsub+0x50>
    798e:	e083      	b.n	7a98 <__aeabi_dsub+0x158>
    7990:	2e00      	cmp	r6, #0
    7992:	dd63      	ble.n	7a5c <__aeabi_dsub+0x11c>
    7994:	2f00      	cmp	r7, #0
    7996:	d000      	beq.n	799a <__aeabi_dsub+0x5a>
    7998:	e0b1      	b.n	7afe <__aeabi_dsub+0x1be>
    799a:	4663      	mov	r3, ip
    799c:	4313      	orrs	r3, r2
    799e:	d100      	bne.n	79a2 <__aeabi_dsub+0x62>
    79a0:	e123      	b.n	7bea <__aeabi_dsub+0x2aa>
    79a2:	1e73      	subs	r3, r6, #1
    79a4:	2b00      	cmp	r3, #0
    79a6:	d000      	beq.n	79aa <__aeabi_dsub+0x6a>
    79a8:	e1ba      	b.n	7d20 <__aeabi_dsub+0x3e0>
    79aa:	1a86      	subs	r6, r0, r2
    79ac:	4663      	mov	r3, ip
    79ae:	42b0      	cmp	r0, r6
    79b0:	4180      	sbcs	r0, r0
    79b2:	2501      	movs	r5, #1
    79b4:	1ac9      	subs	r1, r1, r3
    79b6:	4240      	negs	r0, r0
    79b8:	1a09      	subs	r1, r1, r0
    79ba:	020b      	lsls	r3, r1, #8
    79bc:	d400      	bmi.n	79c0 <__aeabi_dsub+0x80>
    79be:	e147      	b.n	7c50 <__aeabi_dsub+0x310>
    79c0:	0249      	lsls	r1, r1, #9
    79c2:	0a4b      	lsrs	r3, r1, #9
    79c4:	4698      	mov	r8, r3
    79c6:	4643      	mov	r3, r8
    79c8:	2b00      	cmp	r3, #0
    79ca:	d100      	bne.n	79ce <__aeabi_dsub+0x8e>
    79cc:	e189      	b.n	7ce2 <__aeabi_dsub+0x3a2>
    79ce:	4640      	mov	r0, r8
    79d0:	f000 fb66 	bl	80a0 <__clzsi2>
    79d4:	0003      	movs	r3, r0
    79d6:	3b08      	subs	r3, #8
    79d8:	2b1f      	cmp	r3, #31
    79da:	dd00      	ble.n	79de <__aeabi_dsub+0x9e>
    79dc:	e17c      	b.n	7cd8 <__aeabi_dsub+0x398>
    79de:	2220      	movs	r2, #32
    79e0:	0030      	movs	r0, r6
    79e2:	1ad2      	subs	r2, r2, r3
    79e4:	4641      	mov	r1, r8
    79e6:	40d0      	lsrs	r0, r2
    79e8:	4099      	lsls	r1, r3
    79ea:	0002      	movs	r2, r0
    79ec:	409e      	lsls	r6, r3
    79ee:	430a      	orrs	r2, r1
    79f0:	429d      	cmp	r5, r3
    79f2:	dd00      	ble.n	79f6 <__aeabi_dsub+0xb6>
    79f4:	e16a      	b.n	7ccc <__aeabi_dsub+0x38c>
    79f6:	1b5d      	subs	r5, r3, r5
    79f8:	1c6b      	adds	r3, r5, #1
    79fa:	2b1f      	cmp	r3, #31
    79fc:	dd00      	ble.n	7a00 <__aeabi_dsub+0xc0>
    79fe:	e194      	b.n	7d2a <__aeabi_dsub+0x3ea>
    7a00:	2120      	movs	r1, #32
    7a02:	0010      	movs	r0, r2
    7a04:	0035      	movs	r5, r6
    7a06:	1ac9      	subs	r1, r1, r3
    7a08:	408e      	lsls	r6, r1
    7a0a:	40da      	lsrs	r2, r3
    7a0c:	4088      	lsls	r0, r1
    7a0e:	40dd      	lsrs	r5, r3
    7a10:	1e71      	subs	r1, r6, #1
    7a12:	418e      	sbcs	r6, r1
    7a14:	0011      	movs	r1, r2
    7a16:	2207      	movs	r2, #7
    7a18:	4328      	orrs	r0, r5
    7a1a:	2500      	movs	r5, #0
    7a1c:	4306      	orrs	r6, r0
    7a1e:	4032      	ands	r2, r6
    7a20:	2a00      	cmp	r2, #0
    7a22:	d009      	beq.n	7a38 <__aeabi_dsub+0xf8>
    7a24:	230f      	movs	r3, #15
    7a26:	4033      	ands	r3, r6
    7a28:	2b04      	cmp	r3, #4
    7a2a:	d005      	beq.n	7a38 <__aeabi_dsub+0xf8>
    7a2c:	1d33      	adds	r3, r6, #4
    7a2e:	42b3      	cmp	r3, r6
    7a30:	41b6      	sbcs	r6, r6
    7a32:	4276      	negs	r6, r6
    7a34:	1989      	adds	r1, r1, r6
    7a36:	001e      	movs	r6, r3
    7a38:	020b      	lsls	r3, r1, #8
    7a3a:	d400      	bmi.n	7a3e <__aeabi_dsub+0xfe>
    7a3c:	e23d      	b.n	7eba <__aeabi_dsub+0x57a>
    7a3e:	1c6a      	adds	r2, r5, #1
    7a40:	4b91      	ldr	r3, [pc, #580]	; (7c88 <__aeabi_dsub+0x348>)
    7a42:	0555      	lsls	r5, r2, #21
    7a44:	0d6d      	lsrs	r5, r5, #21
    7a46:	429a      	cmp	r2, r3
    7a48:	d100      	bne.n	7a4c <__aeabi_dsub+0x10c>
    7a4a:	e119      	b.n	7c80 <__aeabi_dsub+0x340>
    7a4c:	4a8f      	ldr	r2, [pc, #572]	; (7c8c <__aeabi_dsub+0x34c>)
    7a4e:	08f6      	lsrs	r6, r6, #3
    7a50:	400a      	ands	r2, r1
    7a52:	0757      	lsls	r7, r2, #29
    7a54:	0252      	lsls	r2, r2, #9
    7a56:	4337      	orrs	r7, r6
    7a58:	0b12      	lsrs	r2, r2, #12
    7a5a:	e09b      	b.n	7b94 <__aeabi_dsub+0x254>
    7a5c:	2e00      	cmp	r6, #0
    7a5e:	d000      	beq.n	7a62 <__aeabi_dsub+0x122>
    7a60:	e0c5      	b.n	7bee <__aeabi_dsub+0x2ae>
    7a62:	1c6e      	adds	r6, r5, #1
    7a64:	0576      	lsls	r6, r6, #21
    7a66:	0d76      	lsrs	r6, r6, #21
    7a68:	2e01      	cmp	r6, #1
    7a6a:	dc00      	bgt.n	7a6e <__aeabi_dsub+0x12e>
    7a6c:	e148      	b.n	7d00 <__aeabi_dsub+0x3c0>
    7a6e:	4667      	mov	r7, ip
    7a70:	1a86      	subs	r6, r0, r2
    7a72:	1bcb      	subs	r3, r1, r7
    7a74:	42b0      	cmp	r0, r6
    7a76:	41bf      	sbcs	r7, r7
    7a78:	427f      	negs	r7, r7
    7a7a:	46b8      	mov	r8, r7
    7a7c:	001f      	movs	r7, r3
    7a7e:	4643      	mov	r3, r8
    7a80:	1aff      	subs	r7, r7, r3
    7a82:	003b      	movs	r3, r7
    7a84:	46b8      	mov	r8, r7
    7a86:	021b      	lsls	r3, r3, #8
    7a88:	d500      	bpl.n	7a8c <__aeabi_dsub+0x14c>
    7a8a:	e15f      	b.n	7d4c <__aeabi_dsub+0x40c>
    7a8c:	4337      	orrs	r7, r6
    7a8e:	d19a      	bne.n	79c6 <__aeabi_dsub+0x86>
    7a90:	2200      	movs	r2, #0
    7a92:	2400      	movs	r4, #0
    7a94:	2500      	movs	r5, #0
    7a96:	e079      	b.n	7b8c <__aeabi_dsub+0x24c>
    7a98:	2e00      	cmp	r6, #0
    7a9a:	dc00      	bgt.n	7a9e <__aeabi_dsub+0x15e>
    7a9c:	e0fa      	b.n	7c94 <__aeabi_dsub+0x354>
    7a9e:	2f00      	cmp	r7, #0
    7aa0:	d100      	bne.n	7aa4 <__aeabi_dsub+0x164>
    7aa2:	e08d      	b.n	7bc0 <__aeabi_dsub+0x280>
    7aa4:	4b78      	ldr	r3, [pc, #480]	; (7c88 <__aeabi_dsub+0x348>)
    7aa6:	429d      	cmp	r5, r3
    7aa8:	d067      	beq.n	7b7a <__aeabi_dsub+0x23a>
    7aaa:	2380      	movs	r3, #128	; 0x80
    7aac:	4667      	mov	r7, ip
    7aae:	041b      	lsls	r3, r3, #16
    7ab0:	431f      	orrs	r7, r3
    7ab2:	46bc      	mov	ip, r7
    7ab4:	2e38      	cmp	r6, #56	; 0x38
    7ab6:	dc00      	bgt.n	7aba <__aeabi_dsub+0x17a>
    7ab8:	e152      	b.n	7d60 <__aeabi_dsub+0x420>
    7aba:	4663      	mov	r3, ip
    7abc:	4313      	orrs	r3, r2
    7abe:	1e5a      	subs	r2, r3, #1
    7ac0:	4193      	sbcs	r3, r2
    7ac2:	181e      	adds	r6, r3, r0
    7ac4:	4286      	cmp	r6, r0
    7ac6:	4180      	sbcs	r0, r0
    7ac8:	4240      	negs	r0, r0
    7aca:	1809      	adds	r1, r1, r0
    7acc:	020b      	lsls	r3, r1, #8
    7ace:	d400      	bmi.n	7ad2 <__aeabi_dsub+0x192>
    7ad0:	e0be      	b.n	7c50 <__aeabi_dsub+0x310>
    7ad2:	4b6d      	ldr	r3, [pc, #436]	; (7c88 <__aeabi_dsub+0x348>)
    7ad4:	3501      	adds	r5, #1
    7ad6:	429d      	cmp	r5, r3
    7ad8:	d100      	bne.n	7adc <__aeabi_dsub+0x19c>
    7ada:	e0d2      	b.n	7c82 <__aeabi_dsub+0x342>
    7adc:	4a6b      	ldr	r2, [pc, #428]	; (7c8c <__aeabi_dsub+0x34c>)
    7ade:	0873      	lsrs	r3, r6, #1
    7ae0:	400a      	ands	r2, r1
    7ae2:	2101      	movs	r1, #1
    7ae4:	400e      	ands	r6, r1
    7ae6:	431e      	orrs	r6, r3
    7ae8:	0851      	lsrs	r1, r2, #1
    7aea:	07d3      	lsls	r3, r2, #31
    7aec:	2207      	movs	r2, #7
    7aee:	431e      	orrs	r6, r3
    7af0:	4032      	ands	r2, r6
    7af2:	e795      	b.n	7a20 <__aeabi_dsub+0xe0>
    7af4:	001e      	movs	r6, r3
    7af6:	4316      	orrs	r6, r2
    7af8:	d000      	beq.n	7afc <__aeabi_dsub+0x1bc>
    7afa:	e745      	b.n	7988 <__aeabi_dsub+0x48>
    7afc:	e740      	b.n	7980 <__aeabi_dsub+0x40>
    7afe:	4b62      	ldr	r3, [pc, #392]	; (7c88 <__aeabi_dsub+0x348>)
    7b00:	429d      	cmp	r5, r3
    7b02:	d03a      	beq.n	7b7a <__aeabi_dsub+0x23a>
    7b04:	2380      	movs	r3, #128	; 0x80
    7b06:	4667      	mov	r7, ip
    7b08:	041b      	lsls	r3, r3, #16
    7b0a:	431f      	orrs	r7, r3
    7b0c:	46bc      	mov	ip, r7
    7b0e:	2e38      	cmp	r6, #56	; 0x38
    7b10:	dd00      	ble.n	7b14 <__aeabi_dsub+0x1d4>
    7b12:	e0eb      	b.n	7cec <__aeabi_dsub+0x3ac>
    7b14:	2e1f      	cmp	r6, #31
    7b16:	dc00      	bgt.n	7b1a <__aeabi_dsub+0x1da>
    7b18:	e13a      	b.n	7d90 <__aeabi_dsub+0x450>
    7b1a:	0033      	movs	r3, r6
    7b1c:	4667      	mov	r7, ip
    7b1e:	3b20      	subs	r3, #32
    7b20:	40df      	lsrs	r7, r3
    7b22:	003b      	movs	r3, r7
    7b24:	2e20      	cmp	r6, #32
    7b26:	d005      	beq.n	7b34 <__aeabi_dsub+0x1f4>
    7b28:	2740      	movs	r7, #64	; 0x40
    7b2a:	1bbf      	subs	r7, r7, r6
    7b2c:	4666      	mov	r6, ip
    7b2e:	40be      	lsls	r6, r7
    7b30:	4332      	orrs	r2, r6
    7b32:	4690      	mov	r8, r2
    7b34:	4646      	mov	r6, r8
    7b36:	1e72      	subs	r2, r6, #1
    7b38:	4196      	sbcs	r6, r2
    7b3a:	4333      	orrs	r3, r6
    7b3c:	e0da      	b.n	7cf4 <__aeabi_dsub+0x3b4>
    7b3e:	2b00      	cmp	r3, #0
    7b40:	d100      	bne.n	7b44 <__aeabi_dsub+0x204>
    7b42:	e214      	b.n	7f6e <__aeabi_dsub+0x62e>
    7b44:	4663      	mov	r3, ip
    7b46:	4313      	orrs	r3, r2
    7b48:	d100      	bne.n	7b4c <__aeabi_dsub+0x20c>
    7b4a:	e168      	b.n	7e1e <__aeabi_dsub+0x4de>
    7b4c:	2380      	movs	r3, #128	; 0x80
    7b4e:	074e      	lsls	r6, r1, #29
    7b50:	08c0      	lsrs	r0, r0, #3
    7b52:	08c9      	lsrs	r1, r1, #3
    7b54:	031b      	lsls	r3, r3, #12
    7b56:	4306      	orrs	r6, r0
    7b58:	4219      	tst	r1, r3
    7b5a:	d008      	beq.n	7b6e <__aeabi_dsub+0x22e>
    7b5c:	4660      	mov	r0, ip
    7b5e:	08c0      	lsrs	r0, r0, #3
    7b60:	4218      	tst	r0, r3
    7b62:	d104      	bne.n	7b6e <__aeabi_dsub+0x22e>
    7b64:	4663      	mov	r3, ip
    7b66:	0001      	movs	r1, r0
    7b68:	08d2      	lsrs	r2, r2, #3
    7b6a:	075e      	lsls	r6, r3, #29
    7b6c:	4316      	orrs	r6, r2
    7b6e:	00f3      	lsls	r3, r6, #3
    7b70:	4699      	mov	r9, r3
    7b72:	00c9      	lsls	r1, r1, #3
    7b74:	0f72      	lsrs	r2, r6, #29
    7b76:	4d44      	ldr	r5, [pc, #272]	; (7c88 <__aeabi_dsub+0x348>)
    7b78:	4311      	orrs	r1, r2
    7b7a:	464b      	mov	r3, r9
    7b7c:	08de      	lsrs	r6, r3, #3
    7b7e:	4b42      	ldr	r3, [pc, #264]	; (7c88 <__aeabi_dsub+0x348>)
    7b80:	074f      	lsls	r7, r1, #29
    7b82:	4337      	orrs	r7, r6
    7b84:	08ca      	lsrs	r2, r1, #3
    7b86:	429d      	cmp	r5, r3
    7b88:	d100      	bne.n	7b8c <__aeabi_dsub+0x24c>
    7b8a:	e06e      	b.n	7c6a <__aeabi_dsub+0x32a>
    7b8c:	0312      	lsls	r2, r2, #12
    7b8e:	056d      	lsls	r5, r5, #21
    7b90:	0b12      	lsrs	r2, r2, #12
    7b92:	0d6d      	lsrs	r5, r5, #21
    7b94:	2100      	movs	r1, #0
    7b96:	0312      	lsls	r2, r2, #12
    7b98:	0b13      	lsrs	r3, r2, #12
    7b9a:	0d0a      	lsrs	r2, r1, #20
    7b9c:	0512      	lsls	r2, r2, #20
    7b9e:	431a      	orrs	r2, r3
    7ba0:	4b3b      	ldr	r3, [pc, #236]	; (7c90 <__aeabi_dsub+0x350>)
    7ba2:	052d      	lsls	r5, r5, #20
    7ba4:	4013      	ands	r3, r2
    7ba6:	432b      	orrs	r3, r5
    7ba8:	005b      	lsls	r3, r3, #1
    7baa:	07e4      	lsls	r4, r4, #31
    7bac:	085b      	lsrs	r3, r3, #1
    7bae:	4323      	orrs	r3, r4
    7bb0:	0038      	movs	r0, r7
    7bb2:	0019      	movs	r1, r3
    7bb4:	bc3c      	pop	{r2, r3, r4, r5}
    7bb6:	4690      	mov	r8, r2
    7bb8:	4699      	mov	r9, r3
    7bba:	46a2      	mov	sl, r4
    7bbc:	46ab      	mov	fp, r5
    7bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7bc0:	4663      	mov	r3, ip
    7bc2:	4313      	orrs	r3, r2
    7bc4:	d011      	beq.n	7bea <__aeabi_dsub+0x2aa>
    7bc6:	1e73      	subs	r3, r6, #1
    7bc8:	2b00      	cmp	r3, #0
    7bca:	d000      	beq.n	7bce <__aeabi_dsub+0x28e>
    7bcc:	e107      	b.n	7dde <__aeabi_dsub+0x49e>
    7bce:	1886      	adds	r6, r0, r2
    7bd0:	4286      	cmp	r6, r0
    7bd2:	4180      	sbcs	r0, r0
    7bd4:	4461      	add	r1, ip
    7bd6:	4240      	negs	r0, r0
    7bd8:	1809      	adds	r1, r1, r0
    7bda:	2501      	movs	r5, #1
    7bdc:	020b      	lsls	r3, r1, #8
    7bde:	d537      	bpl.n	7c50 <__aeabi_dsub+0x310>
    7be0:	2502      	movs	r5, #2
    7be2:	e77b      	b.n	7adc <__aeabi_dsub+0x19c>
    7be4:	003e      	movs	r6, r7
    7be6:	4661      	mov	r1, ip
    7be8:	4691      	mov	r9, r2
    7bea:	0035      	movs	r5, r6
    7bec:	e7c5      	b.n	7b7a <__aeabi_dsub+0x23a>
    7bee:	465c      	mov	r4, fp
    7bf0:	2d00      	cmp	r5, #0
    7bf2:	d000      	beq.n	7bf6 <__aeabi_dsub+0x2b6>
    7bf4:	e0e1      	b.n	7dba <__aeabi_dsub+0x47a>
    7bf6:	000b      	movs	r3, r1
    7bf8:	4303      	orrs	r3, r0
    7bfa:	d0f3      	beq.n	7be4 <__aeabi_dsub+0x2a4>
    7bfc:	1c73      	adds	r3, r6, #1
    7bfe:	d100      	bne.n	7c02 <__aeabi_dsub+0x2c2>
    7c00:	e1ac      	b.n	7f5c <__aeabi_dsub+0x61c>
    7c02:	4b21      	ldr	r3, [pc, #132]	; (7c88 <__aeabi_dsub+0x348>)
    7c04:	429f      	cmp	r7, r3
    7c06:	d100      	bne.n	7c0a <__aeabi_dsub+0x2ca>
    7c08:	e13a      	b.n	7e80 <__aeabi_dsub+0x540>
    7c0a:	43f3      	mvns	r3, r6
    7c0c:	2b38      	cmp	r3, #56	; 0x38
    7c0e:	dd00      	ble.n	7c12 <__aeabi_dsub+0x2d2>
    7c10:	e16f      	b.n	7ef2 <__aeabi_dsub+0x5b2>
    7c12:	2b1f      	cmp	r3, #31
    7c14:	dd00      	ble.n	7c18 <__aeabi_dsub+0x2d8>
    7c16:	e18c      	b.n	7f32 <__aeabi_dsub+0x5f2>
    7c18:	2520      	movs	r5, #32
    7c1a:	000e      	movs	r6, r1
    7c1c:	1aed      	subs	r5, r5, r3
    7c1e:	40ae      	lsls	r6, r5
    7c20:	46b0      	mov	r8, r6
    7c22:	0006      	movs	r6, r0
    7c24:	46aa      	mov	sl, r5
    7c26:	40de      	lsrs	r6, r3
    7c28:	4645      	mov	r5, r8
    7c2a:	4335      	orrs	r5, r6
    7c2c:	002e      	movs	r6, r5
    7c2e:	4655      	mov	r5, sl
    7c30:	40d9      	lsrs	r1, r3
    7c32:	40a8      	lsls	r0, r5
    7c34:	4663      	mov	r3, ip
    7c36:	1e45      	subs	r5, r0, #1
    7c38:	41a8      	sbcs	r0, r5
    7c3a:	1a5b      	subs	r3, r3, r1
    7c3c:	469c      	mov	ip, r3
    7c3e:	4330      	orrs	r0, r6
    7c40:	1a16      	subs	r6, r2, r0
    7c42:	42b2      	cmp	r2, r6
    7c44:	4192      	sbcs	r2, r2
    7c46:	4663      	mov	r3, ip
    7c48:	4252      	negs	r2, r2
    7c4a:	1a99      	subs	r1, r3, r2
    7c4c:	003d      	movs	r5, r7
    7c4e:	e6b4      	b.n	79ba <__aeabi_dsub+0x7a>
    7c50:	2207      	movs	r2, #7
    7c52:	4032      	ands	r2, r6
    7c54:	2a00      	cmp	r2, #0
    7c56:	d000      	beq.n	7c5a <__aeabi_dsub+0x31a>
    7c58:	e6e4      	b.n	7a24 <__aeabi_dsub+0xe4>
    7c5a:	4b0b      	ldr	r3, [pc, #44]	; (7c88 <__aeabi_dsub+0x348>)
    7c5c:	08f6      	lsrs	r6, r6, #3
    7c5e:	074f      	lsls	r7, r1, #29
    7c60:	4337      	orrs	r7, r6
    7c62:	08ca      	lsrs	r2, r1, #3
    7c64:	429d      	cmp	r5, r3
    7c66:	d000      	beq.n	7c6a <__aeabi_dsub+0x32a>
    7c68:	e790      	b.n	7b8c <__aeabi_dsub+0x24c>
    7c6a:	003b      	movs	r3, r7
    7c6c:	4313      	orrs	r3, r2
    7c6e:	d100      	bne.n	7c72 <__aeabi_dsub+0x332>
    7c70:	e1a6      	b.n	7fc0 <__aeabi_dsub+0x680>
    7c72:	2380      	movs	r3, #128	; 0x80
    7c74:	031b      	lsls	r3, r3, #12
    7c76:	431a      	orrs	r2, r3
    7c78:	0312      	lsls	r2, r2, #12
    7c7a:	0b12      	lsrs	r2, r2, #12
    7c7c:	4d02      	ldr	r5, [pc, #8]	; (7c88 <__aeabi_dsub+0x348>)
    7c7e:	e789      	b.n	7b94 <__aeabi_dsub+0x254>
    7c80:	0015      	movs	r5, r2
    7c82:	2200      	movs	r2, #0
    7c84:	2700      	movs	r7, #0
    7c86:	e785      	b.n	7b94 <__aeabi_dsub+0x254>
    7c88:	000007ff 	.word	0x000007ff
    7c8c:	ff7fffff 	.word	0xff7fffff
    7c90:	800fffff 	.word	0x800fffff
    7c94:	2e00      	cmp	r6, #0
    7c96:	d000      	beq.n	7c9a <__aeabi_dsub+0x35a>
    7c98:	e0c7      	b.n	7e2a <__aeabi_dsub+0x4ea>
    7c9a:	1c6b      	adds	r3, r5, #1
    7c9c:	055e      	lsls	r6, r3, #21
    7c9e:	0d76      	lsrs	r6, r6, #21
    7ca0:	2e01      	cmp	r6, #1
    7ca2:	dc00      	bgt.n	7ca6 <__aeabi_dsub+0x366>
    7ca4:	e0f0      	b.n	7e88 <__aeabi_dsub+0x548>
    7ca6:	4dc8      	ldr	r5, [pc, #800]	; (7fc8 <__aeabi_dsub+0x688>)
    7ca8:	42ab      	cmp	r3, r5
    7caa:	d100      	bne.n	7cae <__aeabi_dsub+0x36e>
    7cac:	e0b9      	b.n	7e22 <__aeabi_dsub+0x4e2>
    7cae:	1885      	adds	r5, r0, r2
    7cb0:	000a      	movs	r2, r1
    7cb2:	4285      	cmp	r5, r0
    7cb4:	4189      	sbcs	r1, r1
    7cb6:	4462      	add	r2, ip
    7cb8:	4249      	negs	r1, r1
    7cba:	1851      	adds	r1, r2, r1
    7cbc:	2207      	movs	r2, #7
    7cbe:	07ce      	lsls	r6, r1, #31
    7cc0:	086d      	lsrs	r5, r5, #1
    7cc2:	432e      	orrs	r6, r5
    7cc4:	0849      	lsrs	r1, r1, #1
    7cc6:	4032      	ands	r2, r6
    7cc8:	001d      	movs	r5, r3
    7cca:	e6a9      	b.n	7a20 <__aeabi_dsub+0xe0>
    7ccc:	49bf      	ldr	r1, [pc, #764]	; (7fcc <__aeabi_dsub+0x68c>)
    7cce:	1aed      	subs	r5, r5, r3
    7cd0:	4011      	ands	r1, r2
    7cd2:	2207      	movs	r2, #7
    7cd4:	4032      	ands	r2, r6
    7cd6:	e6a3      	b.n	7a20 <__aeabi_dsub+0xe0>
    7cd8:	0032      	movs	r2, r6
    7cda:	3828      	subs	r0, #40	; 0x28
    7cdc:	4082      	lsls	r2, r0
    7cde:	2600      	movs	r6, #0
    7ce0:	e686      	b.n	79f0 <__aeabi_dsub+0xb0>
    7ce2:	0030      	movs	r0, r6
    7ce4:	f000 f9dc 	bl	80a0 <__clzsi2>
    7ce8:	3020      	adds	r0, #32
    7cea:	e673      	b.n	79d4 <__aeabi_dsub+0x94>
    7cec:	4663      	mov	r3, ip
    7cee:	4313      	orrs	r3, r2
    7cf0:	1e5a      	subs	r2, r3, #1
    7cf2:	4193      	sbcs	r3, r2
    7cf4:	1ac6      	subs	r6, r0, r3
    7cf6:	42b0      	cmp	r0, r6
    7cf8:	4180      	sbcs	r0, r0
    7cfa:	4240      	negs	r0, r0
    7cfc:	1a09      	subs	r1, r1, r0
    7cfe:	e65c      	b.n	79ba <__aeabi_dsub+0x7a>
    7d00:	000e      	movs	r6, r1
    7d02:	4667      	mov	r7, ip
    7d04:	4306      	orrs	r6, r0
    7d06:	4317      	orrs	r7, r2
    7d08:	2d00      	cmp	r5, #0
    7d0a:	d15e      	bne.n	7dca <__aeabi_dsub+0x48a>
    7d0c:	2e00      	cmp	r6, #0
    7d0e:	d000      	beq.n	7d12 <__aeabi_dsub+0x3d2>
    7d10:	e0f3      	b.n	7efa <__aeabi_dsub+0x5ba>
    7d12:	2f00      	cmp	r7, #0
    7d14:	d100      	bne.n	7d18 <__aeabi_dsub+0x3d8>
    7d16:	e11e      	b.n	7f56 <__aeabi_dsub+0x616>
    7d18:	465c      	mov	r4, fp
    7d1a:	4661      	mov	r1, ip
    7d1c:	4691      	mov	r9, r2
    7d1e:	e72c      	b.n	7b7a <__aeabi_dsub+0x23a>
    7d20:	4fa9      	ldr	r7, [pc, #676]	; (7fc8 <__aeabi_dsub+0x688>)
    7d22:	42be      	cmp	r6, r7
    7d24:	d07b      	beq.n	7e1e <__aeabi_dsub+0x4de>
    7d26:	001e      	movs	r6, r3
    7d28:	e6f1      	b.n	7b0e <__aeabi_dsub+0x1ce>
    7d2a:	0010      	movs	r0, r2
    7d2c:	3d1f      	subs	r5, #31
    7d2e:	40e8      	lsrs	r0, r5
    7d30:	2b20      	cmp	r3, #32
    7d32:	d003      	beq.n	7d3c <__aeabi_dsub+0x3fc>
    7d34:	2140      	movs	r1, #64	; 0x40
    7d36:	1acb      	subs	r3, r1, r3
    7d38:	409a      	lsls	r2, r3
    7d3a:	4316      	orrs	r6, r2
    7d3c:	1e73      	subs	r3, r6, #1
    7d3e:	419e      	sbcs	r6, r3
    7d40:	2207      	movs	r2, #7
    7d42:	4306      	orrs	r6, r0
    7d44:	4032      	ands	r2, r6
    7d46:	2100      	movs	r1, #0
    7d48:	2500      	movs	r5, #0
    7d4a:	e783      	b.n	7c54 <__aeabi_dsub+0x314>
    7d4c:	1a16      	subs	r6, r2, r0
    7d4e:	4663      	mov	r3, ip
    7d50:	42b2      	cmp	r2, r6
    7d52:	4180      	sbcs	r0, r0
    7d54:	1a59      	subs	r1, r3, r1
    7d56:	4240      	negs	r0, r0
    7d58:	1a0b      	subs	r3, r1, r0
    7d5a:	4698      	mov	r8, r3
    7d5c:	465c      	mov	r4, fp
    7d5e:	e632      	b.n	79c6 <__aeabi_dsub+0x86>
    7d60:	2e1f      	cmp	r6, #31
    7d62:	dd00      	ble.n	7d66 <__aeabi_dsub+0x426>
    7d64:	e0ab      	b.n	7ebe <__aeabi_dsub+0x57e>
    7d66:	2720      	movs	r7, #32
    7d68:	1bbb      	subs	r3, r7, r6
    7d6a:	469a      	mov	sl, r3
    7d6c:	4663      	mov	r3, ip
    7d6e:	4657      	mov	r7, sl
    7d70:	40bb      	lsls	r3, r7
    7d72:	4699      	mov	r9, r3
    7d74:	0013      	movs	r3, r2
    7d76:	464f      	mov	r7, r9
    7d78:	40f3      	lsrs	r3, r6
    7d7a:	431f      	orrs	r7, r3
    7d7c:	003b      	movs	r3, r7
    7d7e:	4657      	mov	r7, sl
    7d80:	40ba      	lsls	r2, r7
    7d82:	1e57      	subs	r7, r2, #1
    7d84:	41ba      	sbcs	r2, r7
    7d86:	4313      	orrs	r3, r2
    7d88:	4662      	mov	r2, ip
    7d8a:	40f2      	lsrs	r2, r6
    7d8c:	1889      	adds	r1, r1, r2
    7d8e:	e698      	b.n	7ac2 <__aeabi_dsub+0x182>
    7d90:	2720      	movs	r7, #32
    7d92:	1bbb      	subs	r3, r7, r6
    7d94:	469a      	mov	sl, r3
    7d96:	4663      	mov	r3, ip
    7d98:	4657      	mov	r7, sl
    7d9a:	40bb      	lsls	r3, r7
    7d9c:	4699      	mov	r9, r3
    7d9e:	0013      	movs	r3, r2
    7da0:	464f      	mov	r7, r9
    7da2:	40f3      	lsrs	r3, r6
    7da4:	431f      	orrs	r7, r3
    7da6:	003b      	movs	r3, r7
    7da8:	4657      	mov	r7, sl
    7daa:	40ba      	lsls	r2, r7
    7dac:	1e57      	subs	r7, r2, #1
    7dae:	41ba      	sbcs	r2, r7
    7db0:	4313      	orrs	r3, r2
    7db2:	4662      	mov	r2, ip
    7db4:	40f2      	lsrs	r2, r6
    7db6:	1a89      	subs	r1, r1, r2
    7db8:	e79c      	b.n	7cf4 <__aeabi_dsub+0x3b4>
    7dba:	4b83      	ldr	r3, [pc, #524]	; (7fc8 <__aeabi_dsub+0x688>)
    7dbc:	429f      	cmp	r7, r3
    7dbe:	d05f      	beq.n	7e80 <__aeabi_dsub+0x540>
    7dc0:	2580      	movs	r5, #128	; 0x80
    7dc2:	042d      	lsls	r5, r5, #16
    7dc4:	4273      	negs	r3, r6
    7dc6:	4329      	orrs	r1, r5
    7dc8:	e720      	b.n	7c0c <__aeabi_dsub+0x2cc>
    7dca:	2e00      	cmp	r6, #0
    7dcc:	d10c      	bne.n	7de8 <__aeabi_dsub+0x4a8>
    7dce:	2f00      	cmp	r7, #0
    7dd0:	d100      	bne.n	7dd4 <__aeabi_dsub+0x494>
    7dd2:	e0d0      	b.n	7f76 <__aeabi_dsub+0x636>
    7dd4:	465c      	mov	r4, fp
    7dd6:	4661      	mov	r1, ip
    7dd8:	4691      	mov	r9, r2
    7dda:	4d7b      	ldr	r5, [pc, #492]	; (7fc8 <__aeabi_dsub+0x688>)
    7ddc:	e6cd      	b.n	7b7a <__aeabi_dsub+0x23a>
    7dde:	4f7a      	ldr	r7, [pc, #488]	; (7fc8 <__aeabi_dsub+0x688>)
    7de0:	42be      	cmp	r6, r7
    7de2:	d01c      	beq.n	7e1e <__aeabi_dsub+0x4de>
    7de4:	001e      	movs	r6, r3
    7de6:	e665      	b.n	7ab4 <__aeabi_dsub+0x174>
    7de8:	2f00      	cmp	r7, #0
    7dea:	d018      	beq.n	7e1e <__aeabi_dsub+0x4de>
    7dec:	08c0      	lsrs	r0, r0, #3
    7dee:	074e      	lsls	r6, r1, #29
    7df0:	4306      	orrs	r6, r0
    7df2:	2080      	movs	r0, #128	; 0x80
    7df4:	08c9      	lsrs	r1, r1, #3
    7df6:	0300      	lsls	r0, r0, #12
    7df8:	4201      	tst	r1, r0
    7dfa:	d008      	beq.n	7e0e <__aeabi_dsub+0x4ce>
    7dfc:	4663      	mov	r3, ip
    7dfe:	08dc      	lsrs	r4, r3, #3
    7e00:	4204      	tst	r4, r0
    7e02:	d104      	bne.n	7e0e <__aeabi_dsub+0x4ce>
    7e04:	0021      	movs	r1, r4
    7e06:	46da      	mov	sl, fp
    7e08:	08d2      	lsrs	r2, r2, #3
    7e0a:	075e      	lsls	r6, r3, #29
    7e0c:	4316      	orrs	r6, r2
    7e0e:	00f3      	lsls	r3, r6, #3
    7e10:	4699      	mov	r9, r3
    7e12:	2401      	movs	r4, #1
    7e14:	4653      	mov	r3, sl
    7e16:	00c9      	lsls	r1, r1, #3
    7e18:	0f72      	lsrs	r2, r6, #29
    7e1a:	4311      	orrs	r1, r2
    7e1c:	401c      	ands	r4, r3
    7e1e:	4d6a      	ldr	r5, [pc, #424]	; (7fc8 <__aeabi_dsub+0x688>)
    7e20:	e6ab      	b.n	7b7a <__aeabi_dsub+0x23a>
    7e22:	001d      	movs	r5, r3
    7e24:	2200      	movs	r2, #0
    7e26:	2700      	movs	r7, #0
    7e28:	e6b4      	b.n	7b94 <__aeabi_dsub+0x254>
    7e2a:	2d00      	cmp	r5, #0
    7e2c:	d159      	bne.n	7ee2 <__aeabi_dsub+0x5a2>
    7e2e:	000b      	movs	r3, r1
    7e30:	4303      	orrs	r3, r0
    7e32:	d100      	bne.n	7e36 <__aeabi_dsub+0x4f6>
    7e34:	e6d6      	b.n	7be4 <__aeabi_dsub+0x2a4>
    7e36:	1c73      	adds	r3, r6, #1
    7e38:	d100      	bne.n	7e3c <__aeabi_dsub+0x4fc>
    7e3a:	e0b2      	b.n	7fa2 <__aeabi_dsub+0x662>
    7e3c:	4b62      	ldr	r3, [pc, #392]	; (7fc8 <__aeabi_dsub+0x688>)
    7e3e:	429f      	cmp	r7, r3
    7e40:	d01e      	beq.n	7e80 <__aeabi_dsub+0x540>
    7e42:	43f3      	mvns	r3, r6
    7e44:	2b38      	cmp	r3, #56	; 0x38
    7e46:	dc6f      	bgt.n	7f28 <__aeabi_dsub+0x5e8>
    7e48:	2b1f      	cmp	r3, #31
    7e4a:	dd00      	ble.n	7e4e <__aeabi_dsub+0x50e>
    7e4c:	e097      	b.n	7f7e <__aeabi_dsub+0x63e>
    7e4e:	2520      	movs	r5, #32
    7e50:	000e      	movs	r6, r1
    7e52:	1aed      	subs	r5, r5, r3
    7e54:	40ae      	lsls	r6, r5
    7e56:	46b0      	mov	r8, r6
    7e58:	0006      	movs	r6, r0
    7e5a:	46aa      	mov	sl, r5
    7e5c:	40de      	lsrs	r6, r3
    7e5e:	4645      	mov	r5, r8
    7e60:	4335      	orrs	r5, r6
    7e62:	002e      	movs	r6, r5
    7e64:	4655      	mov	r5, sl
    7e66:	40a8      	lsls	r0, r5
    7e68:	40d9      	lsrs	r1, r3
    7e6a:	1e45      	subs	r5, r0, #1
    7e6c:	41a8      	sbcs	r0, r5
    7e6e:	448c      	add	ip, r1
    7e70:	4306      	orrs	r6, r0
    7e72:	18b6      	adds	r6, r6, r2
    7e74:	4296      	cmp	r6, r2
    7e76:	4192      	sbcs	r2, r2
    7e78:	4251      	negs	r1, r2
    7e7a:	4461      	add	r1, ip
    7e7c:	003d      	movs	r5, r7
    7e7e:	e625      	b.n	7acc <__aeabi_dsub+0x18c>
    7e80:	003d      	movs	r5, r7
    7e82:	4661      	mov	r1, ip
    7e84:	4691      	mov	r9, r2
    7e86:	e678      	b.n	7b7a <__aeabi_dsub+0x23a>
    7e88:	000b      	movs	r3, r1
    7e8a:	4303      	orrs	r3, r0
    7e8c:	2d00      	cmp	r5, #0
    7e8e:	d000      	beq.n	7e92 <__aeabi_dsub+0x552>
    7e90:	e655      	b.n	7b3e <__aeabi_dsub+0x1fe>
    7e92:	2b00      	cmp	r3, #0
    7e94:	d0f5      	beq.n	7e82 <__aeabi_dsub+0x542>
    7e96:	4663      	mov	r3, ip
    7e98:	4313      	orrs	r3, r2
    7e9a:	d100      	bne.n	7e9e <__aeabi_dsub+0x55e>
    7e9c:	e66d      	b.n	7b7a <__aeabi_dsub+0x23a>
    7e9e:	1886      	adds	r6, r0, r2
    7ea0:	4286      	cmp	r6, r0
    7ea2:	4180      	sbcs	r0, r0
    7ea4:	4461      	add	r1, ip
    7ea6:	4240      	negs	r0, r0
    7ea8:	1809      	adds	r1, r1, r0
    7eaa:	2200      	movs	r2, #0
    7eac:	020b      	lsls	r3, r1, #8
    7eae:	d400      	bmi.n	7eb2 <__aeabi_dsub+0x572>
    7eb0:	e6d0      	b.n	7c54 <__aeabi_dsub+0x314>
    7eb2:	4b46      	ldr	r3, [pc, #280]	; (7fcc <__aeabi_dsub+0x68c>)
    7eb4:	3501      	adds	r5, #1
    7eb6:	4019      	ands	r1, r3
    7eb8:	e5b2      	b.n	7a20 <__aeabi_dsub+0xe0>
    7eba:	46b1      	mov	r9, r6
    7ebc:	e65d      	b.n	7b7a <__aeabi_dsub+0x23a>
    7ebe:	0033      	movs	r3, r6
    7ec0:	4667      	mov	r7, ip
    7ec2:	3b20      	subs	r3, #32
    7ec4:	40df      	lsrs	r7, r3
    7ec6:	003b      	movs	r3, r7
    7ec8:	2e20      	cmp	r6, #32
    7eca:	d005      	beq.n	7ed8 <__aeabi_dsub+0x598>
    7ecc:	2740      	movs	r7, #64	; 0x40
    7ece:	1bbf      	subs	r7, r7, r6
    7ed0:	4666      	mov	r6, ip
    7ed2:	40be      	lsls	r6, r7
    7ed4:	4332      	orrs	r2, r6
    7ed6:	4690      	mov	r8, r2
    7ed8:	4646      	mov	r6, r8
    7eda:	1e72      	subs	r2, r6, #1
    7edc:	4196      	sbcs	r6, r2
    7ede:	4333      	orrs	r3, r6
    7ee0:	e5ef      	b.n	7ac2 <__aeabi_dsub+0x182>
    7ee2:	4b39      	ldr	r3, [pc, #228]	; (7fc8 <__aeabi_dsub+0x688>)
    7ee4:	429f      	cmp	r7, r3
    7ee6:	d0cb      	beq.n	7e80 <__aeabi_dsub+0x540>
    7ee8:	2580      	movs	r5, #128	; 0x80
    7eea:	042d      	lsls	r5, r5, #16
    7eec:	4273      	negs	r3, r6
    7eee:	4329      	orrs	r1, r5
    7ef0:	e7a8      	b.n	7e44 <__aeabi_dsub+0x504>
    7ef2:	4308      	orrs	r0, r1
    7ef4:	1e41      	subs	r1, r0, #1
    7ef6:	4188      	sbcs	r0, r1
    7ef8:	e6a2      	b.n	7c40 <__aeabi_dsub+0x300>
    7efa:	2f00      	cmp	r7, #0
    7efc:	d100      	bne.n	7f00 <__aeabi_dsub+0x5c0>
    7efe:	e63c      	b.n	7b7a <__aeabi_dsub+0x23a>
    7f00:	4663      	mov	r3, ip
    7f02:	1a86      	subs	r6, r0, r2
    7f04:	1acf      	subs	r7, r1, r3
    7f06:	42b0      	cmp	r0, r6
    7f08:	419b      	sbcs	r3, r3
    7f0a:	425b      	negs	r3, r3
    7f0c:	1afb      	subs	r3, r7, r3
    7f0e:	4698      	mov	r8, r3
    7f10:	021b      	lsls	r3, r3, #8
    7f12:	d54e      	bpl.n	7fb2 <__aeabi_dsub+0x672>
    7f14:	1a16      	subs	r6, r2, r0
    7f16:	4663      	mov	r3, ip
    7f18:	42b2      	cmp	r2, r6
    7f1a:	4192      	sbcs	r2, r2
    7f1c:	1a59      	subs	r1, r3, r1
    7f1e:	4252      	negs	r2, r2
    7f20:	1a89      	subs	r1, r1, r2
    7f22:	465c      	mov	r4, fp
    7f24:	2200      	movs	r2, #0
    7f26:	e57b      	b.n	7a20 <__aeabi_dsub+0xe0>
    7f28:	4301      	orrs	r1, r0
    7f2a:	000e      	movs	r6, r1
    7f2c:	1e71      	subs	r1, r6, #1
    7f2e:	418e      	sbcs	r6, r1
    7f30:	e79f      	b.n	7e72 <__aeabi_dsub+0x532>
    7f32:	001d      	movs	r5, r3
    7f34:	000e      	movs	r6, r1
    7f36:	3d20      	subs	r5, #32
    7f38:	40ee      	lsrs	r6, r5
    7f3a:	46b0      	mov	r8, r6
    7f3c:	2b20      	cmp	r3, #32
    7f3e:	d004      	beq.n	7f4a <__aeabi_dsub+0x60a>
    7f40:	2540      	movs	r5, #64	; 0x40
    7f42:	1aeb      	subs	r3, r5, r3
    7f44:	4099      	lsls	r1, r3
    7f46:	4308      	orrs	r0, r1
    7f48:	4681      	mov	r9, r0
    7f4a:	4648      	mov	r0, r9
    7f4c:	4643      	mov	r3, r8
    7f4e:	1e41      	subs	r1, r0, #1
    7f50:	4188      	sbcs	r0, r1
    7f52:	4318      	orrs	r0, r3
    7f54:	e674      	b.n	7c40 <__aeabi_dsub+0x300>
    7f56:	2200      	movs	r2, #0
    7f58:	2400      	movs	r4, #0
    7f5a:	e617      	b.n	7b8c <__aeabi_dsub+0x24c>
    7f5c:	1a16      	subs	r6, r2, r0
    7f5e:	4663      	mov	r3, ip
    7f60:	42b2      	cmp	r2, r6
    7f62:	4192      	sbcs	r2, r2
    7f64:	1a59      	subs	r1, r3, r1
    7f66:	4252      	negs	r2, r2
    7f68:	1a89      	subs	r1, r1, r2
    7f6a:	003d      	movs	r5, r7
    7f6c:	e525      	b.n	79ba <__aeabi_dsub+0x7a>
    7f6e:	4661      	mov	r1, ip
    7f70:	4691      	mov	r9, r2
    7f72:	4d15      	ldr	r5, [pc, #84]	; (7fc8 <__aeabi_dsub+0x688>)
    7f74:	e601      	b.n	7b7a <__aeabi_dsub+0x23a>
    7f76:	2280      	movs	r2, #128	; 0x80
    7f78:	2400      	movs	r4, #0
    7f7a:	0312      	lsls	r2, r2, #12
    7f7c:	e679      	b.n	7c72 <__aeabi_dsub+0x332>
    7f7e:	001d      	movs	r5, r3
    7f80:	000e      	movs	r6, r1
    7f82:	3d20      	subs	r5, #32
    7f84:	40ee      	lsrs	r6, r5
    7f86:	46b0      	mov	r8, r6
    7f88:	2b20      	cmp	r3, #32
    7f8a:	d004      	beq.n	7f96 <__aeabi_dsub+0x656>
    7f8c:	2540      	movs	r5, #64	; 0x40
    7f8e:	1aeb      	subs	r3, r5, r3
    7f90:	4099      	lsls	r1, r3
    7f92:	4308      	orrs	r0, r1
    7f94:	4681      	mov	r9, r0
    7f96:	464e      	mov	r6, r9
    7f98:	4643      	mov	r3, r8
    7f9a:	1e71      	subs	r1, r6, #1
    7f9c:	418e      	sbcs	r6, r1
    7f9e:	431e      	orrs	r6, r3
    7fa0:	e767      	b.n	7e72 <__aeabi_dsub+0x532>
    7fa2:	1886      	adds	r6, r0, r2
    7fa4:	4296      	cmp	r6, r2
    7fa6:	419b      	sbcs	r3, r3
    7fa8:	4461      	add	r1, ip
    7faa:	425b      	negs	r3, r3
    7fac:	18c9      	adds	r1, r1, r3
    7fae:	003d      	movs	r5, r7
    7fb0:	e58c      	b.n	7acc <__aeabi_dsub+0x18c>
    7fb2:	4647      	mov	r7, r8
    7fb4:	4337      	orrs	r7, r6
    7fb6:	d0ce      	beq.n	7f56 <__aeabi_dsub+0x616>
    7fb8:	2207      	movs	r2, #7
    7fba:	4641      	mov	r1, r8
    7fbc:	4032      	ands	r2, r6
    7fbe:	e649      	b.n	7c54 <__aeabi_dsub+0x314>
    7fc0:	2700      	movs	r7, #0
    7fc2:	003a      	movs	r2, r7
    7fc4:	e5e6      	b.n	7b94 <__aeabi_dsub+0x254>
    7fc6:	46c0      	nop			; (mov r8, r8)
    7fc8:	000007ff 	.word	0x000007ff
    7fcc:	ff7fffff 	.word	0xff7fffff

00007fd0 <__aeabi_d2iz>:
__aeabi_d2iz():
    7fd0:	b530      	push	{r4, r5, lr}
    7fd2:	4d14      	ldr	r5, [pc, #80]	; (8024 <__aeabi_d2iz+0x54>)
    7fd4:	030a      	lsls	r2, r1, #12
    7fd6:	004b      	lsls	r3, r1, #1
    7fd8:	0b12      	lsrs	r2, r2, #12
    7fda:	0d5b      	lsrs	r3, r3, #21
    7fdc:	0fc9      	lsrs	r1, r1, #31
    7fde:	2400      	movs	r4, #0
    7fe0:	42ab      	cmp	r3, r5
    7fe2:	dd11      	ble.n	8008 <__aeabi_d2iz+0x38>
    7fe4:	4c10      	ldr	r4, [pc, #64]	; (8028 <__aeabi_d2iz+0x58>)
    7fe6:	42a3      	cmp	r3, r4
    7fe8:	dc10      	bgt.n	800c <__aeabi_d2iz+0x3c>
    7fea:	2480      	movs	r4, #128	; 0x80
    7fec:	0364      	lsls	r4, r4, #13
    7fee:	4322      	orrs	r2, r4
    7ff0:	4c0e      	ldr	r4, [pc, #56]	; (802c <__aeabi_d2iz+0x5c>)
    7ff2:	1ae4      	subs	r4, r4, r3
    7ff4:	2c1f      	cmp	r4, #31
    7ff6:	dd0c      	ble.n	8012 <__aeabi_d2iz+0x42>
    7ff8:	480d      	ldr	r0, [pc, #52]	; (8030 <__aeabi_d2iz+0x60>)
    7ffa:	1ac3      	subs	r3, r0, r3
    7ffc:	40da      	lsrs	r2, r3
    7ffe:	0013      	movs	r3, r2
    8000:	425c      	negs	r4, r3
    8002:	2900      	cmp	r1, #0
    8004:	d100      	bne.n	8008 <__aeabi_d2iz+0x38>
    8006:	001c      	movs	r4, r3
    8008:	0020      	movs	r0, r4
    800a:	bd30      	pop	{r4, r5, pc}
    800c:	4b09      	ldr	r3, [pc, #36]	; (8034 <__aeabi_d2iz+0x64>)
    800e:	18cc      	adds	r4, r1, r3
    8010:	e7fa      	b.n	8008 <__aeabi_d2iz+0x38>
    8012:	4d09      	ldr	r5, [pc, #36]	; (8038 <__aeabi_d2iz+0x68>)
    8014:	40e0      	lsrs	r0, r4
    8016:	46ac      	mov	ip, r5
    8018:	4463      	add	r3, ip
    801a:	409a      	lsls	r2, r3
    801c:	0013      	movs	r3, r2
    801e:	4303      	orrs	r3, r0
    8020:	e7ee      	b.n	8000 <__aeabi_d2iz+0x30>
    8022:	46c0      	nop			; (mov r8, r8)
    8024:	000003fe 	.word	0x000003fe
    8028:	0000041d 	.word	0x0000041d
    802c:	00000433 	.word	0x00000433
    8030:	00000413 	.word	0x00000413
    8034:	7fffffff 	.word	0x7fffffff
    8038:	fffffbed 	.word	0xfffffbed

0000803c <__aeabi_ui2d>:
__aeabi_ui2d():
    803c:	b510      	push	{r4, lr}
    803e:	1e04      	subs	r4, r0, #0
    8040:	d025      	beq.n	808e <__aeabi_ui2d+0x52>
    8042:	f000 f82d 	bl	80a0 <__clzsi2>
    8046:	4b14      	ldr	r3, [pc, #80]	; (8098 <__aeabi_ui2d+0x5c>)
    8048:	1a1b      	subs	r3, r3, r0
    804a:	055b      	lsls	r3, r3, #21
    804c:	0d5b      	lsrs	r3, r3, #21
    804e:	280a      	cmp	r0, #10
    8050:	dd12      	ble.n	8078 <__aeabi_ui2d+0x3c>
    8052:	380b      	subs	r0, #11
    8054:	4084      	lsls	r4, r0
    8056:	2200      	movs	r2, #0
    8058:	0324      	lsls	r4, r4, #12
    805a:	0b24      	lsrs	r4, r4, #12
    805c:	2100      	movs	r1, #0
    805e:	0010      	movs	r0, r2
    8060:	0324      	lsls	r4, r4, #12
    8062:	0d0a      	lsrs	r2, r1, #20
    8064:	0b24      	lsrs	r4, r4, #12
    8066:	0512      	lsls	r2, r2, #20
    8068:	4322      	orrs	r2, r4
    806a:	4c0c      	ldr	r4, [pc, #48]	; (809c <__aeabi_ui2d+0x60>)
    806c:	051b      	lsls	r3, r3, #20
    806e:	4022      	ands	r2, r4
    8070:	4313      	orrs	r3, r2
    8072:	005b      	lsls	r3, r3, #1
    8074:	0859      	lsrs	r1, r3, #1
    8076:	bd10      	pop	{r4, pc}
    8078:	0002      	movs	r2, r0
    807a:	0021      	movs	r1, r4
    807c:	3215      	adds	r2, #21
    807e:	4091      	lsls	r1, r2
    8080:	000a      	movs	r2, r1
    8082:	210b      	movs	r1, #11
    8084:	1a08      	subs	r0, r1, r0
    8086:	40c4      	lsrs	r4, r0
    8088:	0324      	lsls	r4, r4, #12
    808a:	0b24      	lsrs	r4, r4, #12
    808c:	e7e6      	b.n	805c <__aeabi_ui2d+0x20>
    808e:	2300      	movs	r3, #0
    8090:	2400      	movs	r4, #0
    8092:	2200      	movs	r2, #0
    8094:	e7e2      	b.n	805c <__aeabi_ui2d+0x20>
    8096:	46c0      	nop			; (mov r8, r8)
    8098:	0000041e 	.word	0x0000041e
    809c:	800fffff 	.word	0x800fffff

000080a0 <__clzsi2>:
__clzsi2():
    80a0:	211c      	movs	r1, #28
    80a2:	2301      	movs	r3, #1
    80a4:	041b      	lsls	r3, r3, #16
    80a6:	4298      	cmp	r0, r3
    80a8:	d301      	bcc.n	80ae <__clzsi2+0xe>
    80aa:	0c00      	lsrs	r0, r0, #16
    80ac:	3910      	subs	r1, #16
    80ae:	0a1b      	lsrs	r3, r3, #8
    80b0:	4298      	cmp	r0, r3
    80b2:	d301      	bcc.n	80b8 <__clzsi2+0x18>
    80b4:	0a00      	lsrs	r0, r0, #8
    80b6:	3908      	subs	r1, #8
    80b8:	091b      	lsrs	r3, r3, #4
    80ba:	4298      	cmp	r0, r3
    80bc:	d301      	bcc.n	80c2 <__clzsi2+0x22>
    80be:	0900      	lsrs	r0, r0, #4
    80c0:	3904      	subs	r1, #4
    80c2:	a202      	add	r2, pc, #8	; (adr r2, 80cc <__clzsi2+0x2c>)
    80c4:	5c10      	ldrb	r0, [r2, r0]
    80c6:	1840      	adds	r0, r0, r1
    80c8:	4770      	bx	lr
    80ca:	46c0      	nop			; (mov r8, r8)
    80cc:	02020304 	.word	0x02020304
    80d0:	01010101 	.word	0x01010101
	...

000080dc <__clzdi2>:
__clzdi2():
    80dc:	b510      	push	{r4, lr}
    80de:	2900      	cmp	r1, #0
    80e0:	d103      	bne.n	80ea <__clzdi2+0xe>
    80e2:	f7ff ffdd 	bl	80a0 <__clzsi2>
    80e6:	3020      	adds	r0, #32
    80e8:	e002      	b.n	80f0 <__clzdi2+0x14>
    80ea:	1c08      	adds	r0, r1, #0
    80ec:	f7ff ffd8 	bl	80a0 <__clzsi2>
    80f0:	bd10      	pop	{r4, pc}
    80f2:	46c0      	nop			; (mov r8, r8)

000080f4 <strlen>:
strlen():
    80f4:	2300      	movs	r3, #0
    80f6:	5cc2      	ldrb	r2, [r0, r3]
    80f8:	3301      	adds	r3, #1
    80fa:	2a00      	cmp	r2, #0
    80fc:	d1fb      	bne.n	80f6 <strlen+0x2>
    80fe:	1e58      	subs	r0, r3, #1
    8100:	4770      	bx	lr
	...

00008104 <SystemInit>:
SystemInit():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:112
    //看门狗默认为开启，而且复位之后只能开启或关闭看门狗一次
    //SIM_COPC &= ~SIM_COPC_COPT_MASK;    //DISABLE_WDOG 

    /* System clock initialization */
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
    8104:	493b      	ldr	r1, [pc, #236]	; (81f4 <SystemInit+0xf0>)
    8106:	4a3c      	ldr	r2, [pc, #240]	; (81f8 <SystemInit+0xf4>)
    8108:	23c0      	movs	r3, #192	; 0xc0
    810a:	029b      	lsls	r3, r3, #10
    810c:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:114
    /* SIM_SCGC5: PORTA=1 */
    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
    810e:	4a39      	ldr	r2, [pc, #228]	; (81f4 <SystemInit+0xf0>)
    8110:	4b3a      	ldr	r3, [pc, #232]	; (81fc <SystemInit+0xf8>)
    8112:	58d3      	ldr	r3, [r2, r3]
    8114:	4937      	ldr	r1, [pc, #220]	; (81f4 <SystemInit+0xf0>)
    8116:	2280      	movs	r2, #128	; 0x80
    8118:	0092      	lsls	r2, r2, #2
    811a:	4313      	orrs	r3, r2
    811c:	4a37      	ldr	r2, [pc, #220]	; (81fc <SystemInit+0xf8>)
    811e:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:115
    if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
    8120:	4b37      	ldr	r3, [pc, #220]	; (8200 <SystemInit+0xfc>)
    8122:	789b      	ldrb	r3, [r3, #2]
    8124:	b2db      	uxtb	r3, r3
    8126:	001a      	movs	r2, r3
    8128:	2308      	movs	r3, #8
    812a:	4013      	ands	r3, r2
    812c:	d007      	beq.n	813e <SystemInit+0x3a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:117
        /* PMC_REGSC: ACKISO=1 */
        PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
    812e:	4b34      	ldr	r3, [pc, #208]	; (8200 <SystemInit+0xfc>)
    8130:	789b      	ldrb	r3, [r3, #2]
    8132:	b2db      	uxtb	r3, r3
    8134:	4a32      	ldr	r2, [pc, #200]	; (8200 <SystemInit+0xfc>)
    8136:	2108      	movs	r1, #8
    8138:	430b      	orrs	r3, r1
    813a:	b2db      	uxtb	r3, r3
    813c:	7093      	strb	r3, [r2, #2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:120
    }
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=1,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x01)); /* Update system prescalers */
    813e:	492d      	ldr	r1, [pc, #180]	; (81f4 <SystemInit+0xf0>)
    8140:	4a2d      	ldr	r2, [pc, #180]	; (81f8 <SystemInit+0xf4>)
    8142:	2380      	movs	r3, #128	; 0x80
    8144:	025b      	lsls	r3, r3, #9
    8146:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:122
    /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
    SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
    8148:	4a2a      	ldr	r2, [pc, #168]	; (81f4 <SystemInit+0xf0>)
    814a:	4b2e      	ldr	r3, [pc, #184]	; (8204 <SystemInit+0x100>)
    814c:	58d3      	ldr	r3, [r2, r3]
    814e:	4929      	ldr	r1, [pc, #164]	; (81f4 <SystemInit+0xf0>)
    8150:	4a2d      	ldr	r2, [pc, #180]	; (8208 <SystemInit+0x104>)
    8152:	4013      	ands	r3, r2
    8154:	4a2b      	ldr	r2, [pc, #172]	; (8204 <SystemInit+0x100>)
    8156:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:124
    /* SIM_SOPT1: OSC32KSEL=0 */
    SIM_SOPT1 &= (uint32_t)~(uint32_t)(SIM_SOPT1_OSC32KSEL(0x03)); /* System oscillator drives 32 kHz clock for various peripherals */
    8158:	4b26      	ldr	r3, [pc, #152]	; (81f4 <SystemInit+0xf0>)
    815a:	681a      	ldr	r2, [r3, #0]
    815c:	4b25      	ldr	r3, [pc, #148]	; (81f4 <SystemInit+0xf0>)
    815e:	492b      	ldr	r1, [pc, #172]	; (820c <SystemInit+0x108>)
    8160:	400a      	ands	r2, r1
    8162:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:126
    /* SIM_SOPT2: TPMSRC=1 */
    SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
    8164:	4a23      	ldr	r2, [pc, #140]	; (81f4 <SystemInit+0xf0>)
    8166:	4b27      	ldr	r3, [pc, #156]	; (8204 <SystemInit+0x100>)
    8168:	58d3      	ldr	r3, [r2, r3]
    816a:	4a29      	ldr	r2, [pc, #164]	; (8210 <SystemInit+0x10c>)
    816c:	4013      	ands	r3, r2
    816e:	4921      	ldr	r1, [pc, #132]	; (81f4 <SystemInit+0xf0>)
    8170:	2280      	movs	r2, #128	; 0x80
    8172:	0452      	lsls	r2, r2, #17
    8174:	4313      	orrs	r3, r2
    8176:	4a23      	ldr	r2, [pc, #140]	; (8204 <SystemInit+0x100>)
    8178:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:133
    )) | (uint32_t)(
            SIM_SOPT2_TPMSRC(0x01)
    ));                      /* Set the TPM clock */
    /* Switch to FEI Mode */
    /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
    MCG_C1 = MCG_C1_CLKS(0x00) |
    817a:	4b26      	ldr	r3, [pc, #152]	; (8214 <SystemInit+0x110>)
    817c:	2206      	movs	r2, #6
    817e:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:138
            MCG_C1_FRDIV(0x00) |
            MCG_C1_IREFS_MASK |
            MCG_C1_IRCLKEN_MASK;
    /* MCG_C2: LOCRE0=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
    MCG_C2 &= (uint8_t)~(uint8_t)(
    8180:	4b24      	ldr	r3, [pc, #144]	; (8214 <SystemInit+0x110>)
    8182:	785b      	ldrb	r3, [r3, #1]
    8184:	b2db      	uxtb	r3, r3
    8186:	4a23      	ldr	r2, [pc, #140]	; (8214 <SystemInit+0x110>)
    8188:	2140      	movs	r1, #64	; 0x40
    818a:	400b      	ands	r3, r1
    818c:	b2db      	uxtb	r3, r3
    818e:	7053      	strb	r3, [r2, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:147
            MCG_C2_EREFS0_MASK |
            MCG_C2_LP_MASK |
            MCG_C2_IRCS_MASK
    );
    /* MCG_C4: DMX32=1,DRST_DRS=1 */
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    8190:	4b20      	ldr	r3, [pc, #128]	; (8214 <SystemInit+0x110>)
    8192:	78db      	ldrb	r3, [r3, #3]
    8194:	b2db      	uxtb	r3, r3
    8196:	b25b      	sxtb	r3, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:149
            MCG_C4_DRST_DRS(0x02)
    )) | (uint8_t)(
    8198:	221f      	movs	r2, #31
    819a:	4013      	ands	r3, r2
    819c:	b25b      	sxtb	r3, r3
    819e:	2260      	movs	r2, #96	; 0x60
    81a0:	4252      	negs	r2, r2
    81a2:	4313      	orrs	r3, r2
    81a4:	b25a      	sxtb	r2, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:147
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    81a6:	4b1b      	ldr	r3, [pc, #108]	; (8214 <SystemInit+0x110>)
    81a8:	b2d2      	uxtb	r2, r2
    81aa:	70da      	strb	r2, [r3, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:154
            MCG_C4_DMX32_MASK |
            MCG_C4_DRST_DRS(0x01)
    ));
    /* OSC0_CR: ERCLKEN=0,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
    OSC0_CR = 0x00U;
    81ac:	4b1a      	ldr	r3, [pc, #104]	; (8218 <SystemInit+0x114>)
    81ae:	2200      	movs	r2, #0
    81b0:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:156
    /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
    MCG_C5 = MCG_C5_PRDIV0(0x00);
    81b2:	4b18      	ldr	r3, [pc, #96]	; (8214 <SystemInit+0x110>)
    81b4:	2200      	movs	r2, #0
    81b6:	711a      	strb	r2, [r3, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:158
    /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
    MCG_C6 = MCG_C6_VDIV0(0x00);
    81b8:	4b16      	ldr	r3, [pc, #88]	; (8214 <SystemInit+0x110>)
    81ba:	2200      	movs	r2, #0
    81bc:	715a      	strb	r2, [r3, #5]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:159
    while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    81be:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:159 (discriminator 1)
    81c0:	4b14      	ldr	r3, [pc, #80]	; (8214 <SystemInit+0x110>)
    81c2:	799b      	ldrb	r3, [r3, #6]
    81c4:	b2db      	uxtb	r3, r3
    81c6:	001a      	movs	r2, r3
    81c8:	2310      	movs	r3, #16
    81ca:	4013      	ands	r3, r2
    81cc:	d0f8      	beq.n	81c0 <SystemInit+0xbc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:161
    }
    while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    81ce:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:161 (discriminator 1)
    81d0:	4b10      	ldr	r3, [pc, #64]	; (8214 <SystemInit+0x110>)
    81d2:	799b      	ldrb	r3, [r3, #6]
    81d4:	b2db      	uxtb	r3, r3
    81d6:	001a      	movs	r2, r3
    81d8:	230c      	movs	r3, #12
    81da:	4013      	ands	r3, r2
    81dc:	d1f8      	bne.n	81d0 <SystemInit+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:234
    //        if (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x3) break;
    //    }
    //    //4.现在处于PEE模式

    //开启PORT模块时钟
    SIM->SCGC5 |= SIM_SCGC5_PORTA_MASK
    81de:	4a05      	ldr	r2, [pc, #20]	; (81f4 <SystemInit+0xf0>)
    81e0:	4b06      	ldr	r3, [pc, #24]	; (81fc <SystemInit+0xf8>)
    81e2:	58d3      	ldr	r3, [r2, r3]
    81e4:	4903      	ldr	r1, [pc, #12]	; (81f4 <SystemInit+0xf0>)
    81e6:	22f8      	movs	r2, #248	; 0xf8
    81e8:	0192      	lsls	r2, r2, #6
    81ea:	4313      	orrs	r3, r2
    81ec:	4a03      	ldr	r2, [pc, #12]	; (81fc <SystemInit+0xf8>)
    81ee:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/system_MKL36Z4.c:239
            | SIM_SCGC5_PORTB_MASK
            | SIM_SCGC5_PORTC_MASK
            | SIM_SCGC5_PORTD_MASK
            | SIM_SCGC5_PORTE_MASK;
}
    81f0:	46c0      	nop			; (mov r8, r8)
    81f2:	4770      	bx	lr
    81f4:	40047000 	.word	0x40047000
    81f8:	00001044 	.word	0x00001044
    81fc:	00001038 	.word	0x00001038
    8200:	4007d000 	.word	0x4007d000
    8204:	00001004 	.word	0x00001004
    8208:	fffcffff 	.word	0xfffcffff
    820c:	fff3ffff 	.word	0xfff3ffff
    8210:	fcffffff 	.word	0xfcffffff
    8214:	40064000 	.word	0x40064000
    8218:	40065000 	.word	0x40065000

0000821c <main>:
main():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:18
//main.c使用的内部函数声明处
void delay_ms(uint32_t ms);
//----------------------------------------------------------------------
//主函数，一般情况下可以认为程序从此开始运行（实际上有启动过程见书稿）
int main(void)
{
    821c:	b510      	push	{r4, lr}
    821e:	b088      	sub	sp, #32
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:20
    //（1.2）【不变】关总中断
    DISABLE_INTERRUPTS;
    8220:	b672      	cpsid	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:21
    wdog_stop();
    8222:	f000 fe21 	bl	8e68 <wdog_stop>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:23

    uint8_t data[20] = "nothing";
    8226:	a903      	add	r1, sp, #12
    8228:	4a25      	ldr	r2, [pc, #148]	; (82c0 <main+0xa4>)
    822a:	000b      	movs	r3, r1
    822c:	ca11      	ldmia	r2!, {r0, r4}
    822e:	c311      	stmia	r3!, {r0, r4}
    8230:	000b      	movs	r3, r1
    8232:	3308      	adds	r3, #8
    8234:	220c      	movs	r2, #12
    8236:	2100      	movs	r1, #0
    8238:	0018      	movs	r0, r3
    823a:	f001 ffd4 	bl	a1e6 <memset>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:25
    // 初始化SPI发送标标志
    gSendFlag = 0;
    823e:	4b21      	ldr	r3, [pc, #132]	; (82c4 <main+0xa8>)
    8240:	2200      	movs	r2, #0
    8242:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:28

    // 初始化发送串口和接收串口
    suart_init(SUART_TX, SUART_SEND);
    8244:	2380      	movs	r3, #128	; 0x80
    8246:	009b      	lsls	r3, r3, #2
    8248:	2101      	movs	r1, #1
    824a:	0018      	movs	r0, r3
    824c:	f000 f970 	bl	8530 <suart_init>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:29
    suart_init(SUART_RX, SUART_RECEVIE);
    8250:	4b1d      	ldr	r3, [pc, #116]	; (82c8 <main+0xac>)
    8252:	2100      	movs	r1, #0
    8254:	0018      	movs	r0, r3
    8256:	f000 f96b 	bl	8530 <suart_init>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:32

    // 将SPI0初始化为主机，波特率为6000， 时钟极性0，相位0
    spi_init(SPI_SEND, 1, 6000, 0, 0);
    825a:	4a1c      	ldr	r2, [pc, #112]	; (82cc <main+0xb0>)
    825c:	2300      	movs	r3, #0
    825e:	9300      	str	r3, [sp, #0]
    8260:	2300      	movs	r3, #0
    8262:	2101      	movs	r1, #1
    8264:	2000      	movs	r0, #0
    8266:	f000 fe25 	bl	8eb4 <spi_init>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:34
    // 将SPI1初始化为主机，波特率为6000， 时钟极性0，相位0
    spi_init(SPI_RECEIVE, 0, 6000, 0, 0);
    826a:	4a18      	ldr	r2, [pc, #96]	; (82cc <main+0xb0>)
    826c:	2300      	movs	r3, #0
    826e:	9300      	str	r3, [sp, #0]
    8270:	2300      	movs	r3, #0
    8272:	2100      	movs	r1, #0
    8274:	2001      	movs	r0, #1
    8276:	f000 fe1d 	bl	8eb4 <spi_init>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:39



    // 使能串口接收中断
    suart_enable_receive_interupt(SUART_RX);
    827a:	4b13      	ldr	r3, [pc, #76]	; (82c8 <main+0xac>)
    827c:	0018      	movs	r0, r3
    827e:	f000 fd63 	bl	8d48 <suart_enable_receive_interupt>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:41
    // 使能SPI1模块中断
    spi_enable_re_int(SPI_RECEIVE);
    8282:	2001      	movs	r0, #1
    8284:	f001 f8a4 	bl	93d0 <spi_enable_re_int>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:44

    //（1.7）【不变】开总中断
    ENABLE_INTERRUPTS;
    8288:	b662      	cpsie	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:50
    //（2）======主循环部分（结尾）========================================

    for (;;) {
        // delay_ms(1000);
        //SPI数据发送
        if (gSendFlag) {
    828a:	4b0e      	ldr	r3, [pc, #56]	; (82c4 <main+0xa8>)
    828c:	781b      	ldrb	r3, [r3, #0]
    828e:	2b00      	cmp	r3, #0
    8290:	d0fb      	beq.n	828a <main+0x6e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:51
            printf("主机字符串开始发送!\n");
    8292:	4b0f      	ldr	r3, [pc, #60]	; (82d0 <main+0xb4>)
    8294:	0018      	movs	r0, r3
    8296:	f001 ff7f 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:52
            spi_sendN(SPI_SEND, strlen(gRecvBuff), gRecvBuff);      //发送数据
    829a:	4b0e      	ldr	r3, [pc, #56]	; (82d4 <main+0xb8>)
    829c:	0018      	movs	r0, r3
    829e:	f7ff ff29 	bl	80f4 <strlen>
    82a2:	0003      	movs	r3, r0
    82a4:	b2db      	uxtb	r3, r3
    82a6:	4a0b      	ldr	r2, [pc, #44]	; (82d4 <main+0xb8>)
    82a8:	0019      	movs	r1, r3
    82aa:	2000      	movs	r0, #0
    82ac:	f001 f81a 	bl	92e4 <spi_sendN>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:53
            printf("主机字符串发送完毕!\n");
    82b0:	4b09      	ldr	r3, [pc, #36]	; (82d8 <main+0xbc>)
    82b2:	0018      	movs	r0, r3
    82b4:	f001 ff70 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:54
            gSendFlag = 0;
    82b8:	4b02      	ldr	r3, [pc, #8]	; (82c4 <main+0xa8>)
    82ba:	2200      	movs	r2, #0
    82bc:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/main.c:50
        if (gSendFlag) {
    82be:	e7e4      	b.n	828a <main+0x6e>
    82c0:	0000a228 	.word	0x0000a228
    82c4:	20000628 	.word	0x20000628
    82c8:	00000201 	.word	0x00000201
    82cc:	00001770 	.word	0x00001770
    82d0:	0000a1f8 	.word	0x0000a1f8
    82d4:	20000420 	.word	0x20000420
    82d8:	0000a210 	.word	0x0000a210

000082dc <flash_erase>:
flash_erase():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:50
//函数返回：函数执行执行状态：0=正常；1=异常。
//参数说明：sect：目标扇区号（范围取决于实际芯片，见mcu.h）
//功能概要：擦除flash存储器的sect扇区
//======================================================================
uint8_t flash_erase(uint16_t sect)
{
    82dc:	b500      	push	{lr}
    82de:	b085      	sub	sp, #20
    82e0:	0002      	movs	r2, r0
    82e2:	466b      	mov	r3, sp
    82e4:	3306      	adds	r3, #6
    82e6:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:57
    {
        uint32_t  word;
        uint8_t   byte[4];
    } dest;
    
    dest.word    = (uint32_t)(sect*(1<<10));
    82e8:	466b      	mov	r3, sp
    82ea:	3306      	adds	r3, #6
    82ec:	881b      	ldrh	r3, [r3, #0]
    82ee:	029b      	lsls	r3, r3, #10
    82f0:	9303      	str	r3, [sp, #12]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:60

    // 设置擦除命令
    FTFA_FCCOB0 = ERSSCR; // 擦除扇区命令
    82f2:	4b1e      	ldr	r3, [pc, #120]	; (836c <flash_erase+0x90>)
    82f4:	2209      	movs	r2, #9
    82f6:	71da      	strb	r2, [r3, #7]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:63
    
    // 设置目标地址
    FTFA_FCCOB1 = dest.byte[2];
    82f8:	4a1c      	ldr	r2, [pc, #112]	; (836c <flash_erase+0x90>)
    82fa:	ab03      	add	r3, sp, #12
    82fc:	789b      	ldrb	r3, [r3, #2]
    82fe:	7193      	strb	r3, [r2, #6]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:64
    FTFA_FCCOB2 = dest.byte[1];
    8300:	4a1a      	ldr	r2, [pc, #104]	; (836c <flash_erase+0x90>)
    8302:	ab03      	add	r3, sp, #12
    8304:	785b      	ldrb	r3, [r3, #1]
    8306:	7153      	strb	r3, [r2, #5]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:65
    FTFA_FCCOB3 = dest.byte[0];
    8308:	4a18      	ldr	r2, [pc, #96]	; (836c <flash_erase+0x90>)
    830a:	ab03      	add	r3, sp, #12
    830c:	781b      	ldrb	r3, [r3, #0]
    830e:	7113      	strb	r3, [r2, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:68
    
    // 执行命令序列
    if(1 == flash_cmd_launch())    //若执行命令出现错误
    8310:	f000 f8c6 	bl	84a0 <flash_cmd_launch>
    8314:	0003      	movs	r3, r0
    8316:	2b01      	cmp	r3, #1
    8318:	d101      	bne.n	831e <flash_erase+0x42>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:69
        return 1;     //擦除命令错误
    831a:	2301      	movs	r3, #1
    831c:	e023      	b.n	8366 <flash_erase+0x8a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:73
   
    // 若擦除sector0时，则解锁设备
//    if(dest.word <= 0x800)
    if(dest.word < 0x400)
    831e:	9b03      	ldr	r3, [sp, #12]
    8320:	4a13      	ldr	r2, [pc, #76]	; (8370 <flash_erase+0x94>)
    8322:	4293      	cmp	r3, r2
    8324:	d81e      	bhi.n	8364 <flash_erase+0x88>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:76
    {
        // 写入4字节
        FTFA_FCCOB0 = PGM4; 
    8326:	4b11      	ldr	r3, [pc, #68]	; (836c <flash_erase+0x90>)
    8328:	2206      	movs	r2, #6
    832a:	71da      	strb	r2, [r3, #7]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:78
        // 设置目标地址
        FTFA_FCCOB1 = 0x00;
    832c:	4b0f      	ldr	r3, [pc, #60]	; (836c <flash_erase+0x90>)
    832e:	2200      	movs	r2, #0
    8330:	719a      	strb	r2, [r3, #6]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:79
        FTFA_FCCOB2 = 0x04;
    8332:	4b0e      	ldr	r3, [pc, #56]	; (836c <flash_erase+0x90>)
    8334:	2204      	movs	r2, #4
    8336:	715a      	strb	r2, [r3, #5]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:80
        FTFA_FCCOB3 = 0x0C;
    8338:	4b0c      	ldr	r3, [pc, #48]	; (836c <flash_erase+0x90>)
    833a:	220c      	movs	r2, #12
    833c:	711a      	strb	r2, [r3, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:82
        // 数据
        FTFA_FCCOB4 = 0xFF;
    833e:	4b0b      	ldr	r3, [pc, #44]	; (836c <flash_erase+0x90>)
    8340:	22ff      	movs	r2, #255	; 0xff
    8342:	72da      	strb	r2, [r3, #11]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:83
        FTFA_FCCOB5 = 0xFF;
    8344:	4b09      	ldr	r3, [pc, #36]	; (836c <flash_erase+0x90>)
    8346:	22ff      	movs	r2, #255	; 0xff
    8348:	729a      	strb	r2, [r3, #10]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:84
        FTFA_FCCOB6 = 0xFF;
    834a:	4b08      	ldr	r3, [pc, #32]	; (836c <flash_erase+0x90>)
    834c:	22ff      	movs	r2, #255	; 0xff
    834e:	725a      	strb	r2, [r3, #9]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:85
        FTFA_FCCOB7 = 0xFE;
    8350:	4b06      	ldr	r3, [pc, #24]	; (836c <flash_erase+0x90>)
    8352:	22fe      	movs	r2, #254	; 0xfe
    8354:	721a      	strb	r2, [r3, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:87
        // 执行命令序列
        if(1 == flash_cmd_launch())  //若执行命令出现错误
    8356:	f000 f8a3 	bl	84a0 <flash_cmd_launch>
    835a:	0003      	movs	r3, r0
    835c:	2b01      	cmp	r3, #1
    835e:	d101      	bne.n	8364 <flash_erase+0x88>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:88
            return 2;   //解锁命令错误
    8360:	2302      	movs	r3, #2
    8362:	e000      	b.n	8366 <flash_erase+0x8a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:91
    }  
    
    return 0;  //成功返回
    8364:	2300      	movs	r3, #0
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:92 (discriminator 1)
}
    8366:	0018      	movs	r0, r3
    8368:	b005      	add	sp, #20
    836a:	bd00      	pop	{pc}
    836c:	40020000 	.word	0x40020000
    8370:	000003ff 	.word	0x000003ff

00008374 <flash_write_physical>:
flash_write_physical():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:147
//        N：写字节数目（0~1020,要求为4，8,12,......）
//        buf：写入数据存放处
//功能概要：读取flash指定地址的内容
//========================================================================
uint8_t flash_write_physical(uint32_t destaddr,uint16_t N,uint8_t *buf)
{
    8374:	b500      	push	{lr}
    8376:	b087      	sub	sp, #28
    8378:	9003      	str	r0, [sp, #12]
    837a:	9201      	str	r2, [sp, #4]
    837c:	230a      	movs	r3, #10
    837e:	446b      	add	r3, sp
    8380:	1c0a      	adds	r2, r1, #0
    8382:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:156
        uint32_t   word;
        uint8_t  byte[4];
    } dest;

    // 设置写入命令
    FTFA_FCCOB0 = PGM4;
    8384:	4b1e      	ldr	r3, [pc, #120]	; (8400 <flash_write_physical+0x8c>)
    8386:	2206      	movs	r2, #6
    8388:	71da      	strb	r2, [r3, #7]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:157
    dest.word = destaddr;
    838a:	9b03      	ldr	r3, [sp, #12]
    838c:	9304      	str	r3, [sp, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:158
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    838e:	2300      	movs	r3, #0
    8390:	9305      	str	r3, [sp, #20]
    8392:	e02b      	b.n	83ec <flash_write_physical+0x78>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:161
    {
        // 设置目标地址
        FTFA_FCCOB1 = dest.byte[2];
    8394:	4a1a      	ldr	r2, [pc, #104]	; (8400 <flash_write_physical+0x8c>)
    8396:	ab04      	add	r3, sp, #16
    8398:	789b      	ldrb	r3, [r3, #2]
    839a:	7193      	strb	r3, [r2, #6]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:162
        FTFA_FCCOB2 = dest.byte[1];
    839c:	4a18      	ldr	r2, [pc, #96]	; (8400 <flash_write_physical+0x8c>)
    839e:	ab04      	add	r3, sp, #16
    83a0:	785b      	ldrb	r3, [r3, #1]
    83a2:	7153      	strb	r3, [r2, #5]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:163
        FTFA_FCCOB3 = dest.byte[0];
    83a4:	4a16      	ldr	r2, [pc, #88]	; (8400 <flash_write_physical+0x8c>)
    83a6:	ab04      	add	r3, sp, #16
    83a8:	781b      	ldrb	r3, [r3, #0]
    83aa:	7113      	strb	r3, [r2, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:166

        // 拷贝数据
        FTFA_FCCOB4 = buf[3];//大端寻址
    83ac:	4a14      	ldr	r2, [pc, #80]	; (8400 <flash_write_physical+0x8c>)
    83ae:	9b01      	ldr	r3, [sp, #4]
    83b0:	78db      	ldrb	r3, [r3, #3]
    83b2:	72d3      	strb	r3, [r2, #11]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:167
        FTFA_FCCOB5 = buf[2];
    83b4:	4a12      	ldr	r2, [pc, #72]	; (8400 <flash_write_physical+0x8c>)
    83b6:	9b01      	ldr	r3, [sp, #4]
    83b8:	789b      	ldrb	r3, [r3, #2]
    83ba:	7293      	strb	r3, [r2, #10]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:168
        FTFA_FCCOB6 = buf[1];
    83bc:	4a10      	ldr	r2, [pc, #64]	; (8400 <flash_write_physical+0x8c>)
    83be:	9b01      	ldr	r3, [sp, #4]
    83c0:	785b      	ldrb	r3, [r3, #1]
    83c2:	7253      	strb	r3, [r2, #9]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:169
        FTFA_FCCOB7 = buf[0];
    83c4:	4a0e      	ldr	r2, [pc, #56]	; (8400 <flash_write_physical+0x8c>)
    83c6:	9b01      	ldr	r3, [sp, #4]
    83c8:	781b      	ldrb	r3, [r3, #0]
    83ca:	7213      	strb	r3, [r2, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:171

        if(1 == flash_cmd_launch())
    83cc:	f000 f868 	bl	84a0 <flash_cmd_launch>
    83d0:	0003      	movs	r3, r0
    83d2:	2b01      	cmp	r3, #1
    83d4:	d101      	bne.n	83da <flash_write_physical+0x66>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:172
            return 2;  //写入命令错误
    83d6:	2302      	movs	r3, #2
    83d8:	e00f      	b.n	83fa <flash_write_physical+0x86>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:158 (discriminator 2)
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    83da:	9b05      	ldr	r3, [sp, #20]
    83dc:	3304      	adds	r3, #4
    83de:	9305      	str	r3, [sp, #20]
    83e0:	9b04      	ldr	r3, [sp, #16]
    83e2:	3304      	adds	r3, #4
    83e4:	9304      	str	r3, [sp, #16]
    83e6:	9b01      	ldr	r3, [sp, #4]
    83e8:	3304      	adds	r3, #4
    83ea:	9301      	str	r3, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:158 (discriminator 1)
    83ec:	230a      	movs	r3, #10
    83ee:	446b      	add	r3, sp
    83f0:	881b      	ldrh	r3, [r3, #0]
    83f2:	9a05      	ldr	r2, [sp, #20]
    83f4:	429a      	cmp	r2, r3
    83f6:	d3cd      	bcc.n	8394 <flash_write_physical+0x20>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:175
    }

    return 0;  //成功执行
    83f8:	2300      	movs	r3, #0
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:176 (discriminator 1)
}
    83fa:	0018      	movs	r0, r3
    83fc:	b007      	add	sp, #28
    83fe:	bd00      	pop	{pc}
    8400:	40020000 	.word	0x40020000

00008404 <flash_read_physical>:
flash_read_physical():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:203
//       addr：目标地址，要求为4的倍数（例如：0x00000004）
//       N：读字节数目（0~1020,要求为4，8,12,......）
//功能概要：读取flash指定地址的内容
//======================================================================
void flash_read_physical(uint8_t *dest,uint32_t addr,uint16_t N)
{
    8404:	b500      	push	{lr}
    8406:	b087      	sub	sp, #28
    8408:	9003      	str	r0, [sp, #12]
    840a:	9102      	str	r1, [sp, #8]
    840c:	466b      	mov	r3, sp
    840e:	3306      	adds	r3, #6
    8410:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:205
	uint8_t *src;
	src=(uint8_t *)addr;
    8412:	9b02      	ldr	r3, [sp, #8]
    8414:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:206
	memcpy(dest,src,N);
    8416:	466b      	mov	r3, sp
    8418:	3306      	adds	r3, #6
    841a:	881a      	ldrh	r2, [r3, #0]
    841c:	9905      	ldr	r1, [sp, #20]
    841e:	9b03      	ldr	r3, [sp, #12]
    8420:	0018      	movs	r0, r3
    8422:	f001 fed7 	bl	a1d4 <memcpy>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:207
}
    8426:	46c0      	nop			; (mov r8, r8)
    8428:	b007      	add	sp, #28
    842a:	bd00      	pop	{pc}

0000842c <flash_isempty>:
flash_isempty():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:249
//函数返回：1=目标区域为空；0=目标区域非空。
//参数说明：所要探测的flash区域扇区号及字节数
//功能概要：flash判空操作
//========================================================================
uint8_t flash_isempty(uint16_t sect,uint16_t N)
{
    842c:	b084      	sub	sp, #16
    842e:	0002      	movs	r2, r0
    8430:	466b      	mov	r3, sp
    8432:	3306      	adds	r3, #6
    8434:	801a      	strh	r2, [r3, #0]
    8436:	ab01      	add	r3, sp, #4
    8438:	1c0a      	adds	r2, r1, #0
    843a:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:252
   uint16_t i,flag;
   uint8_t* buff;
   i = 0;
    843c:	230e      	movs	r3, #14
    843e:	446b      	add	r3, sp
    8440:	2200      	movs	r2, #0
    8442:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:253
   flag = 1;
    8444:	ab03      	add	r3, sp, #12
    8446:	2201      	movs	r2, #1
    8448:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:254
   for(i = 0; i<N; i++)   //遍历区域内字节
    844a:	230e      	movs	r3, #14
    844c:	446b      	add	r3, sp
    844e:	2200      	movs	r2, #0
    8450:	801a      	strh	r2, [r3, #0]
    8452:	e017      	b.n	8484 <flash_isempty+0x58>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:256
   {
	  buff=(uint8_t*)(sect*0x400);
    8454:	466b      	mov	r3, sp
    8456:	3306      	adds	r3, #6
    8458:	881b      	ldrh	r3, [r3, #0]
    845a:	029b      	lsls	r3, r3, #10
    845c:	9302      	str	r3, [sp, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:257
      if(buff[i]!=0xff)   //非空
    845e:	230e      	movs	r3, #14
    8460:	446b      	add	r3, sp
    8462:	881b      	ldrh	r3, [r3, #0]
    8464:	9a02      	ldr	r2, [sp, #8]
    8466:	18d3      	adds	r3, r2, r3
    8468:	781b      	ldrb	r3, [r3, #0]
    846a:	2bff      	cmp	r3, #255	; 0xff
    846c:	d003      	beq.n	8476 <flash_isempty+0x4a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:259
      {
      	  flag=0;
    846e:	ab03      	add	r3, sp, #12
    8470:	2200      	movs	r2, #0
    8472:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:260
          break;
    8474:	e00d      	b.n	8492 <flash_isempty+0x66>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:254 (discriminator 2)
   for(i = 0; i<N; i++)   //遍历区域内字节
    8476:	230e      	movs	r3, #14
    8478:	446b      	add	r3, sp
    847a:	881a      	ldrh	r2, [r3, #0]
    847c:	230e      	movs	r3, #14
    847e:	446b      	add	r3, sp
    8480:	3201      	adds	r2, #1
    8482:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:254 (discriminator 1)
    8484:	220e      	movs	r2, #14
    8486:	446a      	add	r2, sp
    8488:	ab01      	add	r3, sp, #4
    848a:	8812      	ldrh	r2, [r2, #0]
    848c:	881b      	ldrh	r3, [r3, #0]
    848e:	429a      	cmp	r2, r3
    8490:	d3e0      	bcc.n	8454 <flash_isempty+0x28>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:263
       }
   }
   return flag;
    8492:	ab03      	add	r3, sp, #12
    8494:	881b      	ldrh	r3, [r3, #0]
    8496:	b2db      	uxtb	r3, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:264
}
    8498:	0018      	movs	r0, r3
    849a:	b004      	add	sp, #16
    849c:	4770      	bx	lr
	...

000084a0 <flash_cmd_launch>:
flash_cmd_launch():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:339
//函数返回：0-成功 1-失败
//参数说明：无
//功能概要：启动Flash命令
//======================================================================
uint32_t flash_cmd_launch(void)
{
    84a0:	b082      	sub	sp, #8
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:340
	uint8_t irq_flag=0;
    84a2:	466b      	mov	r3, sp
    84a4:	3307      	adds	r3, #7
    84a6:	2200      	movs	r2, #0
    84a8:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:342
    // 清除访问错误标志位和非法访问标志位
    FTFA_FSTAT = ACCERR | FPVIOL;
    84aa:	4b15      	ldr	r3, [pc, #84]	; (8500 <flash_cmd_launch+0x60>)
    84ac:	2230      	movs	r2, #48	; 0x30
    84ae:	701a      	strb	r2, [r3, #0]
__get_PRIMASK():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cmFunc.h:484
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    84b0:	f3ef 8310 	mrs	r3, PRIMASK
    84b4:	9300      	str	r3, [sp, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cmFunc.h:485
  return(result);
    84b6:	9b00      	ldr	r3, [sp, #0]
flash_cmd_launch():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:343
    if(__get_PRIMASK() == 0U)
    84b8:	2b00      	cmp	r3, #0
    84ba:	d104      	bne.n	84c6 <flash_cmd_launch+0x26>
__disable_irq():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cmFunc.h:344
  __ASM volatile ("cpsid i" : : : "memory");
    84bc:	b672      	cpsid	i
flash_cmd_launch():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:346
    {
    	__disable_irq();  //关总中断
    	irq_flag = 1;
    84be:	466b      	mov	r3, sp
    84c0:	3307      	adds	r3, #7
    84c2:	2201      	movs	r2, #1
    84c4:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:349
    }
    // 启动命令
    FTFA_FSTAT = CCIF;
    84c6:	4b0e      	ldr	r3, [pc, #56]	; (8500 <flash_cmd_launch+0x60>)
    84c8:	2280      	movs	r2, #128	; 0x80
    84ca:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:351
    // 等待命令结束
    while(!(FTFA_FSTAT & CCIF));
    84cc:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:351 (discriminator 1)
    84ce:	4b0c      	ldr	r3, [pc, #48]	; (8500 <flash_cmd_launch+0x60>)
    84d0:	781b      	ldrb	r3, [r3, #0]
    84d2:	b2db      	uxtb	r3, r3
    84d4:	b25b      	sxtb	r3, r3
    84d6:	2b00      	cmp	r3, #0
    84d8:	daf9      	bge.n	84ce <flash_cmd_launch+0x2e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:352
    if(irq_flag == 1)
    84da:	466b      	mov	r3, sp
    84dc:	3307      	adds	r3, #7
    84de:	781b      	ldrb	r3, [r3, #0]
    84e0:	2b01      	cmp	r3, #1
    84e2:	d100      	bne.n	84e6 <flash_cmd_launch+0x46>
__enable_irq():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cmFunc.h:333
  __ASM volatile ("cpsie i" : : : "memory");
    84e4:	b662      	cpsie	i
flash_cmd_launch():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:357
    {
    	__enable_irq();  //开总中断
    }
    // 检查错误标志
    if(FTFA_FSTAT & (ACCERR | FPVIOL | MGSTAT0))
    84e6:	4b06      	ldr	r3, [pc, #24]	; (8500 <flash_cmd_launch+0x60>)
    84e8:	781b      	ldrb	r3, [r3, #0]
    84ea:	b2db      	uxtb	r3, r3
    84ec:	001a      	movs	r2, r3
    84ee:	2331      	movs	r3, #49	; 0x31
    84f0:	4013      	ands	r3, r2
    84f2:	d001      	beq.n	84f8 <flash_cmd_launch+0x58>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:358
        return 1 ; //执行命令出错
    84f4:	2301      	movs	r3, #1
    84f6:	e000      	b.n	84fa <flash_cmd_launch+0x5a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:359
    return 0; //执行命令成功
    84f8:	2300      	movs	r3, #0
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/flash.c:360
}
    84fa:	0018      	movs	r0, r3
    84fc:	b002      	add	sp, #8
    84fe:	4770      	bx	lr
    8500:	40020000 	.word	0x40020000

00008504 <NVIC_EnableIRQ>:
NVIC_EnableIRQ():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cm0plus.h:684
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
    8504:	b082      	sub	sp, #8
    8506:	0002      	movs	r2, r0
    8508:	466b      	mov	r3, sp
    850a:	3307      	adds	r3, #7
    850c:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cm0plus.h:685
  NVIC->ISER[0] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    850e:	466b      	mov	r3, sp
    8510:	3307      	adds	r3, #7
    8512:	781b      	ldrb	r3, [r3, #0]
    8514:	001a      	movs	r2, r3
    8516:	231f      	movs	r3, #31
    8518:	401a      	ands	r2, r3
    851a:	4b04      	ldr	r3, [pc, #16]	; (852c <NVIC_EnableIRQ+0x28>)
    851c:	2101      	movs	r1, #1
    851e:	4091      	lsls	r1, r2
    8520:	000a      	movs	r2, r1
    8522:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cm0plus.h:686
}
    8524:	46c0      	nop			; (mov r8, r8)
    8526:	b002      	add	sp, #8
    8528:	4770      	bx	lr
    852a:	46c0      	nop			; (mov r8, r8)
    852c:	e000e100 	.word	0xe000e100

00008530 <suart_init>:
suart_init():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:7

// 内部函数声明
void suart_get_port_pin(uint16_t port_pin, uint8_t* port, uint8_t* pin);

// 模拟串口初始化
void suart_init(uint16_t port_pin, uint8_t dir) {
    8530:	b500      	push	{lr}
    8532:	b085      	sub	sp, #20
    8534:	0002      	movs	r2, r0
    8536:	466b      	mov	r3, sp
    8538:	3306      	adds	r3, #6
    853a:	801a      	strh	r2, [r3, #0]
    853c:	466b      	mov	r3, sp
    853e:	3305      	adds	r3, #5
    8540:	1c0a      	adds	r2, r1, #0
    8542:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:9
    uint8_t port, pin;
    suart_get_port_pin(port_pin, &port, &pin);
    8544:	220e      	movs	r2, #14
    8546:	446a      	add	r2, sp
    8548:	210f      	movs	r1, #15
    854a:	4469      	add	r1, sp
    854c:	466b      	mov	r3, sp
    854e:	3306      	adds	r3, #6
    8550:	881b      	ldrh	r3, [r3, #0]
    8552:	0018      	movs	r0, r3
    8554:	f000 fc70 	bl	8e38 <suart_get_port_pin>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:12

    //设定相应端口的相应引脚功port能为GPIO（即令引脚控制寄存器的MUX=0b001）
    PORT_PCR(port, pin) &= ~PORT_PCR_MUX_MASK;//置D10-D8=000
    8558:	230f      	movs	r3, #15
    855a:	446b      	add	r3, sp
    855c:	781b      	ldrb	r3, [r3, #0]
    855e:	031b      	lsls	r3, r3, #12
    8560:	001a      	movs	r2, r3
    8562:	230e      	movs	r3, #14
    8564:	446b      	add	r3, sp
    8566:	781b      	ldrb	r3, [r3, #0]
    8568:	009b      	lsls	r3, r3, #2
    856a:	18d3      	adds	r3, r2, r3
    856c:	4a44      	ldr	r2, [pc, #272]	; (8680 <suart_init+0x150>)
    856e:	4694      	mov	ip, r2
    8570:	4463      	add	r3, ip
    8572:	681a      	ldr	r2, [r3, #0]
    8574:	230f      	movs	r3, #15
    8576:	446b      	add	r3, sp
    8578:	781b      	ldrb	r3, [r3, #0]
    857a:	031b      	lsls	r3, r3, #12
    857c:	0019      	movs	r1, r3
    857e:	230e      	movs	r3, #14
    8580:	446b      	add	r3, sp
    8582:	781b      	ldrb	r3, [r3, #0]
    8584:	009b      	lsls	r3, r3, #2
    8586:	18cb      	adds	r3, r1, r3
    8588:	493d      	ldr	r1, [pc, #244]	; (8680 <suart_init+0x150>)
    858a:	468c      	mov	ip, r1
    858c:	4463      	add	r3, ip
    858e:	493d      	ldr	r1, [pc, #244]	; (8684 <suart_init+0x154>)
    8590:	400a      	ands	r2, r1
    8592:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:13
    PORT_PCR(port, pin) |= PORT_PCR_MUX(1);//置D10-D8=001
    8594:	230f      	movs	r3, #15
    8596:	446b      	add	r3, sp
    8598:	781b      	ldrb	r3, [r3, #0]
    859a:	031b      	lsls	r3, r3, #12
    859c:	001a      	movs	r2, r3
    859e:	230e      	movs	r3, #14
    85a0:	446b      	add	r3, sp
    85a2:	781b      	ldrb	r3, [r3, #0]
    85a4:	009b      	lsls	r3, r3, #2
    85a6:	18d3      	adds	r3, r2, r3
    85a8:	4a35      	ldr	r2, [pc, #212]	; (8680 <suart_init+0x150>)
    85aa:	4694      	mov	ip, r2
    85ac:	4463      	add	r3, ip
    85ae:	681a      	ldr	r2, [r3, #0]
    85b0:	230f      	movs	r3, #15
    85b2:	446b      	add	r3, sp
    85b4:	781b      	ldrb	r3, [r3, #0]
    85b6:	031b      	lsls	r3, r3, #12
    85b8:	0019      	movs	r1, r3
    85ba:	230e      	movs	r3, #14
    85bc:	446b      	add	r3, sp
    85be:	781b      	ldrb	r3, [r3, #0]
    85c0:	009b      	lsls	r3, r3, #2
    85c2:	18cb      	adds	r3, r1, r3
    85c4:	492e      	ldr	r1, [pc, #184]	; (8680 <suart_init+0x150>)
    85c6:	468c      	mov	ip, r1
    85c8:	4463      	add	r3, ip
    85ca:	2180      	movs	r1, #128	; 0x80
    85cc:	0049      	lsls	r1, r1, #1
    85ce:	430a      	orrs	r2, r1
    85d0:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:16

    // 根据带入参数dir, 决定引脚为输出还是输入
    if (dir == 1) {
    85d2:	466b      	mov	r3, sp
    85d4:	3305      	adds	r3, #5
    85d6:	781b      	ldrb	r3, [r3, #0]
    85d8:	2b01      	cmp	r3, #1
    85da:	d132      	bne.n	8642 <suart_init+0x112>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:18
        // 数据方向寄存器对应位设为1，表示输出
        BSET(pin, SUART_PDDR(port));
    85dc:	230f      	movs	r3, #15
    85de:	446b      	add	r3, sp
    85e0:	781b      	ldrb	r3, [r3, #0]
    85e2:	019b      	lsls	r3, r3, #6
    85e4:	3314      	adds	r3, #20
    85e6:	4a28      	ldr	r2, [pc, #160]	; (8688 <suart_init+0x158>)
    85e8:	4694      	mov	ip, r2
    85ea:	4463      	add	r3, ip
    85ec:	681a      	ldr	r2, [r3, #0]
    85ee:	230e      	movs	r3, #14
    85f0:	446b      	add	r3, sp
    85f2:	781b      	ldrb	r3, [r3, #0]
    85f4:	0019      	movs	r1, r3
    85f6:	2301      	movs	r3, #1
    85f8:	408b      	lsls	r3, r1
    85fa:	0019      	movs	r1, r3
    85fc:	230f      	movs	r3, #15
    85fe:	446b      	add	r3, sp
    8600:	781b      	ldrb	r3, [r3, #0]
    8602:	019b      	lsls	r3, r3, #6
    8604:	3314      	adds	r3, #20
    8606:	4820      	ldr	r0, [pc, #128]	; (8688 <suart_init+0x158>)
    8608:	4684      	mov	ip, r0
    860a:	4463      	add	r3, ip
    860c:	430a      	orrs	r2, r1
    860e:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:21

        // 数据输出寄存器对应位设为1(没有数据时保持高电平)，表示高电平
        BSET(pin, SUART_PDOR(port));
    8610:	230f      	movs	r3, #15
    8612:	446b      	add	r3, sp
    8614:	781b      	ldrb	r3, [r3, #0]
    8616:	019b      	lsls	r3, r3, #6
    8618:	4a1b      	ldr	r2, [pc, #108]	; (8688 <suart_init+0x158>)
    861a:	4694      	mov	ip, r2
    861c:	4463      	add	r3, ip
    861e:	681a      	ldr	r2, [r3, #0]
    8620:	230e      	movs	r3, #14
    8622:	446b      	add	r3, sp
    8624:	781b      	ldrb	r3, [r3, #0]
    8626:	0019      	movs	r1, r3
    8628:	2301      	movs	r3, #1
    862a:	408b      	lsls	r3, r1
    862c:	0019      	movs	r1, r3
    862e:	230f      	movs	r3, #15
    8630:	446b      	add	r3, sp
    8632:	781b      	ldrb	r3, [r3, #0]
    8634:	019b      	lsls	r3, r3, #6
    8636:	4814      	ldr	r0, [pc, #80]	; (8688 <suart_init+0x158>)
    8638:	4684      	mov	ip, r0
    863a:	4463      	add	r3, ip
    863c:	430a      	orrs	r2, r1
    863e:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:27
    }
    else {
        // 数据方向寄存器对应位设为0，表示输入
        BCLR(pin, SUART_PDDR(port));
    }
}
    8640:	e01a      	b.n	8678 <suart_init+0x148>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:25
        BCLR(pin, SUART_PDDR(port));
    8642:	230f      	movs	r3, #15
    8644:	446b      	add	r3, sp
    8646:	781b      	ldrb	r3, [r3, #0]
    8648:	019b      	lsls	r3, r3, #6
    864a:	3314      	adds	r3, #20
    864c:	4a0e      	ldr	r2, [pc, #56]	; (8688 <suart_init+0x158>)
    864e:	4694      	mov	ip, r2
    8650:	4463      	add	r3, ip
    8652:	681a      	ldr	r2, [r3, #0]
    8654:	230e      	movs	r3, #14
    8656:	446b      	add	r3, sp
    8658:	781b      	ldrb	r3, [r3, #0]
    865a:	0019      	movs	r1, r3
    865c:	2301      	movs	r3, #1
    865e:	408b      	lsls	r3, r1
    8660:	43db      	mvns	r3, r3
    8662:	0019      	movs	r1, r3
    8664:	230f      	movs	r3, #15
    8666:	446b      	add	r3, sp
    8668:	781b      	ldrb	r3, [r3, #0]
    866a:	019b      	lsls	r3, r3, #6
    866c:	3314      	adds	r3, #20
    866e:	4806      	ldr	r0, [pc, #24]	; (8688 <suart_init+0x158>)
    8670:	4684      	mov	ip, r0
    8672:	4463      	add	r3, ip
    8674:	400a      	ands	r2, r1
    8676:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:27
}
    8678:	46c0      	nop			; (mov r8, r8)
    867a:	b005      	add	sp, #20
    867c:	bd00      	pop	{pc}
    867e:	46c0      	nop			; (mov r8, r8)
    8680:	40049000 	.word	0x40049000
    8684:	fffff8ff 	.word	0xfffff8ff
    8688:	400ff000 	.word	0x400ff000

0000868c <suart_set>:
suart_set():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:29

void suart_set(uint8_t port, uint8_t pin, uint8_t status) {
    868c:	b510      	push	{r4, lr}
    868e:	b082      	sub	sp, #8
    8690:	0004      	movs	r4, r0
    8692:	0008      	movs	r0, r1
    8694:	0011      	movs	r1, r2
    8696:	466b      	mov	r3, sp
    8698:	3307      	adds	r3, #7
    869a:	1c22      	adds	r2, r4, #0
    869c:	701a      	strb	r2, [r3, #0]
    869e:	466b      	mov	r3, sp
    86a0:	3306      	adds	r3, #6
    86a2:	1c02      	adds	r2, r0, #0
    86a4:	701a      	strb	r2, [r3, #0]
    86a6:	466b      	mov	r3, sp
    86a8:	3305      	adds	r3, #5
    86aa:	1c0a      	adds	r2, r1, #0
    86ac:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:30
    if (status == 1) {
    86ae:	466b      	mov	r3, sp
    86b0:	3305      	adds	r3, #5
    86b2:	781b      	ldrb	r3, [r3, #0]
    86b4:	2b01      	cmp	r3, #1
    86b6:	d118      	bne.n	86ea <suart_set+0x5e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:31
        BSET(pin, SUART_PDOR(port));
    86b8:	466b      	mov	r3, sp
    86ba:	3307      	adds	r3, #7
    86bc:	781b      	ldrb	r3, [r3, #0]
    86be:	019b      	lsls	r3, r3, #6
    86c0:	4a18      	ldr	r2, [pc, #96]	; (8724 <suart_set+0x98>)
    86c2:	4694      	mov	ip, r2
    86c4:	4463      	add	r3, ip
    86c6:	681a      	ldr	r2, [r3, #0]
    86c8:	466b      	mov	r3, sp
    86ca:	3306      	adds	r3, #6
    86cc:	781b      	ldrb	r3, [r3, #0]
    86ce:	2101      	movs	r1, #1
    86d0:	4099      	lsls	r1, r3
    86d2:	000b      	movs	r3, r1
    86d4:	0019      	movs	r1, r3
    86d6:	466b      	mov	r3, sp
    86d8:	3307      	adds	r3, #7
    86da:	781b      	ldrb	r3, [r3, #0]
    86dc:	019b      	lsls	r3, r3, #6
    86de:	4811      	ldr	r0, [pc, #68]	; (8724 <suart_set+0x98>)
    86e0:	4684      	mov	ip, r0
    86e2:	4463      	add	r3, ip
    86e4:	430a      	orrs	r2, r1
    86e6:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:36
    }
    else {
        BCLR(pin, SUART_PDOR(port));
    }
}
    86e8:	e018      	b.n	871c <suart_set+0x90>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:34
        BCLR(pin, SUART_PDOR(port));
    86ea:	466b      	mov	r3, sp
    86ec:	3307      	adds	r3, #7
    86ee:	781b      	ldrb	r3, [r3, #0]
    86f0:	019b      	lsls	r3, r3, #6
    86f2:	4a0c      	ldr	r2, [pc, #48]	; (8724 <suart_set+0x98>)
    86f4:	4694      	mov	ip, r2
    86f6:	4463      	add	r3, ip
    86f8:	681a      	ldr	r2, [r3, #0]
    86fa:	466b      	mov	r3, sp
    86fc:	3306      	adds	r3, #6
    86fe:	781b      	ldrb	r3, [r3, #0]
    8700:	2101      	movs	r1, #1
    8702:	4099      	lsls	r1, r3
    8704:	000b      	movs	r3, r1
    8706:	43db      	mvns	r3, r3
    8708:	0019      	movs	r1, r3
    870a:	466b      	mov	r3, sp
    870c:	3307      	adds	r3, #7
    870e:	781b      	ldrb	r3, [r3, #0]
    8710:	019b      	lsls	r3, r3, #6
    8712:	4804      	ldr	r0, [pc, #16]	; (8724 <suart_set+0x98>)
    8714:	4684      	mov	ip, r0
    8716:	4463      	add	r3, ip
    8718:	400a      	ands	r2, r1
    871a:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:36
}
    871c:	46c0      	nop			; (mov r8, r8)
    871e:	b002      	add	sp, #8
    8720:	bd10      	pop	{r4, pc}
    8722:	46c0      	nop			; (mov r8, r8)
    8724:	400ff000 	.word	0x400ff000

00008728 <suart_get>:
suart_get():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:39


uint8_t suart_get(uint8_t port, uint8_t pin) {
    8728:	b082      	sub	sp, #8
    872a:	0002      	movs	r2, r0
    872c:	466b      	mov	r3, sp
    872e:	3307      	adds	r3, #7
    8730:	701a      	strb	r2, [r3, #0]
    8732:	466b      	mov	r3, sp
    8734:	3306      	adds	r3, #6
    8736:	1c0a      	adds	r2, r1, #0
    8738:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:41
    // 一般都是获取相应引脚的输入寄存器的值
    return BGET(pin, SUART_PDIR(port));
    873a:	466b      	mov	r3, sp
    873c:	3307      	adds	r3, #7
    873e:	781b      	ldrb	r3, [r3, #0]
    8740:	019b      	lsls	r3, r3, #6
    8742:	3310      	adds	r3, #16
    8744:	4a07      	ldr	r2, [pc, #28]	; (8764 <suart_get+0x3c>)
    8746:	4694      	mov	ip, r2
    8748:	4463      	add	r3, ip
    874a:	681a      	ldr	r2, [r3, #0]
    874c:	466b      	mov	r3, sp
    874e:	3306      	adds	r3, #6
    8750:	781b      	ldrb	r3, [r3, #0]
    8752:	40da      	lsrs	r2, r3
    8754:	0013      	movs	r3, r2
    8756:	b2db      	uxtb	r3, r3
    8758:	2201      	movs	r2, #1
    875a:	4013      	ands	r3, r2
    875c:	b2db      	uxtb	r3, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:42
}
    875e:	0018      	movs	r0, r3
    8760:	b002      	add	sp, #8
    8762:	4770      	bx	lr
    8764:	400ff000 	.word	0x400ff000

00008768 <suart_send>:
suart_send():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:48

// 这个函数的实现本可以用循环来操作，可减少代码量
// 但是经过测试发现，循环每次判断操作也占用一定时间
// 可能会引起一定的误差（用while循环，大概1us），所以就直接对每一位操作
// 下面的suart_receive()函数同理
void suart_send(uint16_t port_pin, uint8_t* arr, uint32_t len) {
    8768:	b500      	push	{lr}
    876a:	b08f      	sub	sp, #60	; 0x3c
    876c:	9102      	str	r1, [sp, #8]
    876e:	9201      	str	r2, [sp, #4]
    8770:	230e      	movs	r3, #14
    8772:	446b      	add	r3, sp
    8774:	1c02      	adds	r2, r0, #0
    8776:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:50
    uint8_t port, pin;
    suart_get_port_pin(port_pin, &port, &pin);
    8778:	aa07      	add	r2, sp, #28
    877a:	211d      	movs	r1, #29
    877c:	4469      	add	r1, sp
    877e:	230e      	movs	r3, #14
    8780:	446b      	add	r3, sp
    8782:	881b      	ldrh	r3, [r3, #0]
    8784:	0018      	movs	r0, r3
    8786:	f000 fb57 	bl	8e38 <suart_get_port_pin>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:54

    uint8_t bit[8];

    for (uint32_t count = 0; count < len; count++) {
    878a:	2300      	movs	r3, #0
    878c:	930d      	str	r3, [sp, #52]	; 0x34
    878e:	e11e      	b.n	89ce <suart_send+0x266>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:56
        // 将字符转成二进制数组
        for (uint8_t i = 0; i < 8; i++) {
    8790:	2333      	movs	r3, #51	; 0x33
    8792:	446b      	add	r3, sp
    8794:	2200      	movs	r2, #0
    8796:	701a      	strb	r2, [r3, #0]
    8798:	e019      	b.n	87ce <suart_send+0x66>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:57 (discriminator 3)
            bit[i] = arr[count] >> i & 1;
    879a:	9a02      	ldr	r2, [sp, #8]
    879c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    879e:	18d3      	adds	r3, r2, r3
    87a0:	781b      	ldrb	r3, [r3, #0]
    87a2:	001a      	movs	r2, r3
    87a4:	2333      	movs	r3, #51	; 0x33
    87a6:	446b      	add	r3, sp
    87a8:	781b      	ldrb	r3, [r3, #0]
    87aa:	411a      	asrs	r2, r3
    87ac:	0013      	movs	r3, r2
    87ae:	b2da      	uxtb	r2, r3
    87b0:	2333      	movs	r3, #51	; 0x33
    87b2:	446b      	add	r3, sp
    87b4:	781b      	ldrb	r3, [r3, #0]
    87b6:	2101      	movs	r1, #1
    87b8:	400a      	ands	r2, r1
    87ba:	b2d1      	uxtb	r1, r2
    87bc:	aa05      	add	r2, sp, #20
    87be:	54d1      	strb	r1, [r2, r3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:56 (discriminator 3)
        for (uint8_t i = 0; i < 8; i++) {
    87c0:	2333      	movs	r3, #51	; 0x33
    87c2:	446b      	add	r3, sp
    87c4:	781a      	ldrb	r2, [r3, #0]
    87c6:	2333      	movs	r3, #51	; 0x33
    87c8:	446b      	add	r3, sp
    87ca:	3201      	adds	r2, #1
    87cc:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:56 (discriminator 1)
    87ce:	2333      	movs	r3, #51	; 0x33
    87d0:	446b      	add	r3, sp
    87d2:	781b      	ldrb	r3, [r3, #0]
    87d4:	2b07      	cmp	r3, #7
    87d6:	d9e0      	bls.n	879a <suart_send+0x32>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:61
        }

        // 起始位，将电平拉低一个周期表示开始发送数据
        suart_set(port, pin, 0);
    87d8:	231d      	movs	r3, #29
    87da:	446b      	add	r3, sp
    87dc:	7818      	ldrb	r0, [r3, #0]
    87de:	ab07      	add	r3, sp, #28
    87e0:	781b      	ldrb	r3, [r3, #0]
    87e2:	2200      	movs	r2, #0
    87e4:	0019      	movs	r1, r3
    87e6:	f7ff ff51 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:62
        for (uint16_t i = 0; i < delayCount; i++) {}
    87ea:	ab0c      	add	r3, sp, #48	; 0x30
    87ec:	2200      	movs	r2, #0
    87ee:	801a      	strh	r2, [r3, #0]
    87f0:	e004      	b.n	87fc <suart_send+0x94>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:62 (discriminator 3)
    87f2:	ab0c      	add	r3, sp, #48	; 0x30
    87f4:	881a      	ldrh	r2, [r3, #0]
    87f6:	ab0c      	add	r3, sp, #48	; 0x30
    87f8:	3201      	adds	r2, #1
    87fa:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:62 (discriminator 1)
    87fc:	ab0c      	add	r3, sp, #48	; 0x30
    87fe:	881b      	ldrh	r3, [r3, #0]
    8800:	2b15      	cmp	r3, #21
    8802:	d9f6      	bls.n	87f2 <suart_send+0x8a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:65

        // 第0位
        suart_set(port, pin, bit[0]);
    8804:	231d      	movs	r3, #29
    8806:	446b      	add	r3, sp
    8808:	7818      	ldrb	r0, [r3, #0]
    880a:	ab07      	add	r3, sp, #28
    880c:	7819      	ldrb	r1, [r3, #0]
    880e:	ab05      	add	r3, sp, #20
    8810:	781b      	ldrb	r3, [r3, #0]
    8812:	001a      	movs	r2, r3
    8814:	f7ff ff3a 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:66
        for (uint16_t i = 0; i < delayCount; i++) {}
    8818:	232e      	movs	r3, #46	; 0x2e
    881a:	446b      	add	r3, sp
    881c:	2200      	movs	r2, #0
    881e:	801a      	strh	r2, [r3, #0]
    8820:	e006      	b.n	8830 <suart_send+0xc8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:66 (discriminator 3)
    8822:	232e      	movs	r3, #46	; 0x2e
    8824:	446b      	add	r3, sp
    8826:	881a      	ldrh	r2, [r3, #0]
    8828:	232e      	movs	r3, #46	; 0x2e
    882a:	446b      	add	r3, sp
    882c:	3201      	adds	r2, #1
    882e:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:66 (discriminator 1)
    8830:	232e      	movs	r3, #46	; 0x2e
    8832:	446b      	add	r3, sp
    8834:	881b      	ldrh	r3, [r3, #0]
    8836:	2b15      	cmp	r3, #21
    8838:	d9f3      	bls.n	8822 <suart_send+0xba>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:69

        // 第1位
        suart_set(port, pin, bit[1]);
    883a:	231d      	movs	r3, #29
    883c:	446b      	add	r3, sp
    883e:	7818      	ldrb	r0, [r3, #0]
    8840:	ab07      	add	r3, sp, #28
    8842:	7819      	ldrb	r1, [r3, #0]
    8844:	ab05      	add	r3, sp, #20
    8846:	785b      	ldrb	r3, [r3, #1]
    8848:	001a      	movs	r2, r3
    884a:	f7ff ff1f 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:70
        for (uint16_t i = 0; i < delayCount; i++) {}
    884e:	ab0b      	add	r3, sp, #44	; 0x2c
    8850:	2200      	movs	r2, #0
    8852:	801a      	strh	r2, [r3, #0]
    8854:	e004      	b.n	8860 <suart_send+0xf8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:70 (discriminator 3)
    8856:	ab0b      	add	r3, sp, #44	; 0x2c
    8858:	881a      	ldrh	r2, [r3, #0]
    885a:	ab0b      	add	r3, sp, #44	; 0x2c
    885c:	3201      	adds	r2, #1
    885e:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:70 (discriminator 1)
    8860:	ab0b      	add	r3, sp, #44	; 0x2c
    8862:	881b      	ldrh	r3, [r3, #0]
    8864:	2b15      	cmp	r3, #21
    8866:	d9f6      	bls.n	8856 <suart_send+0xee>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:73

        // 第2位
        suart_set(port, pin, bit[2]);
    8868:	231d      	movs	r3, #29
    886a:	446b      	add	r3, sp
    886c:	7818      	ldrb	r0, [r3, #0]
    886e:	ab07      	add	r3, sp, #28
    8870:	7819      	ldrb	r1, [r3, #0]
    8872:	ab05      	add	r3, sp, #20
    8874:	789b      	ldrb	r3, [r3, #2]
    8876:	001a      	movs	r2, r3
    8878:	f7ff ff08 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:74
        for (uint16_t i = 0; i < delayCount; i++) {}
    887c:	232a      	movs	r3, #42	; 0x2a
    887e:	446b      	add	r3, sp
    8880:	2200      	movs	r2, #0
    8882:	801a      	strh	r2, [r3, #0]
    8884:	e006      	b.n	8894 <suart_send+0x12c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:74 (discriminator 3)
    8886:	232a      	movs	r3, #42	; 0x2a
    8888:	446b      	add	r3, sp
    888a:	881a      	ldrh	r2, [r3, #0]
    888c:	232a      	movs	r3, #42	; 0x2a
    888e:	446b      	add	r3, sp
    8890:	3201      	adds	r2, #1
    8892:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:74 (discriminator 1)
    8894:	232a      	movs	r3, #42	; 0x2a
    8896:	446b      	add	r3, sp
    8898:	881b      	ldrh	r3, [r3, #0]
    889a:	2b15      	cmp	r3, #21
    889c:	d9f3      	bls.n	8886 <suart_send+0x11e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:77

        // 第3位
        suart_set(port, pin, bit[3]);
    889e:	231d      	movs	r3, #29
    88a0:	446b      	add	r3, sp
    88a2:	7818      	ldrb	r0, [r3, #0]
    88a4:	ab07      	add	r3, sp, #28
    88a6:	7819      	ldrb	r1, [r3, #0]
    88a8:	ab05      	add	r3, sp, #20
    88aa:	78db      	ldrb	r3, [r3, #3]
    88ac:	001a      	movs	r2, r3
    88ae:	f7ff feed 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:78
        for (uint16_t i = 0; i < delayCount; i++) {}
    88b2:	ab0a      	add	r3, sp, #40	; 0x28
    88b4:	2200      	movs	r2, #0
    88b6:	801a      	strh	r2, [r3, #0]
    88b8:	e004      	b.n	88c4 <suart_send+0x15c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:78 (discriminator 3)
    88ba:	ab0a      	add	r3, sp, #40	; 0x28
    88bc:	881a      	ldrh	r2, [r3, #0]
    88be:	ab0a      	add	r3, sp, #40	; 0x28
    88c0:	3201      	adds	r2, #1
    88c2:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:78 (discriminator 1)
    88c4:	ab0a      	add	r3, sp, #40	; 0x28
    88c6:	881b      	ldrh	r3, [r3, #0]
    88c8:	2b15      	cmp	r3, #21
    88ca:	d9f6      	bls.n	88ba <suart_send+0x152>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:81

        // 第4位
        suart_set(port, pin, bit[4]);
    88cc:	231d      	movs	r3, #29
    88ce:	446b      	add	r3, sp
    88d0:	7818      	ldrb	r0, [r3, #0]
    88d2:	ab07      	add	r3, sp, #28
    88d4:	7819      	ldrb	r1, [r3, #0]
    88d6:	ab05      	add	r3, sp, #20
    88d8:	791b      	ldrb	r3, [r3, #4]
    88da:	001a      	movs	r2, r3
    88dc:	f7ff fed6 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:82
        for (uint16_t i = 0; i < delayCount; i++) {}
    88e0:	2326      	movs	r3, #38	; 0x26
    88e2:	446b      	add	r3, sp
    88e4:	2200      	movs	r2, #0
    88e6:	801a      	strh	r2, [r3, #0]
    88e8:	e006      	b.n	88f8 <suart_send+0x190>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:82 (discriminator 3)
    88ea:	2326      	movs	r3, #38	; 0x26
    88ec:	446b      	add	r3, sp
    88ee:	881a      	ldrh	r2, [r3, #0]
    88f0:	2326      	movs	r3, #38	; 0x26
    88f2:	446b      	add	r3, sp
    88f4:	3201      	adds	r2, #1
    88f6:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:82 (discriminator 1)
    88f8:	2326      	movs	r3, #38	; 0x26
    88fa:	446b      	add	r3, sp
    88fc:	881b      	ldrh	r3, [r3, #0]
    88fe:	2b15      	cmp	r3, #21
    8900:	d9f3      	bls.n	88ea <suart_send+0x182>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:85

        // 第5位
        suart_set(port, pin, bit[5]);
    8902:	231d      	movs	r3, #29
    8904:	446b      	add	r3, sp
    8906:	7818      	ldrb	r0, [r3, #0]
    8908:	ab07      	add	r3, sp, #28
    890a:	7819      	ldrb	r1, [r3, #0]
    890c:	ab05      	add	r3, sp, #20
    890e:	795b      	ldrb	r3, [r3, #5]
    8910:	001a      	movs	r2, r3
    8912:	f7ff febb 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:86
        for (uint16_t i = 0; i < delayCount; i++) {}
    8916:	ab09      	add	r3, sp, #36	; 0x24
    8918:	2200      	movs	r2, #0
    891a:	801a      	strh	r2, [r3, #0]
    891c:	e004      	b.n	8928 <suart_send+0x1c0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:86 (discriminator 3)
    891e:	ab09      	add	r3, sp, #36	; 0x24
    8920:	881a      	ldrh	r2, [r3, #0]
    8922:	ab09      	add	r3, sp, #36	; 0x24
    8924:	3201      	adds	r2, #1
    8926:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:86 (discriminator 1)
    8928:	ab09      	add	r3, sp, #36	; 0x24
    892a:	881b      	ldrh	r3, [r3, #0]
    892c:	2b15      	cmp	r3, #21
    892e:	d9f6      	bls.n	891e <suart_send+0x1b6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:89

        // 第6位
        suart_set(port, pin, bit[6]);
    8930:	231d      	movs	r3, #29
    8932:	446b      	add	r3, sp
    8934:	7818      	ldrb	r0, [r3, #0]
    8936:	ab07      	add	r3, sp, #28
    8938:	7819      	ldrb	r1, [r3, #0]
    893a:	ab05      	add	r3, sp, #20
    893c:	799b      	ldrb	r3, [r3, #6]
    893e:	001a      	movs	r2, r3
    8940:	f7ff fea4 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:90
        for (uint16_t i = 0; i < delayCount; i++) {}
    8944:	2322      	movs	r3, #34	; 0x22
    8946:	446b      	add	r3, sp
    8948:	2200      	movs	r2, #0
    894a:	801a      	strh	r2, [r3, #0]
    894c:	e006      	b.n	895c <suart_send+0x1f4>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:90 (discriminator 3)
    894e:	2322      	movs	r3, #34	; 0x22
    8950:	446b      	add	r3, sp
    8952:	881a      	ldrh	r2, [r3, #0]
    8954:	2322      	movs	r3, #34	; 0x22
    8956:	446b      	add	r3, sp
    8958:	3201      	adds	r2, #1
    895a:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:90 (discriminator 1)
    895c:	2322      	movs	r3, #34	; 0x22
    895e:	446b      	add	r3, sp
    8960:	881b      	ldrh	r3, [r3, #0]
    8962:	2b15      	cmp	r3, #21
    8964:	d9f3      	bls.n	894e <suart_send+0x1e6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:93

        // 第7位
        suart_set(port, pin, bit[7]);
    8966:	231d      	movs	r3, #29
    8968:	446b      	add	r3, sp
    896a:	7818      	ldrb	r0, [r3, #0]
    896c:	ab07      	add	r3, sp, #28
    896e:	7819      	ldrb	r1, [r3, #0]
    8970:	ab05      	add	r3, sp, #20
    8972:	79db      	ldrb	r3, [r3, #7]
    8974:	001a      	movs	r2, r3
    8976:	f7ff fe89 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:94
        for (uint16_t i = 0; i < delayCount; i++) {}
    897a:	ab08      	add	r3, sp, #32
    897c:	2200      	movs	r2, #0
    897e:	801a      	strh	r2, [r3, #0]
    8980:	e004      	b.n	898c <suart_send+0x224>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:94 (discriminator 3)
    8982:	ab08      	add	r3, sp, #32
    8984:	881a      	ldrh	r2, [r3, #0]
    8986:	ab08      	add	r3, sp, #32
    8988:	3201      	adds	r2, #1
    898a:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:94 (discriminator 1)
    898c:	ab08      	add	r3, sp, #32
    898e:	881b      	ldrh	r3, [r3, #0]
    8990:	2b15      	cmp	r3, #21
    8992:	d9f6      	bls.n	8982 <suart_send+0x21a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:97

        // 终止位, 将电平拉高
        suart_set(port, pin, 1);
    8994:	231d      	movs	r3, #29
    8996:	446b      	add	r3, sp
    8998:	7818      	ldrb	r0, [r3, #0]
    899a:	ab07      	add	r3, sp, #28
    899c:	781b      	ldrb	r3, [r3, #0]
    899e:	2201      	movs	r2, #1
    89a0:	0019      	movs	r1, r3
    89a2:	f7ff fe73 	bl	868c <suart_set>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:98
        for (uint16_t i = 0; i < delayCount; i++) {}
    89a6:	231e      	movs	r3, #30
    89a8:	446b      	add	r3, sp
    89aa:	2200      	movs	r2, #0
    89ac:	801a      	strh	r2, [r3, #0]
    89ae:	e006      	b.n	89be <suart_send+0x256>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:98 (discriminator 3)
    89b0:	231e      	movs	r3, #30
    89b2:	446b      	add	r3, sp
    89b4:	881a      	ldrh	r2, [r3, #0]
    89b6:	231e      	movs	r3, #30
    89b8:	446b      	add	r3, sp
    89ba:	3201      	adds	r2, #1
    89bc:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:98 (discriminator 1)
    89be:	231e      	movs	r3, #30
    89c0:	446b      	add	r3, sp
    89c2:	881b      	ldrh	r3, [r3, #0]
    89c4:	2b15      	cmp	r3, #21
    89c6:	d9f3      	bls.n	89b0 <suart_send+0x248>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:54 (discriminator 2)
    for (uint32_t count = 0; count < len; count++) {
    89c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    89ca:	3301      	adds	r3, #1
    89cc:	930d      	str	r3, [sp, #52]	; 0x34
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:54 (discriminator 1)
    89ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    89d0:	9b01      	ldr	r3, [sp, #4]
    89d2:	429a      	cmp	r2, r3
    89d4:	d200      	bcs.n	89d8 <suart_send+0x270>
    89d6:	e6db      	b.n	8790 <suart_send+0x28>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:100
    }
}
    89d8:	46c0      	nop			; (mov r8, r8)
    89da:	b00f      	add	sp, #60	; 0x3c
    89dc:	bd00      	pop	{pc}
	...

000089e0 <suart_receive>:
suart_receive():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:103


uint32_t suart_receive(uint16_t port_pin, uint8_t* arr) {
    89e0:	b500      	push	{lr}
    89e2:	b08d      	sub	sp, #52	; 0x34
    89e4:	0002      	movs	r2, r0
    89e6:	9100      	str	r1, [sp, #0]
    89e8:	466b      	mov	r3, sp
    89ea:	3306      	adds	r3, #6
    89ec:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:106

    uint8_t port, pin;
    uint16_t count = 4096;
    89ee:	232e      	movs	r3, #46	; 0x2e
    89f0:	446b      	add	r3, sp
    89f2:	2280      	movs	r2, #128	; 0x80
    89f4:	0152      	lsls	r2, r2, #5
    89f6:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:107
    uint32_t len = 0;
    89f8:	2300      	movs	r3, #0
    89fa:	930a      	str	r3, [sp, #40]	; 0x28
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:108
    arr[len] = 0;
    89fc:	9a00      	ldr	r2, [sp, #0]
    89fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8a00:	18d3      	adds	r3, r2, r3
    8a02:	2200      	movs	r2, #0
    8a04:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:111
    uint8_t bit[8];

    suart_get_port_pin(port_pin, &port, &pin);
    8a06:	2211      	movs	r2, #17
    8a08:	446a      	add	r2, sp
    8a0a:	2112      	movs	r1, #18
    8a0c:	4469      	add	r1, sp
    8a0e:	466b      	mov	r3, sp
    8a10:	3306      	adds	r3, #6
    8a12:	881b      	ldrh	r3, [r3, #0]
    8a14:	0018      	movs	r0, r3
    8a16:	f000 fa0f 	bl	8e38 <suart_get_port_pin>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:113

    while (count--) {
    8a1a:	e186      	b.n	8d2a <suart_receive+0x34a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:115
        // 起始位
        for (uint16_t i = 0; i < delayCount / 2; i++) {}
    8a1c:	2326      	movs	r3, #38	; 0x26
    8a1e:	446b      	add	r3, sp
    8a20:	2200      	movs	r2, #0
    8a22:	801a      	strh	r2, [r3, #0]
    8a24:	e006      	b.n	8a34 <suart_receive+0x54>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:115 (discriminator 3)
    8a26:	2326      	movs	r3, #38	; 0x26
    8a28:	446b      	add	r3, sp
    8a2a:	881a      	ldrh	r2, [r3, #0]
    8a2c:	2326      	movs	r3, #38	; 0x26
    8a2e:	446b      	add	r3, sp
    8a30:	3201      	adds	r2, #1
    8a32:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:115 (discriminator 1)
    8a34:	2326      	movs	r3, #38	; 0x26
    8a36:	446b      	add	r3, sp
    8a38:	881b      	ldrh	r3, [r3, #0]
    8a3a:	2b0a      	cmp	r3, #10
    8a3c:	d9f3      	bls.n	8a26 <suart_receive+0x46>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:116
        suart_get(port, pin);
    8a3e:	2312      	movs	r3, #18
    8a40:	446b      	add	r3, sp
    8a42:	781a      	ldrb	r2, [r3, #0]
    8a44:	2311      	movs	r3, #17
    8a46:	446b      	add	r3, sp
    8a48:	781b      	ldrb	r3, [r3, #0]
    8a4a:	0019      	movs	r1, r3
    8a4c:	0010      	movs	r0, r2
    8a4e:	f7ff fe6b 	bl	8728 <suart_get>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:119

        // 第0位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8a52:	ab09      	add	r3, sp, #36	; 0x24
    8a54:	2200      	movs	r2, #0
    8a56:	801a      	strh	r2, [r3, #0]
    8a58:	e004      	b.n	8a64 <suart_receive+0x84>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:119 (discriminator 3)
    8a5a:	ab09      	add	r3, sp, #36	; 0x24
    8a5c:	881a      	ldrh	r2, [r3, #0]
    8a5e:	ab09      	add	r3, sp, #36	; 0x24
    8a60:	3201      	adds	r2, #1
    8a62:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:119 (discriminator 1)
    8a64:	ab09      	add	r3, sp, #36	; 0x24
    8a66:	881b      	ldrh	r3, [r3, #0]
    8a68:	2b15      	cmp	r3, #21
    8a6a:	d9f6      	bls.n	8a5a <suart_receive+0x7a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:120
        bit[0] = suart_get(port, pin);
    8a6c:	2312      	movs	r3, #18
    8a6e:	446b      	add	r3, sp
    8a70:	781a      	ldrb	r2, [r3, #0]
    8a72:	2311      	movs	r3, #17
    8a74:	446b      	add	r3, sp
    8a76:	781b      	ldrb	r3, [r3, #0]
    8a78:	0019      	movs	r1, r3
    8a7a:	0010      	movs	r0, r2
    8a7c:	f7ff fe54 	bl	8728 <suart_get>
    8a80:	0003      	movs	r3, r0
    8a82:	001a      	movs	r2, r3
    8a84:	ab02      	add	r3, sp, #8
    8a86:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:123

        // 第1位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8a88:	2322      	movs	r3, #34	; 0x22
    8a8a:	446b      	add	r3, sp
    8a8c:	2200      	movs	r2, #0
    8a8e:	801a      	strh	r2, [r3, #0]
    8a90:	e006      	b.n	8aa0 <suart_receive+0xc0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:123 (discriminator 3)
    8a92:	2322      	movs	r3, #34	; 0x22
    8a94:	446b      	add	r3, sp
    8a96:	881a      	ldrh	r2, [r3, #0]
    8a98:	2322      	movs	r3, #34	; 0x22
    8a9a:	446b      	add	r3, sp
    8a9c:	3201      	adds	r2, #1
    8a9e:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:123 (discriminator 1)
    8aa0:	2322      	movs	r3, #34	; 0x22
    8aa2:	446b      	add	r3, sp
    8aa4:	881b      	ldrh	r3, [r3, #0]
    8aa6:	2b15      	cmp	r3, #21
    8aa8:	d9f3      	bls.n	8a92 <suart_receive+0xb2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:124
        bit[1] = suart_get(port, pin);
    8aaa:	2312      	movs	r3, #18
    8aac:	446b      	add	r3, sp
    8aae:	781a      	ldrb	r2, [r3, #0]
    8ab0:	2311      	movs	r3, #17
    8ab2:	446b      	add	r3, sp
    8ab4:	781b      	ldrb	r3, [r3, #0]
    8ab6:	0019      	movs	r1, r3
    8ab8:	0010      	movs	r0, r2
    8aba:	f7ff fe35 	bl	8728 <suart_get>
    8abe:	0003      	movs	r3, r0
    8ac0:	001a      	movs	r2, r3
    8ac2:	ab02      	add	r3, sp, #8
    8ac4:	705a      	strb	r2, [r3, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:127

        // 第2位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8ac6:	ab08      	add	r3, sp, #32
    8ac8:	2200      	movs	r2, #0
    8aca:	801a      	strh	r2, [r3, #0]
    8acc:	e004      	b.n	8ad8 <suart_receive+0xf8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:127 (discriminator 3)
    8ace:	ab08      	add	r3, sp, #32
    8ad0:	881a      	ldrh	r2, [r3, #0]
    8ad2:	ab08      	add	r3, sp, #32
    8ad4:	3201      	adds	r2, #1
    8ad6:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:127 (discriminator 1)
    8ad8:	ab08      	add	r3, sp, #32
    8ada:	881b      	ldrh	r3, [r3, #0]
    8adc:	2b15      	cmp	r3, #21
    8ade:	d9f6      	bls.n	8ace <suart_receive+0xee>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:128
        bit[2] = suart_get(port, pin);
    8ae0:	2312      	movs	r3, #18
    8ae2:	446b      	add	r3, sp
    8ae4:	781a      	ldrb	r2, [r3, #0]
    8ae6:	2311      	movs	r3, #17
    8ae8:	446b      	add	r3, sp
    8aea:	781b      	ldrb	r3, [r3, #0]
    8aec:	0019      	movs	r1, r3
    8aee:	0010      	movs	r0, r2
    8af0:	f7ff fe1a 	bl	8728 <suart_get>
    8af4:	0003      	movs	r3, r0
    8af6:	001a      	movs	r2, r3
    8af8:	ab02      	add	r3, sp, #8
    8afa:	709a      	strb	r2, [r3, #2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:131

        // 第3位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8afc:	231e      	movs	r3, #30
    8afe:	446b      	add	r3, sp
    8b00:	2200      	movs	r2, #0
    8b02:	801a      	strh	r2, [r3, #0]
    8b04:	e006      	b.n	8b14 <suart_receive+0x134>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:131 (discriminator 3)
    8b06:	231e      	movs	r3, #30
    8b08:	446b      	add	r3, sp
    8b0a:	881a      	ldrh	r2, [r3, #0]
    8b0c:	231e      	movs	r3, #30
    8b0e:	446b      	add	r3, sp
    8b10:	3201      	adds	r2, #1
    8b12:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:131 (discriminator 1)
    8b14:	231e      	movs	r3, #30
    8b16:	446b      	add	r3, sp
    8b18:	881b      	ldrh	r3, [r3, #0]
    8b1a:	2b15      	cmp	r3, #21
    8b1c:	d9f3      	bls.n	8b06 <suart_receive+0x126>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:132
        bit[3] = suart_get(port, pin);
    8b1e:	2312      	movs	r3, #18
    8b20:	446b      	add	r3, sp
    8b22:	781a      	ldrb	r2, [r3, #0]
    8b24:	2311      	movs	r3, #17
    8b26:	446b      	add	r3, sp
    8b28:	781b      	ldrb	r3, [r3, #0]
    8b2a:	0019      	movs	r1, r3
    8b2c:	0010      	movs	r0, r2
    8b2e:	f7ff fdfb 	bl	8728 <suart_get>
    8b32:	0003      	movs	r3, r0
    8b34:	001a      	movs	r2, r3
    8b36:	ab02      	add	r3, sp, #8
    8b38:	70da      	strb	r2, [r3, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:135

        // 第4位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8b3a:	ab07      	add	r3, sp, #28
    8b3c:	2200      	movs	r2, #0
    8b3e:	801a      	strh	r2, [r3, #0]
    8b40:	e004      	b.n	8b4c <suart_receive+0x16c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:135 (discriminator 3)
    8b42:	ab07      	add	r3, sp, #28
    8b44:	881a      	ldrh	r2, [r3, #0]
    8b46:	ab07      	add	r3, sp, #28
    8b48:	3201      	adds	r2, #1
    8b4a:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:135 (discriminator 1)
    8b4c:	ab07      	add	r3, sp, #28
    8b4e:	881b      	ldrh	r3, [r3, #0]
    8b50:	2b15      	cmp	r3, #21
    8b52:	d9f6      	bls.n	8b42 <suart_receive+0x162>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:136
        bit[4] = suart_get(port, pin);
    8b54:	2312      	movs	r3, #18
    8b56:	446b      	add	r3, sp
    8b58:	781a      	ldrb	r2, [r3, #0]
    8b5a:	2311      	movs	r3, #17
    8b5c:	446b      	add	r3, sp
    8b5e:	781b      	ldrb	r3, [r3, #0]
    8b60:	0019      	movs	r1, r3
    8b62:	0010      	movs	r0, r2
    8b64:	f7ff fde0 	bl	8728 <suart_get>
    8b68:	0003      	movs	r3, r0
    8b6a:	001a      	movs	r2, r3
    8b6c:	ab02      	add	r3, sp, #8
    8b6e:	711a      	strb	r2, [r3, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:139

        // 第5位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8b70:	231a      	movs	r3, #26
    8b72:	446b      	add	r3, sp
    8b74:	2200      	movs	r2, #0
    8b76:	801a      	strh	r2, [r3, #0]
    8b78:	e006      	b.n	8b88 <suart_receive+0x1a8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:139 (discriminator 3)
    8b7a:	231a      	movs	r3, #26
    8b7c:	446b      	add	r3, sp
    8b7e:	881a      	ldrh	r2, [r3, #0]
    8b80:	231a      	movs	r3, #26
    8b82:	446b      	add	r3, sp
    8b84:	3201      	adds	r2, #1
    8b86:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:139 (discriminator 1)
    8b88:	231a      	movs	r3, #26
    8b8a:	446b      	add	r3, sp
    8b8c:	881b      	ldrh	r3, [r3, #0]
    8b8e:	2b15      	cmp	r3, #21
    8b90:	d9f3      	bls.n	8b7a <suart_receive+0x19a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:140
        bit[5] = suart_get(port, pin);
    8b92:	2312      	movs	r3, #18
    8b94:	446b      	add	r3, sp
    8b96:	781a      	ldrb	r2, [r3, #0]
    8b98:	2311      	movs	r3, #17
    8b9a:	446b      	add	r3, sp
    8b9c:	781b      	ldrb	r3, [r3, #0]
    8b9e:	0019      	movs	r1, r3
    8ba0:	0010      	movs	r0, r2
    8ba2:	f7ff fdc1 	bl	8728 <suart_get>
    8ba6:	0003      	movs	r3, r0
    8ba8:	001a      	movs	r2, r3
    8baa:	ab02      	add	r3, sp, #8
    8bac:	715a      	strb	r2, [r3, #5]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:143

        // 第6位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8bae:	ab06      	add	r3, sp, #24
    8bb0:	2200      	movs	r2, #0
    8bb2:	801a      	strh	r2, [r3, #0]
    8bb4:	e004      	b.n	8bc0 <suart_receive+0x1e0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:143 (discriminator 3)
    8bb6:	ab06      	add	r3, sp, #24
    8bb8:	881a      	ldrh	r2, [r3, #0]
    8bba:	ab06      	add	r3, sp, #24
    8bbc:	3201      	adds	r2, #1
    8bbe:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:143 (discriminator 1)
    8bc0:	ab06      	add	r3, sp, #24
    8bc2:	881b      	ldrh	r3, [r3, #0]
    8bc4:	2b15      	cmp	r3, #21
    8bc6:	d9f6      	bls.n	8bb6 <suart_receive+0x1d6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:144
        bit[6] = suart_get(port, pin);
    8bc8:	2312      	movs	r3, #18
    8bca:	446b      	add	r3, sp
    8bcc:	781a      	ldrb	r2, [r3, #0]
    8bce:	2311      	movs	r3, #17
    8bd0:	446b      	add	r3, sp
    8bd2:	781b      	ldrb	r3, [r3, #0]
    8bd4:	0019      	movs	r1, r3
    8bd6:	0010      	movs	r0, r2
    8bd8:	f7ff fda6 	bl	8728 <suart_get>
    8bdc:	0003      	movs	r3, r0
    8bde:	001a      	movs	r2, r3
    8be0:	ab02      	add	r3, sp, #8
    8be2:	719a      	strb	r2, [r3, #6]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:147

        // 第7位
        for (uint16_t i = 0; i < delayCount; i++) {}
    8be4:	2316      	movs	r3, #22
    8be6:	446b      	add	r3, sp
    8be8:	2200      	movs	r2, #0
    8bea:	801a      	strh	r2, [r3, #0]
    8bec:	e006      	b.n	8bfc <suart_receive+0x21c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:147 (discriminator 3)
    8bee:	2316      	movs	r3, #22
    8bf0:	446b      	add	r3, sp
    8bf2:	881a      	ldrh	r2, [r3, #0]
    8bf4:	2316      	movs	r3, #22
    8bf6:	446b      	add	r3, sp
    8bf8:	3201      	adds	r2, #1
    8bfa:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:147 (discriminator 1)
    8bfc:	2316      	movs	r3, #22
    8bfe:	446b      	add	r3, sp
    8c00:	881b      	ldrh	r3, [r3, #0]
    8c02:	2b15      	cmp	r3, #21
    8c04:	d9f3      	bls.n	8bee <suart_receive+0x20e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:148
        bit[7] = suart_get(port, pin);
    8c06:	2312      	movs	r3, #18
    8c08:	446b      	add	r3, sp
    8c0a:	781a      	ldrb	r2, [r3, #0]
    8c0c:	2311      	movs	r3, #17
    8c0e:	446b      	add	r3, sp
    8c10:	781b      	ldrb	r3, [r3, #0]
    8c12:	0019      	movs	r1, r3
    8c14:	0010      	movs	r0, r2
    8c16:	f7ff fd87 	bl	8728 <suart_get>
    8c1a:	0003      	movs	r3, r0
    8c1c:	001a      	movs	r2, r3
    8c1e:	ab02      	add	r3, sp, #8
    8c20:	71da      	strb	r2, [r3, #7]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:152

        // 终止位, 这里减少10次，是因为下面的语句执行也要占用一定时间
        // 所以利用终止位的时间来进行这些运算
        for (uint16_t i = 0; i < delayCount - 10; i++) {}
    8c22:	ab05      	add	r3, sp, #20
    8c24:	2200      	movs	r2, #0
    8c26:	801a      	strh	r2, [r3, #0]
    8c28:	e004      	b.n	8c34 <suart_receive+0x254>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:152 (discriminator 3)
    8c2a:	ab05      	add	r3, sp, #20
    8c2c:	881a      	ldrh	r2, [r3, #0]
    8c2e:	ab05      	add	r3, sp, #20
    8c30:	3201      	adds	r2, #1
    8c32:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:152 (discriminator 1)
    8c34:	ab05      	add	r3, sp, #20
    8c36:	881b      	ldrh	r3, [r3, #0]
    8c38:	2b0b      	cmp	r3, #11
    8c3a:	d9f6      	bls.n	8c2a <suart_receive+0x24a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:154

        for (uint8_t i = 0; i < 8; i++) {
    8c3c:	2313      	movs	r3, #19
    8c3e:	446b      	add	r3, sp
    8c40:	2200      	movs	r2, #0
    8c42:	701a      	strb	r2, [r3, #0]
    8c44:	e01c      	b.n	8c80 <suart_receive+0x2a0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:155 (discriminator 3)
            arr[len] += (bit[i] << i);
    8c46:	9a00      	ldr	r2, [sp, #0]
    8c48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8c4a:	18d3      	adds	r3, r2, r3
    8c4c:	7819      	ldrb	r1, [r3, #0]
    8c4e:	2313      	movs	r3, #19
    8c50:	446b      	add	r3, sp
    8c52:	781b      	ldrb	r3, [r3, #0]
    8c54:	aa02      	add	r2, sp, #8
    8c56:	5cd3      	ldrb	r3, [r2, r3]
    8c58:	001a      	movs	r2, r3
    8c5a:	2313      	movs	r3, #19
    8c5c:	446b      	add	r3, sp
    8c5e:	781b      	ldrb	r3, [r3, #0]
    8c60:	409a      	lsls	r2, r3
    8c62:	0013      	movs	r3, r2
    8c64:	b2da      	uxtb	r2, r3
    8c66:	9800      	ldr	r0, [sp, #0]
    8c68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8c6a:	18c3      	adds	r3, r0, r3
    8c6c:	188a      	adds	r2, r1, r2
    8c6e:	b2d2      	uxtb	r2, r2
    8c70:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:154 (discriminator 3)
        for (uint8_t i = 0; i < 8; i++) {
    8c72:	2313      	movs	r3, #19
    8c74:	446b      	add	r3, sp
    8c76:	781a      	ldrb	r2, [r3, #0]
    8c78:	2313      	movs	r3, #19
    8c7a:	446b      	add	r3, sp
    8c7c:	3201      	adds	r2, #1
    8c7e:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:154 (discriminator 1)
    8c80:	2313      	movs	r3, #19
    8c82:	446b      	add	r3, sp
    8c84:	781b      	ldrb	r3, [r3, #0]
    8c86:	2b07      	cmp	r3, #7
    8c88:	d9dd      	bls.n	8c46 <suart_receive+0x266>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:157
        }
        if (!(arr[len] ^ 255)) {
    8c8a:	9a00      	ldr	r2, [sp, #0]
    8c8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8c8e:	18d3      	adds	r3, r2, r3
    8c90:	781b      	ldrb	r3, [r3, #0]
    8c92:	2bff      	cmp	r3, #255	; 0xff
    8c94:	d125      	bne.n	8ce2 <suart_receive+0x302>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:158
            arr[len] = '\0';
    8c96:	9a00      	ldr	r2, [sp, #0]
    8c98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8c9a:	18d3      	adds	r3, r2, r3
    8c9c:	2200      	movs	r2, #0
    8c9e:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:159
            PORT_PCR(port, pin) |= PORT_PCR_ISF(1); // 清除中断状态
    8ca0:	2312      	movs	r3, #18
    8ca2:	446b      	add	r3, sp
    8ca4:	781b      	ldrb	r3, [r3, #0]
    8ca6:	031b      	lsls	r3, r3, #12
    8ca8:	001a      	movs	r2, r3
    8caa:	2311      	movs	r3, #17
    8cac:	446b      	add	r3, sp
    8cae:	781b      	ldrb	r3, [r3, #0]
    8cb0:	009b      	lsls	r3, r3, #2
    8cb2:	18d3      	adds	r3, r2, r3
    8cb4:	4a23      	ldr	r2, [pc, #140]	; (8d44 <suart_receive+0x364>)
    8cb6:	4694      	mov	ip, r2
    8cb8:	4463      	add	r3, ip
    8cba:	681a      	ldr	r2, [r3, #0]
    8cbc:	2312      	movs	r3, #18
    8cbe:	446b      	add	r3, sp
    8cc0:	781b      	ldrb	r3, [r3, #0]
    8cc2:	031b      	lsls	r3, r3, #12
    8cc4:	0019      	movs	r1, r3
    8cc6:	2311      	movs	r3, #17
    8cc8:	446b      	add	r3, sp
    8cca:	781b      	ldrb	r3, [r3, #0]
    8ccc:	009b      	lsls	r3, r3, #2
    8cce:	18cb      	adds	r3, r1, r3
    8cd0:	491c      	ldr	r1, [pc, #112]	; (8d44 <suart_receive+0x364>)
    8cd2:	468c      	mov	ip, r1
    8cd4:	4463      	add	r3, ip
    8cd6:	2180      	movs	r1, #128	; 0x80
    8cd8:	0449      	lsls	r1, r1, #17
    8cda:	430a      	orrs	r2, r1
    8cdc:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:160
            return len;
    8cde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8ce0:	e02d      	b.n	8d3e <suart_receive+0x35e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:162
        }
        count = 4096;
    8ce2:	232e      	movs	r3, #46	; 0x2e
    8ce4:	446b      	add	r3, sp
    8ce6:	2280      	movs	r2, #128	; 0x80
    8ce8:	0152      	lsls	r2, r2, #5
    8cea:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:163
        arr[++len] = 0;
    8cec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8cee:	3301      	adds	r3, #1
    8cf0:	930a      	str	r3, [sp, #40]	; 0x28
    8cf2:	9a00      	ldr	r2, [sp, #0]
    8cf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8cf6:	18d3      	adds	r3, r2, r3
    8cf8:	2200      	movs	r2, #0
    8cfa:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:166

        // 消耗掉终止位剩余的时间，方便进行下一个字符的接收
        while (count--) {
    8cfc:	e00c      	b.n	8d18 <suart_receive+0x338>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:167
            if (!suart_get(port, pin)) {
    8cfe:	2312      	movs	r3, #18
    8d00:	446b      	add	r3, sp
    8d02:	781a      	ldrb	r2, [r3, #0]
    8d04:	2311      	movs	r3, #17
    8d06:	446b      	add	r3, sp
    8d08:	781b      	ldrb	r3, [r3, #0]
    8d0a:	0019      	movs	r1, r3
    8d0c:	0010      	movs	r0, r2
    8d0e:	f7ff fd0b 	bl	8728 <suart_get>
    8d12:	1e03      	subs	r3, r0, #0
    8d14:	d100      	bne.n	8d18 <suart_receive+0x338>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:168
                break;
    8d16:	e008      	b.n	8d2a <suart_receive+0x34a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:166
        while (count--) {
    8d18:	232e      	movs	r3, #46	; 0x2e
    8d1a:	446b      	add	r3, sp
    8d1c:	881b      	ldrh	r3, [r3, #0]
    8d1e:	222e      	movs	r2, #46	; 0x2e
    8d20:	446a      	add	r2, sp
    8d22:	1e59      	subs	r1, r3, #1
    8d24:	8011      	strh	r1, [r2, #0]
    8d26:	2b00      	cmp	r3, #0
    8d28:	d1e9      	bne.n	8cfe <suart_receive+0x31e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:113
    while (count--) {
    8d2a:	232e      	movs	r3, #46	; 0x2e
    8d2c:	446b      	add	r3, sp
    8d2e:	881b      	ldrh	r3, [r3, #0]
    8d30:	222e      	movs	r2, #46	; 0x2e
    8d32:	446a      	add	r2, sp
    8d34:	1e59      	subs	r1, r3, #1
    8d36:	8011      	strh	r1, [r2, #0]
    8d38:	2b00      	cmp	r3, #0
    8d3a:	d000      	beq.n	8d3e <suart_receive+0x35e>
    8d3c:	e66e      	b.n	8a1c <suart_receive+0x3c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:172
            }
        }
    }
}
    8d3e:	0018      	movs	r0, r3
    8d40:	b00d      	add	sp, #52	; 0x34
    8d42:	bd00      	pop	{pc}
    8d44:	40049000 	.word	0x40049000

00008d48 <suart_enable_receive_interupt>:
suart_enable_receive_interupt():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:175

// 打开串口接收中断, 下降沿触发
void suart_enable_receive_interupt(uint16_t port_pin) {
    8d48:	b500      	push	{lr}
    8d4a:	b085      	sub	sp, #20
    8d4c:	0002      	movs	r2, r0
    8d4e:	466b      	mov	r3, sp
    8d50:	3306      	adds	r3, #6
    8d52:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:177
    uint8_t port, pin;
    suart_get_port_pin(port_pin, &port, &pin);
    8d54:	220e      	movs	r2, #14
    8d56:	446a      	add	r2, sp
    8d58:	210f      	movs	r1, #15
    8d5a:	4469      	add	r1, sp
    8d5c:	466b      	mov	r3, sp
    8d5e:	3306      	adds	r3, #6
    8d60:	881b      	ldrh	r3, [r3, #0]
    8d62:	0018      	movs	r0, r3
    8d64:	f000 f868 	bl	8e38 <suart_get_port_pin>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:180

    // 清引脚控制寄存器中断配置字段，将D19-D16置零
    PORT_PCR(port, pin) &= ~PORT_PCR_IRQC_MASK;
    8d68:	230f      	movs	r3, #15
    8d6a:	446b      	add	r3, sp
    8d6c:	781b      	ldrb	r3, [r3, #0]
    8d6e:	031b      	lsls	r3, r3, #12
    8d70:	001a      	movs	r2, r3
    8d72:	230e      	movs	r3, #14
    8d74:	446b      	add	r3, sp
    8d76:	781b      	ldrb	r3, [r3, #0]
    8d78:	009b      	lsls	r3, r3, #2
    8d7a:	18d3      	adds	r3, r2, r3
    8d7c:	4a2a      	ldr	r2, [pc, #168]	; (8e28 <suart_enable_receive_interupt+0xe0>)
    8d7e:	4694      	mov	ip, r2
    8d80:	4463      	add	r3, ip
    8d82:	681a      	ldr	r2, [r3, #0]
    8d84:	230f      	movs	r3, #15
    8d86:	446b      	add	r3, sp
    8d88:	781b      	ldrb	r3, [r3, #0]
    8d8a:	031b      	lsls	r3, r3, #12
    8d8c:	0019      	movs	r1, r3
    8d8e:	230e      	movs	r3, #14
    8d90:	446b      	add	r3, sp
    8d92:	781b      	ldrb	r3, [r3, #0]
    8d94:	009b      	lsls	r3, r3, #2
    8d96:	18cb      	adds	r3, r1, r3
    8d98:	4923      	ldr	r1, [pc, #140]	; (8e28 <suart_enable_receive_interupt+0xe0>)
    8d9a:	468c      	mov	ip, r1
    8d9c:	4463      	add	r3, ip
    8d9e:	4923      	ldr	r1, [pc, #140]	; (8e2c <suart_enable_receive_interupt+0xe4>)
    8da0:	400a      	ands	r2, r1
    8da2:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:182
    // 将D19-D16置成1010， 表示下降沿触发
    PORT_PCR(port, pin) |= PORT_PCR_IRQC(10);
    8da4:	230f      	movs	r3, #15
    8da6:	446b      	add	r3, sp
    8da8:	781b      	ldrb	r3, [r3, #0]
    8daa:	031b      	lsls	r3, r3, #12
    8dac:	001a      	movs	r2, r3
    8dae:	230e      	movs	r3, #14
    8db0:	446b      	add	r3, sp
    8db2:	781b      	ldrb	r3, [r3, #0]
    8db4:	009b      	lsls	r3, r3, #2
    8db6:	18d3      	adds	r3, r2, r3
    8db8:	4a1b      	ldr	r2, [pc, #108]	; (8e28 <suart_enable_receive_interupt+0xe0>)
    8dba:	4694      	mov	ip, r2
    8dbc:	4463      	add	r3, ip
    8dbe:	681a      	ldr	r2, [r3, #0]
    8dc0:	230f      	movs	r3, #15
    8dc2:	446b      	add	r3, sp
    8dc4:	781b      	ldrb	r3, [r3, #0]
    8dc6:	031b      	lsls	r3, r3, #12
    8dc8:	0019      	movs	r1, r3
    8dca:	230e      	movs	r3, #14
    8dcc:	446b      	add	r3, sp
    8dce:	781b      	ldrb	r3, [r3, #0]
    8dd0:	009b      	lsls	r3, r3, #2
    8dd2:	18cb      	adds	r3, r1, r3
    8dd4:	4914      	ldr	r1, [pc, #80]	; (8e28 <suart_enable_receive_interupt+0xe0>)
    8dd6:	468c      	mov	ip, r1
    8dd8:	4463      	add	r3, ip
    8dda:	21a0      	movs	r1, #160	; 0xa0
    8ddc:	0309      	lsls	r1, r1, #12
    8dde:	430a      	orrs	r2, r1
    8de0:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:184

    if (port == 0) {
    8de2:	230f      	movs	r3, #15
    8de4:	446b      	add	r3, sp
    8de6:	781b      	ldrb	r3, [r3, #0]
    8de8:	2b00      	cmp	r3, #0
    8dea:	d103      	bne.n	8df4 <suart_enable_receive_interupt+0xac>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:185
        NVIC_EnableIRQ(PORTA_IRQn);    //使能A端口中断
    8dec:	201e      	movs	r0, #30
    8dee:	f7ff fb89 	bl	8504 <NVIC_EnableIRQ>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:195
    else {
        printf("Fail to init port interupt！！！\n");
        printf("Please select around Port A or C or D\n");
    }

}
    8df2:	e015      	b.n	8e20 <suart_enable_receive_interupt+0xd8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:187
    else if (port == 2 || port == 3) {
    8df4:	230f      	movs	r3, #15
    8df6:	446b      	add	r3, sp
    8df8:	781b      	ldrb	r3, [r3, #0]
    8dfa:	2b02      	cmp	r3, #2
    8dfc:	d004      	beq.n	8e08 <suart_enable_receive_interupt+0xc0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:187 (discriminator 1)
    8dfe:	230f      	movs	r3, #15
    8e00:	446b      	add	r3, sp
    8e02:	781b      	ldrb	r3, [r3, #0]
    8e04:	2b03      	cmp	r3, #3
    8e06:	d103      	bne.n	8e10 <suart_enable_receive_interupt+0xc8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:188
        NVIC_EnableIRQ(PORTC_PORTD_IRQn);    //使能C、D端口中断
    8e08:	201f      	movs	r0, #31
    8e0a:	f7ff fb7b 	bl	8504 <NVIC_EnableIRQ>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:195
}
    8e0e:	e007      	b.n	8e20 <suart_enable_receive_interupt+0xd8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:191
        printf("Fail to init port interupt！！！\n");
    8e10:	4b07      	ldr	r3, [pc, #28]	; (8e30 <suart_enable_receive_interupt+0xe8>)
    8e12:	0018      	movs	r0, r3
    8e14:	f001 f9c0 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:192
        printf("Please select around Port A or C or D\n");
    8e18:	4b06      	ldr	r3, [pc, #24]	; (8e34 <suart_enable_receive_interupt+0xec>)
    8e1a:	0018      	movs	r0, r3
    8e1c:	f001 f9bc 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:195
}
    8e20:	46c0      	nop			; (mov r8, r8)
    8e22:	b005      	add	sp, #20
    8e24:	bd00      	pop	{pc}
    8e26:	46c0      	nop			; (mov r8, r8)
    8e28:	40049000 	.word	0x40049000
    8e2c:	fff0ffff 	.word	0xfff0ffff
    8e30:	0000a23c 	.word	0x0000a23c
    8e34:	0000a260 	.word	0x0000a260

00008e38 <suart_get_port_pin>:
suart_get_port_pin():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:200


// 内部函数存放处
void suart_get_port_pin(uint16_t port_pin, uint8_t* port, uint8_t* pin)
{
    8e38:	b084      	sub	sp, #16
    8e3a:	9102      	str	r1, [sp, #8]
    8e3c:	9201      	str	r2, [sp, #4]
    8e3e:	230e      	movs	r3, #14
    8e40:	446b      	add	r3, sp
    8e42:	1c02      	adds	r2, r0, #0
    8e44:	801a      	strh	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:201
    *port = (port_pin >> 8);
    8e46:	230e      	movs	r3, #14
    8e48:	446b      	add	r3, sp
    8e4a:	881b      	ldrh	r3, [r3, #0]
    8e4c:	0a1b      	lsrs	r3, r3, #8
    8e4e:	b29b      	uxth	r3, r3
    8e50:	b2da      	uxtb	r2, r3
    8e52:	9b02      	ldr	r3, [sp, #8]
    8e54:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:202
    *pin = port_pin;
    8e56:	230e      	movs	r3, #14
    8e58:	446b      	add	r3, sp
    8e5a:	881b      	ldrh	r3, [r3, #0]
    8e5c:	b2da      	uxtb	r2, r3
    8e5e:	9b01      	ldr	r3, [sp, #4]
    8e60:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/suart.c:203
}
    8e62:	46c0      	nop			; (mov r8, r8)
    8e64:	b004      	add	sp, #16
    8e66:	4770      	bx	lr

00008e68 <wdog_stop>:
wdog_stop():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/wdog.c:40
//参数说明：无
//函数返回：无
//=========================================================================
void wdog_stop()
{
    SIM_COPC &= ~SIM_COPC_COPT_MASK;
    8e68:	4a06      	ldr	r2, [pc, #24]	; (8e84 <wdog_stop+0x1c>)
    8e6a:	2388      	movs	r3, #136	; 0x88
    8e6c:	015b      	lsls	r3, r3, #5
    8e6e:	58d3      	ldr	r3, [r2, r3]
    8e70:	4904      	ldr	r1, [pc, #16]	; (8e84 <wdog_stop+0x1c>)
    8e72:	220c      	movs	r2, #12
    8e74:	4393      	bics	r3, r2
    8e76:	001a      	movs	r2, r3
    8e78:	2388      	movs	r3, #136	; 0x88
    8e7a:	015b      	lsls	r3, r3, #5
    8e7c:	50ca      	str	r2, [r1, r3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/wdog.c:41
}
    8e7e:	46c0      	nop			; (mov r8, r8)
    8e80:	4770      	bx	lr
    8e82:	46c0      	nop			; (mov r8, r8)
    8e84:	40047000 	.word	0x40047000

00008e88 <NVIC_EnableIRQ>:
NVIC_EnableIRQ():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cm0plus.h:684
{
    8e88:	b082      	sub	sp, #8
    8e8a:	0002      	movs	r2, r0
    8e8c:	466b      	mov	r3, sp
    8e8e:	3307      	adds	r3, #7
    8e90:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cm0plus.h:685
  NVIC->ISER[0] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    8e92:	466b      	mov	r3, sp
    8e94:	3307      	adds	r3, #7
    8e96:	781b      	ldrb	r3, [r3, #0]
    8e98:	001a      	movs	r2, r3
    8e9a:	231f      	movs	r3, #31
    8e9c:	401a      	ands	r2, r3
    8e9e:	4b04      	ldr	r3, [pc, #16]	; (8eb0 <NVIC_EnableIRQ+0x28>)
    8ea0:	2101      	movs	r1, #1
    8ea2:	4091      	lsls	r1, r2
    8ea4:	000a      	movs	r2, r1
    8ea6:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\02_CPU/core_cm0plus.h:686
}
    8ea8:	46c0      	nop			; (mov r8, r8)
    8eaa:	b002      	add	sp, #8
    8eac:	4770      	bx	lr
    8eae:	46c0      	nop			; (mov r8, r8)
    8eb0:	e000e100 	.word	0xe000e100

00008eb4 <spi_init>:
spi_init():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:24
//       CPHA：CPHA=0相位为0； CPHA=1相位为1；
//函数返回：无
//=====================================================================
void spi_init(uint8_t No, uint8_t MSTR, uint16_t BaudRate, \
    uint8_t CPOL, uint8_t CPHA)
{
    8eb4:	b530      	push	{r4, r5, lr}
    8eb6:	b085      	sub	sp, #20
    8eb8:	0005      	movs	r5, r0
    8eba:	000c      	movs	r4, r1
    8ebc:	0010      	movs	r0, r2
    8ebe:	0019      	movs	r1, r3
    8ec0:	466b      	mov	r3, sp
    8ec2:	3307      	adds	r3, #7
    8ec4:	1c2a      	adds	r2, r5, #0
    8ec6:	701a      	strb	r2, [r3, #0]
    8ec8:	466b      	mov	r3, sp
    8eca:	3306      	adds	r3, #6
    8ecc:	1c22      	adds	r2, r4, #0
    8ece:	701a      	strb	r2, [r3, #0]
    8ed0:	ab01      	add	r3, sp, #4
    8ed2:	1c02      	adds	r2, r0, #0
    8ed4:	801a      	strh	r2, [r3, #0]
    8ed6:	466b      	mov	r3, sp
    8ed8:	3303      	adds	r3, #3
    8eda:	1c0a      	adds	r2, r1, #0
    8edc:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:29
    uint8_t BaudRate_Mode;
    uint8_t BaudRate_High;
    uint8_t BaudRate_Low;
    //如果SPI号参数错误则强制选择 0号模块
    if (No<SPI_0 || No>SPI_1)   No = SPI_0;
    8ede:	466b      	mov	r3, sp
    8ee0:	3307      	adds	r3, #7
    8ee2:	781b      	ldrb	r3, [r3, #0]
    8ee4:	2b01      	cmp	r3, #1
    8ee6:	d903      	bls.n	8ef0 <spi_init+0x3c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:29 (discriminator 1)
    8ee8:	466b      	mov	r3, sp
    8eea:	3307      	adds	r3, #7
    8eec:	2200      	movs	r2, #0
    8eee:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:30
    if (No == SPI_0)                         //初始化SPI0功能
    8ef0:	466b      	mov	r3, sp
    8ef2:	3307      	adds	r3, #7
    8ef4:	781b      	ldrb	r3, [r3, #0]
    8ef6:	2b00      	cmp	r3, #0
    8ef8:	d000      	beq.n	8efc <spi_init+0x48>
    8efa:	e0d4      	b.n	90a6 <spi_init+0x1f2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:32
    {
        BSET(SIM_SCGC4_SPI0_SHIFT, SIM_SCGC4);   //打开SPI0模块时钟。
    8efc:	4ad5      	ldr	r2, [pc, #852]	; (9254 <spi_init+0x3a0>)
    8efe:	4bd6      	ldr	r3, [pc, #856]	; (9258 <spi_init+0x3a4>)
    8f00:	58d3      	ldr	r3, [r2, r3]
    8f02:	49d4      	ldr	r1, [pc, #848]	; (9254 <spi_init+0x3a0>)
    8f04:	2280      	movs	r2, #128	; 0x80
    8f06:	03d2      	lsls	r2, r2, #15
    8f08:	4313      	orrs	r3, r2
    8f0a:	4ad3      	ldr	r2, [pc, #844]	; (9258 <spi_init+0x3a4>)
    8f0c:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:34
        //引脚复用为SPI0功能
        PORTC_PCR4 = (0 | PORT_PCR_MUX(0x02));     //选择PTC4的SS功能
    8f0e:	4bd3      	ldr	r3, [pc, #844]	; (925c <spi_init+0x3a8>)
    8f10:	2280      	movs	r2, #128	; 0x80
    8f12:	0092      	lsls	r2, r2, #2
    8f14:	611a      	str	r2, [r3, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:35
        PORTC_PCR5 = (0 | PORT_PCR_MUX(0x02));     //选择PTC5的SCK功能
    8f16:	4bd1      	ldr	r3, [pc, #836]	; (925c <spi_init+0x3a8>)
    8f18:	2280      	movs	r2, #128	; 0x80
    8f1a:	0092      	lsls	r2, r2, #2
    8f1c:	615a      	str	r2, [r3, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:36
        PORTC_PCR6 = (0 | PORT_PCR_MUX(0x02));     //选择PTC6的MOSI功能
    8f1e:	4bcf      	ldr	r3, [pc, #828]	; (925c <spi_init+0x3a8>)
    8f20:	2280      	movs	r2, #128	; 0x80
    8f22:	0092      	lsls	r2, r2, #2
    8f24:	619a      	str	r2, [r3, #24]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:37
        PORTC_PCR7 = (0 | PORT_PCR_MUX(0x02));     //选择PTC7的MIOS功能
    8f26:	4bcd      	ldr	r3, [pc, #820]	; (925c <spi_init+0x3a8>)
    8f28:	2280      	movs	r2, #128	; 0x80
    8f2a:	0092      	lsls	r2, r2, #2
    8f2c:	61da      	str	r2, [r3, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:39

        SPI0_C1 = 0x00;                           //SPI控制寄存器1清零
    8f2e:	4bcc      	ldr	r3, [pc, #816]	; (9260 <spi_init+0x3ac>)
    8f30:	2200      	movs	r2, #0
    8f32:	70da      	strb	r2, [r3, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:40
        BSET(SPI_C1_SPE_SHIFT, SPI0_C1);         //使能SPI模块
    8f34:	4bca      	ldr	r3, [pc, #808]	; (9260 <spi_init+0x3ac>)
    8f36:	78db      	ldrb	r3, [r3, #3]
    8f38:	b2db      	uxtb	r3, r3
    8f3a:	4ac9      	ldr	r2, [pc, #804]	; (9260 <spi_init+0x3ac>)
    8f3c:	2140      	movs	r1, #64	; 0x40
    8f3e:	430b      	orrs	r3, r1
    8f40:	b2db      	uxtb	r3, r3
    8f42:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:44

        //MSTR=1为主机模式；
        //MSTR=0为从机模式（因MSTR初始值为0，无需更改）
        (MSTR == 1) ? BSET(SPI_C1_MSTR_SHIFT, SPI0_C1) : \
    8f44:	466b      	mov	r3, sp
    8f46:	3306      	adds	r3, #6
    8f48:	781b      	ldrb	r3, [r3, #0]
    8f4a:	2b01      	cmp	r3, #1
    8f4c:	d108      	bne.n	8f60 <spi_init+0xac>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:44 (discriminator 1)
    8f4e:	4bc4      	ldr	r3, [pc, #784]	; (9260 <spi_init+0x3ac>)
    8f50:	78db      	ldrb	r3, [r3, #3]
    8f52:	b2db      	uxtb	r3, r3
    8f54:	4ac2      	ldr	r2, [pc, #776]	; (9260 <spi_init+0x3ac>)
    8f56:	2110      	movs	r1, #16
    8f58:	430b      	orrs	r3, r1
    8f5a:	b2db      	uxtb	r3, r3
    8f5c:	70d3      	strb	r3, [r2, #3]
    8f5e:	e008      	b.n	8f72 <spi_init+0xbe>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:45 (discriminator 2)
            BSET(SPI_C1_SPIE_SHIFT, SPI0_C1);
    8f60:	4bbf      	ldr	r3, [pc, #764]	; (9260 <spi_init+0x3ac>)
    8f62:	78db      	ldrb	r3, [r3, #3]
    8f64:	b2db      	uxtb	r3, r3
    8f66:	49be      	ldr	r1, [pc, #760]	; (9260 <spi_init+0x3ac>)
    8f68:	2280      	movs	r2, #128	; 0x80
    8f6a:	4252      	negs	r2, r2
    8f6c:	4313      	orrs	r3, r2
    8f6e:	b2db      	uxtb	r3, r3
    8f70:	70cb      	strb	r3, [r1, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:48

        //时钟极性配置，CPOL=0，平时时钟为高电平，反之CPOL=1，平时时钟为低电平
        (0 == CPOL) ? BCLR(SPI_C1_CPOL_SHIFT, SPI0_C1) : \
    8f72:	466b      	mov	r3, sp
    8f74:	3303      	adds	r3, #3
    8f76:	781b      	ldrb	r3, [r3, #0]
    8f78:	2b00      	cmp	r3, #0
    8f7a:	d108      	bne.n	8f8e <spi_init+0xda>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:48 (discriminator 1)
    8f7c:	4bb8      	ldr	r3, [pc, #736]	; (9260 <spi_init+0x3ac>)
    8f7e:	78db      	ldrb	r3, [r3, #3]
    8f80:	b2db      	uxtb	r3, r3
    8f82:	4ab7      	ldr	r2, [pc, #732]	; (9260 <spi_init+0x3ac>)
    8f84:	2108      	movs	r1, #8
    8f86:	438b      	bics	r3, r1
    8f88:	b2db      	uxtb	r3, r3
    8f8a:	70d3      	strb	r3, [r2, #3]
    8f8c:	e007      	b.n	8f9e <spi_init+0xea>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:49 (discriminator 2)
            BSET(SPI_C1_CPOL_SHIFT, SPI0_C1);
    8f8e:	4bb4      	ldr	r3, [pc, #720]	; (9260 <spi_init+0x3ac>)
    8f90:	78db      	ldrb	r3, [r3, #3]
    8f92:	b2db      	uxtb	r3, r3
    8f94:	4ab2      	ldr	r2, [pc, #712]	; (9260 <spi_init+0x3ac>)
    8f96:	2108      	movs	r1, #8
    8f98:	430b      	orrs	r3, r1
    8f9a:	b2db      	uxtb	r3, r3
    8f9c:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:52

        //时钟相位CPHA
        (0 == CPHA) ? BCLR(SPI_C1_CPHA_SHIFT, SPI0_C1) : \
    8f9e:	ab08      	add	r3, sp, #32
    8fa0:	781b      	ldrb	r3, [r3, #0]
    8fa2:	2b00      	cmp	r3, #0
    8fa4:	d108      	bne.n	8fb8 <spi_init+0x104>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:52 (discriminator 1)
    8fa6:	4bae      	ldr	r3, [pc, #696]	; (9260 <spi_init+0x3ac>)
    8fa8:	78db      	ldrb	r3, [r3, #3]
    8faa:	b2db      	uxtb	r3, r3
    8fac:	4aac      	ldr	r2, [pc, #688]	; (9260 <spi_init+0x3ac>)
    8fae:	2104      	movs	r1, #4
    8fb0:	438b      	bics	r3, r1
    8fb2:	b2db      	uxtb	r3, r3
    8fb4:	70d3      	strb	r3, [r2, #3]
    8fb6:	e007      	b.n	8fc8 <spi_init+0x114>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:53 (discriminator 2)
            BSET(SPI_C1_CPHA_SHIFT, SPI0_C1);
    8fb8:	4ba9      	ldr	r3, [pc, #676]	; (9260 <spi_init+0x3ac>)
    8fba:	78db      	ldrb	r3, [r3, #3]
    8fbc:	b2db      	uxtb	r3, r3
    8fbe:	4aa8      	ldr	r2, [pc, #672]	; (9260 <spi_init+0x3ac>)
    8fc0:	2104      	movs	r1, #4
    8fc2:	430b      	orrs	r3, r1
    8fc4:	b2db      	uxtb	r3, r3
    8fc6:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:56

        //SSOE为1,MODFEN为1，配置本模块为自动SS输出
        BSET(SPI_C1_SSOE_SHIFT, SPI0_C1);
    8fc8:	4ba5      	ldr	r3, [pc, #660]	; (9260 <spi_init+0x3ac>)
    8fca:	78db      	ldrb	r3, [r3, #3]
    8fcc:	b2db      	uxtb	r3, r3
    8fce:	4aa4      	ldr	r2, [pc, #656]	; (9260 <spi_init+0x3ac>)
    8fd0:	2102      	movs	r1, #2
    8fd2:	430b      	orrs	r3, r1
    8fd4:	b2db      	uxtb	r3, r3
    8fd6:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:58
        //对SPI0的C1寄存器配置为主机模式、从机选择自动模式并使能SPI0模块。
        SPI0_C2 = 0x00;
    8fd8:	4ba1      	ldr	r3, [pc, #644]	; (9260 <spi_init+0x3ac>)
    8fda:	2200      	movs	r2, #0
    8fdc:	709a      	strb	r2, [r3, #2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:59
        if (MSTR == 1)  //主机模式
    8fde:	466b      	mov	r3, sp
    8fe0:	3306      	adds	r3, #6
    8fe2:	781b      	ldrb	r3, [r3, #0]
    8fe4:	2b01      	cmp	r3, #1
    8fe6:	d107      	bne.n	8ff8 <spi_init+0x144>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:60
            BSET(SPI_C2_MODFEN_SHIFT, SPI0_C2);
    8fe8:	4b9d      	ldr	r3, [pc, #628]	; (9260 <spi_init+0x3ac>)
    8fea:	789b      	ldrb	r3, [r3, #2]
    8fec:	b2db      	uxtb	r3, r3
    8fee:	4a9c      	ldr	r2, [pc, #624]	; (9260 <spi_init+0x3ac>)
    8ff0:	2110      	movs	r1, #16
    8ff2:	430b      	orrs	r3, r1
    8ff4:	b2db      	uxtb	r3, r3
    8ff6:	7093      	strb	r3, [r2, #2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:61
        SPI0_BR = 0x00U;//波特率寄存器清零
    8ff8:	4b99      	ldr	r3, [pc, #612]	; (9260 <spi_init+0x3ac>)
    8ffa:	2200      	movs	r2, #0
    8ffc:	705a      	strb	r2, [r3, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:63
        //重新设置波特率
        BaudRate_High = 0;
    8ffe:	230d      	movs	r3, #13
    9000:	446b      	add	r3, sp
    9002:	2200      	movs	r2, #0
    9004:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:64
        BaudRate_Low = 0;
    9006:	230e      	movs	r3, #14
    9008:	446b      	add	r3, sp
    900a:	2200      	movs	r2, #0
    900c:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:65
        BaudRate_Mode = 24000 / BaudRate;
    900e:	ab01      	add	r3, sp, #4
    9010:	881b      	ldrh	r3, [r3, #0]
    9012:	0019      	movs	r1, r3
    9014:	4893      	ldr	r0, [pc, #588]	; (9264 <spi_init+0x3b0>)
    9016:	f7fd fed1 	bl	6dbc <__divsi3>
    901a:	0003      	movs	r3, r0
    901c:	001a      	movs	r2, r3
    901e:	230f      	movs	r3, #15
    9020:	446b      	add	r3, sp
    9022:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:66
        if (BaudRate_Mode <= 8)
    9024:	230f      	movs	r3, #15
    9026:	446b      	add	r3, sp
    9028:	781b      	ldrb	r3, [r3, #0]
    902a:	2b08      	cmp	r3, #8
    902c:	d817      	bhi.n	905e <spi_init+0x1aa>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:68
        {
            SPI0_BR = (BaudRate_Mode - 1) << 4;
    902e:	230f      	movs	r3, #15
    9030:	446b      	add	r3, sp
    9032:	781b      	ldrb	r3, [r3, #0]
    9034:	3b01      	subs	r3, #1
    9036:	b2db      	uxtb	r3, r3
    9038:	4a89      	ldr	r2, [pc, #548]	; (9260 <spi_init+0x3ac>)
    903a:	011b      	lsls	r3, r3, #4
    903c:	b2db      	uxtb	r3, r3
    903e:	7053      	strb	r3, [r2, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:135
            BaudRate_High = --BaudRate_Mode;
            SPI0_BR = BaudRate_High << 4;//数值赋给SPI0_BR的SPPR的D6D5D4位
            SPI0_BR |= BaudRate_Low;   //赋值给SPI0_BR的SPR的 D2D1D0位
        }
    }
}
    9040:	e105      	b.n	924e <spi_init+0x39a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:74
                BaudRate_Low++;
    9042:	230e      	movs	r3, #14
    9044:	446b      	add	r3, sp
    9046:	781a      	ldrb	r2, [r3, #0]
    9048:	230e      	movs	r3, #14
    904a:	446b      	add	r3, sp
    904c:	3201      	adds	r2, #1
    904e:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:75
                BaudRate_Mode = BaudRate_Mode / 2;
    9050:	230f      	movs	r3, #15
    9052:	446b      	add	r3, sp
    9054:	220f      	movs	r2, #15
    9056:	446a      	add	r2, sp
    9058:	7812      	ldrb	r2, [r2, #0]
    905a:	0852      	lsrs	r2, r2, #1
    905c:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:72
            while (BaudRate_Mode / 2 > 8)
    905e:	230f      	movs	r3, #15
    9060:	446b      	add	r3, sp
    9062:	781b      	ldrb	r3, [r3, #0]
    9064:	2b11      	cmp	r3, #17
    9066:	d8ec      	bhi.n	9042 <spi_init+0x18e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:77
            BaudRate_High = --BaudRate_Mode;
    9068:	230f      	movs	r3, #15
    906a:	446b      	add	r3, sp
    906c:	220f      	movs	r2, #15
    906e:	446a      	add	r2, sp
    9070:	7812      	ldrb	r2, [r2, #0]
    9072:	3a01      	subs	r2, #1
    9074:	701a      	strb	r2, [r3, #0]
    9076:	230d      	movs	r3, #13
    9078:	446b      	add	r3, sp
    907a:	220f      	movs	r2, #15
    907c:	446a      	add	r2, sp
    907e:	7812      	ldrb	r2, [r2, #0]
    9080:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:78
            SPI0_BR = BaudRate_High << 4;//数值赋给SPI0_BR的SPPR的D6D5D4位
    9082:	4a77      	ldr	r2, [pc, #476]	; (9260 <spi_init+0x3ac>)
    9084:	230d      	movs	r3, #13
    9086:	446b      	add	r3, sp
    9088:	781b      	ldrb	r3, [r3, #0]
    908a:	011b      	lsls	r3, r3, #4
    908c:	b2db      	uxtb	r3, r3
    908e:	7053      	strb	r3, [r2, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:79
            SPI0_BR |= BaudRate_Low;//赋值给SPI0_BR的SPR的 D2D1D0位
    9090:	4b73      	ldr	r3, [pc, #460]	; (9260 <spi_init+0x3ac>)
    9092:	785b      	ldrb	r3, [r3, #1]
    9094:	b2da      	uxtb	r2, r3
    9096:	4972      	ldr	r1, [pc, #456]	; (9260 <spi_init+0x3ac>)
    9098:	230e      	movs	r3, #14
    909a:	446b      	add	r3, sp
    909c:	781b      	ldrb	r3, [r3, #0]
    909e:	4313      	orrs	r3, r2
    90a0:	b2db      	uxtb	r3, r3
    90a2:	704b      	strb	r3, [r1, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:135
}
    90a4:	e0d3      	b.n	924e <spi_init+0x39a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:84
        BSET(SIM_SCGC4_SPI1_SHIFT, SIM_SCGC4);   //打开SPI1模块时钟。
    90a6:	4a6b      	ldr	r2, [pc, #428]	; (9254 <spi_init+0x3a0>)
    90a8:	4b6b      	ldr	r3, [pc, #428]	; (9258 <spi_init+0x3a4>)
    90aa:	58d3      	ldr	r3, [r2, r3]
    90ac:	4969      	ldr	r1, [pc, #420]	; (9254 <spi_init+0x3a0>)
    90ae:	2280      	movs	r2, #128	; 0x80
    90b0:	0412      	lsls	r2, r2, #16
    90b2:	4313      	orrs	r3, r2
    90b4:	4a68      	ldr	r2, [pc, #416]	; (9258 <spi_init+0x3a4>)
    90b6:	508b      	str	r3, [r1, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:86
        PORTD_PCR4 = (0 | PORT_PCR_MUX(0x02));     //选择PTD4的SS功能
    90b8:	4b6b      	ldr	r3, [pc, #428]	; (9268 <spi_init+0x3b4>)
    90ba:	2280      	movs	r2, #128	; 0x80
    90bc:	0092      	lsls	r2, r2, #2
    90be:	611a      	str	r2, [r3, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:87
        PORTD_PCR5 = (0 | PORT_PCR_MUX(0x02));     //选择PTD5的SCK功能
    90c0:	4b69      	ldr	r3, [pc, #420]	; (9268 <spi_init+0x3b4>)
    90c2:	2280      	movs	r2, #128	; 0x80
    90c4:	0092      	lsls	r2, r2, #2
    90c6:	615a      	str	r2, [r3, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:88
        PORTD_PCR6 = (0 | PORT_PCR_MUX(0x02));     //选择PTD6的MOSI功能
    90c8:	4b67      	ldr	r3, [pc, #412]	; (9268 <spi_init+0x3b4>)
    90ca:	2280      	movs	r2, #128	; 0x80
    90cc:	0092      	lsls	r2, r2, #2
    90ce:	619a      	str	r2, [r3, #24]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:89
        PORTD_PCR7 = (0 | PORT_PCR_MUX(0x02));     //选择PTD7的MIOS功能
    90d0:	4b65      	ldr	r3, [pc, #404]	; (9268 <spi_init+0x3b4>)
    90d2:	2280      	movs	r2, #128	; 0x80
    90d4:	0092      	lsls	r2, r2, #2
    90d6:	61da      	str	r2, [r3, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:91
        SPI1_C1 = 0x00;                           //SPI控制寄存器1清零
    90d8:	4b64      	ldr	r3, [pc, #400]	; (926c <spi_init+0x3b8>)
    90da:	2200      	movs	r2, #0
    90dc:	70da      	strb	r2, [r3, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:92
        BSET(SPI_C1_SPE_SHIFT, SPI1_C1);         //使能SPI模块
    90de:	4b63      	ldr	r3, [pc, #396]	; (926c <spi_init+0x3b8>)
    90e0:	78db      	ldrb	r3, [r3, #3]
    90e2:	b2db      	uxtb	r3, r3
    90e4:	4a61      	ldr	r2, [pc, #388]	; (926c <spi_init+0x3b8>)
    90e6:	2140      	movs	r1, #64	; 0x40
    90e8:	430b      	orrs	r3, r1
    90ea:	b2db      	uxtb	r3, r3
    90ec:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:95
        (MSTR == 1) ? BSET(SPI_C1_MSTR_SHIFT, SPI1_C1) : \
    90ee:	466b      	mov	r3, sp
    90f0:	3306      	adds	r3, #6
    90f2:	781b      	ldrb	r3, [r3, #0]
    90f4:	2b01      	cmp	r3, #1
    90f6:	d108      	bne.n	910a <spi_init+0x256>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:95 (discriminator 1)
    90f8:	4b5c      	ldr	r3, [pc, #368]	; (926c <spi_init+0x3b8>)
    90fa:	78db      	ldrb	r3, [r3, #3]
    90fc:	b2db      	uxtb	r3, r3
    90fe:	4a5b      	ldr	r2, [pc, #364]	; (926c <spi_init+0x3b8>)
    9100:	2110      	movs	r1, #16
    9102:	430b      	orrs	r3, r1
    9104:	b2db      	uxtb	r3, r3
    9106:	70d3      	strb	r3, [r2, #3]
    9108:	e008      	b.n	911c <spi_init+0x268>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:96 (discriminator 2)
            BSET(SPI_C1_SPIE_SHIFT, SPI1_C1);
    910a:	4b58      	ldr	r3, [pc, #352]	; (926c <spi_init+0x3b8>)
    910c:	78db      	ldrb	r3, [r3, #3]
    910e:	b2db      	uxtb	r3, r3
    9110:	4956      	ldr	r1, [pc, #344]	; (926c <spi_init+0x3b8>)
    9112:	2280      	movs	r2, #128	; 0x80
    9114:	4252      	negs	r2, r2
    9116:	4313      	orrs	r3, r2
    9118:	b2db      	uxtb	r3, r3
    911a:	70cb      	strb	r3, [r1, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:99
        (0 == CPOL) ? BCLR(SPI_C1_CPOL_SHIFT, SPI1_C1) : \
    911c:	466b      	mov	r3, sp
    911e:	3303      	adds	r3, #3
    9120:	781b      	ldrb	r3, [r3, #0]
    9122:	2b00      	cmp	r3, #0
    9124:	d108      	bne.n	9138 <spi_init+0x284>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:99 (discriminator 1)
    9126:	4b51      	ldr	r3, [pc, #324]	; (926c <spi_init+0x3b8>)
    9128:	78db      	ldrb	r3, [r3, #3]
    912a:	b2db      	uxtb	r3, r3
    912c:	4a4f      	ldr	r2, [pc, #316]	; (926c <spi_init+0x3b8>)
    912e:	2108      	movs	r1, #8
    9130:	438b      	bics	r3, r1
    9132:	b2db      	uxtb	r3, r3
    9134:	70d3      	strb	r3, [r2, #3]
    9136:	e007      	b.n	9148 <spi_init+0x294>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:100 (discriminator 2)
            BSET(SPI_C1_CPOL_SHIFT, SPI1_C1);
    9138:	4b4c      	ldr	r3, [pc, #304]	; (926c <spi_init+0x3b8>)
    913a:	78db      	ldrb	r3, [r3, #3]
    913c:	b2db      	uxtb	r3, r3
    913e:	4a4b      	ldr	r2, [pc, #300]	; (926c <spi_init+0x3b8>)
    9140:	2108      	movs	r1, #8
    9142:	430b      	orrs	r3, r1
    9144:	b2db      	uxtb	r3, r3
    9146:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:104
        (0 == CPHA) ? BCLR(SPI_C1_CPHA_SHIFT, SPI1_C1) : \
    9148:	ab08      	add	r3, sp, #32
    914a:	781b      	ldrb	r3, [r3, #0]
    914c:	2b00      	cmp	r3, #0
    914e:	d108      	bne.n	9162 <spi_init+0x2ae>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:104 (discriminator 1)
    9150:	4b46      	ldr	r3, [pc, #280]	; (926c <spi_init+0x3b8>)
    9152:	78db      	ldrb	r3, [r3, #3]
    9154:	b2db      	uxtb	r3, r3
    9156:	4a45      	ldr	r2, [pc, #276]	; (926c <spi_init+0x3b8>)
    9158:	2104      	movs	r1, #4
    915a:	438b      	bics	r3, r1
    915c:	b2db      	uxtb	r3, r3
    915e:	70d3      	strb	r3, [r2, #3]
    9160:	e007      	b.n	9172 <spi_init+0x2be>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:105 (discriminator 2)
            BSET(SPI_C1_CPHA_SHIFT, SPI1_C1);
    9162:	4b42      	ldr	r3, [pc, #264]	; (926c <spi_init+0x3b8>)
    9164:	78db      	ldrb	r3, [r3, #3]
    9166:	b2db      	uxtb	r3, r3
    9168:	4a40      	ldr	r2, [pc, #256]	; (926c <spi_init+0x3b8>)
    916a:	2104      	movs	r1, #4
    916c:	430b      	orrs	r3, r1
    916e:	b2db      	uxtb	r3, r3
    9170:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:107
        BSET(SPI_C1_SSOE_SHIFT, SPI1_C1);
    9172:	4b3e      	ldr	r3, [pc, #248]	; (926c <spi_init+0x3b8>)
    9174:	78db      	ldrb	r3, [r3, #3]
    9176:	b2db      	uxtb	r3, r3
    9178:	4a3c      	ldr	r2, [pc, #240]	; (926c <spi_init+0x3b8>)
    917a:	2102      	movs	r1, #2
    917c:	430b      	orrs	r3, r1
    917e:	b2db      	uxtb	r3, r3
    9180:	70d3      	strb	r3, [r2, #3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:111
        SPI1_C2 = 0x00U;
    9182:	4b3a      	ldr	r3, [pc, #232]	; (926c <spi_init+0x3b8>)
    9184:	2200      	movs	r2, #0
    9186:	709a      	strb	r2, [r3, #2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:112
        if (MSTR == 1)  //主机模式
    9188:	466b      	mov	r3, sp
    918a:	3306      	adds	r3, #6
    918c:	781b      	ldrb	r3, [r3, #0]
    918e:	2b01      	cmp	r3, #1
    9190:	d107      	bne.n	91a2 <spi_init+0x2ee>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:113
            BSET(SPI_C2_MODFEN_SHIFT, SPI1_C2);
    9192:	4b36      	ldr	r3, [pc, #216]	; (926c <spi_init+0x3b8>)
    9194:	789b      	ldrb	r3, [r3, #2]
    9196:	b2db      	uxtb	r3, r3
    9198:	4a34      	ldr	r2, [pc, #208]	; (926c <spi_init+0x3b8>)
    919a:	2110      	movs	r1, #16
    919c:	430b      	orrs	r3, r1
    919e:	b2db      	uxtb	r3, r3
    91a0:	7093      	strb	r3, [r2, #2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:114
        SPI1_BR = 0x00U;
    91a2:	4b32      	ldr	r3, [pc, #200]	; (926c <spi_init+0x3b8>)
    91a4:	2200      	movs	r2, #0
    91a6:	705a      	strb	r2, [r3, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:116
        BaudRate_High = 0;
    91a8:	230d      	movs	r3, #13
    91aa:	446b      	add	r3, sp
    91ac:	2200      	movs	r2, #0
    91ae:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:117
        BaudRate_Low = 0;
    91b0:	230e      	movs	r3, #14
    91b2:	446b      	add	r3, sp
    91b4:	2200      	movs	r2, #0
    91b6:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:118
        BaudRate_Mode = 24000 / BaudRate;   //取除数用于寄存器中数据计算
    91b8:	ab01      	add	r3, sp, #4
    91ba:	881b      	ldrh	r3, [r3, #0]
    91bc:	0019      	movs	r1, r3
    91be:	4829      	ldr	r0, [pc, #164]	; (9264 <spi_init+0x3b0>)
    91c0:	f7fd fdfc 	bl	6dbc <__divsi3>
    91c4:	0003      	movs	r3, r0
    91c6:	001a      	movs	r2, r3
    91c8:	230f      	movs	r3, #15
    91ca:	446b      	add	r3, sp
    91cc:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:119
        if (BaudRate_Mode <= 8)
    91ce:	230f      	movs	r3, #15
    91d0:	446b      	add	r3, sp
    91d2:	781b      	ldrb	r3, [r3, #0]
    91d4:	2b08      	cmp	r3, #8
    91d6:	d817      	bhi.n	9208 <spi_init+0x354>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:121
            SPI0_BR = (BaudRate_Mode - 1) << 4;
    91d8:	230f      	movs	r3, #15
    91da:	446b      	add	r3, sp
    91dc:	781b      	ldrb	r3, [r3, #0]
    91de:	3b01      	subs	r3, #1
    91e0:	b2db      	uxtb	r3, r3
    91e2:	4a1f      	ldr	r2, [pc, #124]	; (9260 <spi_init+0x3ac>)
    91e4:	011b      	lsls	r3, r3, #4
    91e6:	b2db      	uxtb	r3, r3
    91e8:	7053      	strb	r3, [r2, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:135
}
    91ea:	e030      	b.n	924e <spi_init+0x39a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:127
                BaudRate_Low++;
    91ec:	230e      	movs	r3, #14
    91ee:	446b      	add	r3, sp
    91f0:	781a      	ldrb	r2, [r3, #0]
    91f2:	230e      	movs	r3, #14
    91f4:	446b      	add	r3, sp
    91f6:	3201      	adds	r2, #1
    91f8:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:128
                BaudRate_Mode = BaudRate_Mode / 2;
    91fa:	230f      	movs	r3, #15
    91fc:	446b      	add	r3, sp
    91fe:	220f      	movs	r2, #15
    9200:	446a      	add	r2, sp
    9202:	7812      	ldrb	r2, [r2, #0]
    9204:	0852      	lsrs	r2, r2, #1
    9206:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:125
            while (BaudRate_Mode / 2 > 8)
    9208:	230f      	movs	r3, #15
    920a:	446b      	add	r3, sp
    920c:	781b      	ldrb	r3, [r3, #0]
    920e:	2b11      	cmp	r3, #17
    9210:	d8ec      	bhi.n	91ec <spi_init+0x338>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:130
            BaudRate_High = --BaudRate_Mode;
    9212:	230f      	movs	r3, #15
    9214:	446b      	add	r3, sp
    9216:	220f      	movs	r2, #15
    9218:	446a      	add	r2, sp
    921a:	7812      	ldrb	r2, [r2, #0]
    921c:	3a01      	subs	r2, #1
    921e:	701a      	strb	r2, [r3, #0]
    9220:	230d      	movs	r3, #13
    9222:	446b      	add	r3, sp
    9224:	220f      	movs	r2, #15
    9226:	446a      	add	r2, sp
    9228:	7812      	ldrb	r2, [r2, #0]
    922a:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:131
            SPI0_BR = BaudRate_High << 4;//数值赋给SPI0_BR的SPPR的D6D5D4位
    922c:	4a0c      	ldr	r2, [pc, #48]	; (9260 <spi_init+0x3ac>)
    922e:	230d      	movs	r3, #13
    9230:	446b      	add	r3, sp
    9232:	781b      	ldrb	r3, [r3, #0]
    9234:	011b      	lsls	r3, r3, #4
    9236:	b2db      	uxtb	r3, r3
    9238:	7053      	strb	r3, [r2, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:132
            SPI0_BR |= BaudRate_Low;   //赋值给SPI0_BR的SPR的 D2D1D0位
    923a:	4b09      	ldr	r3, [pc, #36]	; (9260 <spi_init+0x3ac>)
    923c:	785b      	ldrb	r3, [r3, #1]
    923e:	b2da      	uxtb	r2, r3
    9240:	4907      	ldr	r1, [pc, #28]	; (9260 <spi_init+0x3ac>)
    9242:	230e      	movs	r3, #14
    9244:	446b      	add	r3, sp
    9246:	781b      	ldrb	r3, [r3, #0]
    9248:	4313      	orrs	r3, r2
    924a:	b2db      	uxtb	r3, r3
    924c:	704b      	strb	r3, [r1, #1]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:135
}
    924e:	46c0      	nop			; (mov r8, r8)
    9250:	b005      	add	sp, #20
    9252:	bd30      	pop	{r4, r5, pc}
    9254:	40047000 	.word	0x40047000
    9258:	00001034 	.word	0x00001034
    925c:	4004b000 	.word	0x4004b000
    9260:	40076000 	.word	0x40076000
    9264:	00005dc0 	.word	0x00005dc0
    9268:	4004c000 	.word	0x4004c000
    926c:	40077000 	.word	0x40077000

00009270 <spi_send1>:
spi_send1():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:144
//函数参数：No：模块号，可用参数可参见gec.h文件
//       data：     需要发送的一字节数据。
//函数返回：0：发送失败；1：发送成功。
//=====================================================================
uint8_t spi_send1(uint8_t No, uint8_t data)
{
    9270:	b084      	sub	sp, #16
    9272:	0002      	movs	r2, r0
    9274:	466b      	mov	r3, sp
    9276:	3307      	adds	r3, #7
    9278:	701a      	strb	r2, [r3, #0]
    927a:	466b      	mov	r3, sp
    927c:	3306      	adds	r3, #6
    927e:	1c0a      	adds	r2, r1, #0
    9280:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:147
    // 复位后，发送缓冲区标志位为1; 0表示满，1表示空
    // 当向数据寄存器写数据后，自动将发送缓冲区标志位置1
    SPI_MemMapPtr baseadd = SPI_baseadd(No);
    9282:	466b      	mov	r3, sp
    9284:	3307      	adds	r3, #7
    9286:	781b      	ldrb	r3, [r3, #0]
    9288:	4a14      	ldr	r2, [pc, #80]	; (92dc <spi_send1+0x6c>)
    928a:	4694      	mov	ip, r2
    928c:	4463      	add	r3, ip
    928e:	031b      	lsls	r3, r3, #12
    9290:	9302      	str	r3, [sp, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:150

    //等待上一个字符发送完毕，发送缓冲区空闲
    while (!(SPI_S_REG(baseadd) & SPI_S_SPTEF_MASK));
    9292:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:150 (discriminator 1)
    9294:	9b02      	ldr	r3, [sp, #8]
    9296:	781b      	ldrb	r3, [r3, #0]
    9298:	b2db      	uxtb	r3, r3
    929a:	001a      	movs	r2, r3
    929c:	2320      	movs	r3, #32
    929e:	4013      	ands	r3, r2
    92a0:	d0f8      	beq.n	9294 <spi_send1+0x24>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:155

    // 将要发送的数据写入到数据寄存器
    // 向数据寄存器写入数据将会写入到发送数据缓冲器，将数据发送出去
    // 读数据寄存器将会读取到接收数据寄存器的值。
    SPI_DL_REG(baseadd) = data;
    92a2:	9b02      	ldr	r3, [sp, #8]
    92a4:	466a      	mov	r2, sp
    92a6:	3206      	adds	r2, #6
    92a8:	7812      	ldrb	r2, [r2, #0]
    92aa:	719a      	strb	r2, [r3, #6]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:157

    for (uint32_t i = 0;i < 65535;i++) {
    92ac:	2300      	movs	r3, #0
    92ae:	9303      	str	r3, [sp, #12]
    92b0:	e00b      	b.n	92ca <spi_send1+0x5a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:159
        // 在一定时间内如果发送缓冲器为空标志变成 1，说明发送缓冲区为空，发送完毕
        if (SPI_S_REG(baseadd) & SPI_S_SPTEF_MASK) {
    92b2:	9b02      	ldr	r3, [sp, #8]
    92b4:	781b      	ldrb	r3, [r3, #0]
    92b6:	b2db      	uxtb	r3, r3
    92b8:	001a      	movs	r2, r3
    92ba:	2320      	movs	r3, #32
    92bc:	4013      	ands	r3, r2
    92be:	d001      	beq.n	92c4 <spi_send1+0x54>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:160
            return(1);
    92c0:	2301      	movs	r3, #1
    92c2:	e007      	b.n	92d4 <spi_send1+0x64>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:157 (discriminator 2)
    for (uint32_t i = 0;i < 65535;i++) {
    92c4:	9b03      	ldr	r3, [sp, #12]
    92c6:	3301      	adds	r3, #1
    92c8:	9303      	str	r3, [sp, #12]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:157 (discriminator 1)
    92ca:	9b03      	ldr	r3, [sp, #12]
    92cc:	4a04      	ldr	r2, [pc, #16]	; (92e0 <spi_send1+0x70>)
    92ce:	4293      	cmp	r3, r2
    92d0:	d9ef      	bls.n	92b2 <spi_send1+0x42>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:165
        }
    }

    //在一定时间内仍然没有返回1,则认为发送失败，返回0。
    return(0);
    92d2:	2300      	movs	r3, #0
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:166
}
    92d4:	0018      	movs	r0, r3
    92d6:	b004      	add	sp, #16
    92d8:	4770      	bx	lr
    92da:	46c0      	nop			; (mov r8, r8)
    92dc:	00040076 	.word	0x00040076
    92e0:	0000fffe 	.word	0x0000fffe

000092e4 <spi_sendN>:
spi_sendN():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:175
//函数参数：No：模块号，可用参数可参见gec.h文件
//       n:     要发送的字节个数。范围为(1~255)
//       data[]:所发数组的首地址。
//函数返回：无。
//=====================================================================
void spi_sendN(uint8_t No, uint8_t n, uint8_t* buff) {
    92e4:	b500      	push	{lr}
    92e6:	b085      	sub	sp, #20
    92e8:	9200      	str	r2, [sp, #0]
    92ea:	466b      	mov	r3, sp
    92ec:	3307      	adds	r3, #7
    92ee:	1c02      	adds	r2, r0, #0
    92f0:	701a      	strb	r2, [r3, #0]
    92f2:	466b      	mov	r3, sp
    92f4:	3306      	adds	r3, #6
    92f6:	1c0a      	adds	r2, r1, #0
    92f8:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:190
    //     // 因为向数据寄存器写数据之后，会自动将SPTEF置1
    //     SPI_S_REG(baseadd) |= SPI_S_SPTEF_MASK;    //清除SPTEF位
    // }

    // 第二种实现方式，通过调用spi_send1()也可以实现上述功能
    for (uint32_t i = 0; i < n; i++) {
    92fa:	2300      	movs	r3, #0
    92fc:	9303      	str	r3, [sp, #12]
    92fe:	e00d      	b.n	931c <spi_sendN+0x38>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:191 (discriminator 3)
        spi_send1(No, buff[i]);
    9300:	9a00      	ldr	r2, [sp, #0]
    9302:	9b03      	ldr	r3, [sp, #12]
    9304:	18d3      	adds	r3, r2, r3
    9306:	781a      	ldrb	r2, [r3, #0]
    9308:	466b      	mov	r3, sp
    930a:	3307      	adds	r3, #7
    930c:	781b      	ldrb	r3, [r3, #0]
    930e:	0011      	movs	r1, r2
    9310:	0018      	movs	r0, r3
    9312:	f7ff ffad 	bl	9270 <spi_send1>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:190 (discriminator 3)
    for (uint32_t i = 0; i < n; i++) {
    9316:	9b03      	ldr	r3, [sp, #12]
    9318:	3301      	adds	r3, #1
    931a:	9303      	str	r3, [sp, #12]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:190 (discriminator 1)
    931c:	466b      	mov	r3, sp
    931e:	3306      	adds	r3, #6
    9320:	781b      	ldrb	r3, [r3, #0]
    9322:	9a03      	ldr	r2, [sp, #12]
    9324:	429a      	cmp	r2, r3
    9326:	d3eb      	bcc.n	9300 <spi_sendN+0x1c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:195
    }

    // 发送转义字符0, 告诉接收方一串字符串发送完毕
    spi_send1(No, '\0');
    9328:	466b      	mov	r3, sp
    932a:	3307      	adds	r3, #7
    932c:	781b      	ldrb	r3, [r3, #0]
    932e:	2100      	movs	r1, #0
    9330:	0018      	movs	r0, r3
    9332:	f7ff ff9d 	bl	9270 <spi_send1>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:196
}
    9336:	46c0      	nop			; (mov r8, r8)
    9338:	b005      	add	sp, #20
    933a:	bd00      	pop	{pc}

0000933c <spi_receive1>:
spi_receive1():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:204
//功能说明：SPI接收一个字节的数据
//函数参数：No：模块号，可用参数可参见gec.h文件
//函数返回：接收到的数据。
//=====================================================================
uint8_t spi_receive1(uint8_t No)
{
    933c:	b084      	sub	sp, #16
    933e:	0002      	movs	r2, r0
    9340:	466b      	mov	r3, sp
    9342:	3307      	adds	r3, #7
    9344:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:205
    SPI_MemMapPtr baseadd = SPI_baseadd(No);
    9346:	466b      	mov	r3, sp
    9348:	3307      	adds	r3, #7
    934a:	781b      	ldrb	r3, [r3, #0]
    934c:	4a08      	ldr	r2, [pc, #32]	; (9370 <spi_receive1+0x34>)
    934e:	4694      	mov	ip, r2
    9350:	4463      	add	r3, ip
    9352:	031b      	lsls	r3, r3, #12
    9354:	9303      	str	r3, [sp, #12]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:210

    // 接收缓冲寄存器满标志（SPRF）
    // SPRF = 0, 接收缓冲寄存器无可用数据，SPRF = 1, 接收缓冲寄存器有可用数据
    // 读取接收缓冲寄存器之后，该标志会清0
    while (!(SPI_S_REG(baseadd) & SPI_S_SPRF_MASK)); // 当有可用数据时，跳出while循环
    9356:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:210 (discriminator 1)
    9358:	9b03      	ldr	r3, [sp, #12]
    935a:	781b      	ldrb	r3, [r3, #0]
    935c:	b2db      	uxtb	r3, r3
    935e:	b25b      	sxtb	r3, r3
    9360:	2b00      	cmp	r3, #0
    9362:	daf9      	bge.n	9358 <spi_receive1+0x1c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:212

    return SPI_DL_REG(baseadd);
    9364:	9b03      	ldr	r3, [sp, #12]
    9366:	799b      	ldrb	r3, [r3, #6]
    9368:	b2db      	uxtb	r3, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:213
}
    936a:	0018      	movs	r0, r3
    936c:	b004      	add	sp, #16
    936e:	4770      	bx	lr
    9370:	00040076 	.word	0x00040076

00009374 <spi_receiveN>:
spi_receiveN():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:223
//        n:    要发送的字节个数。范围为(1~255),
//       data[]:接收到的数据存放的首地址。
//函数返回：1：接收成功,其他情况：失败。
//=====================================================================

uint32_t spi_receiveN(uint8_t No, uint8_t* buff) {
    9374:	b510      	push	{r4, lr}
    9376:	b082      	sub	sp, #8
    9378:	0002      	movs	r2, r0
    937a:	9100      	str	r1, [sp, #0]
    937c:	466b      	mov	r3, sp
    937e:	3307      	adds	r3, #7
    9380:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:227
    // 设置一个静态变量，记录当前接收字符个数
    static uint32_t index = 0;

    buff[index++] = spi_receive1(No);
    9382:	4b12      	ldr	r3, [pc, #72]	; (93cc <spi_receiveN+0x58>)
    9384:	681b      	ldr	r3, [r3, #0]
    9386:	1c59      	adds	r1, r3, #1
    9388:	4a10      	ldr	r2, [pc, #64]	; (93cc <spi_receiveN+0x58>)
    938a:	6011      	str	r1, [r2, #0]
    938c:	9a00      	ldr	r2, [sp, #0]
    938e:	18d4      	adds	r4, r2, r3
    9390:	466b      	mov	r3, sp
    9392:	3307      	adds	r3, #7
    9394:	781b      	ldrb	r3, [r3, #0]
    9396:	0018      	movs	r0, r3
    9398:	f7ff ffd0 	bl	933c <spi_receive1>
    939c:	0003      	movs	r3, r0
    939e:	7023      	strb	r3, [r4, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:231

    // 当接收到转义字符'\0'时， 说明发送方已经发送完毕
    // 此时返回接收的字符串的长度，同时index归0, 方便接收下一个字符串
    if (buff[index - 1] == '\0') {
    93a0:	4b0a      	ldr	r3, [pc, #40]	; (93cc <spi_receiveN+0x58>)
    93a2:	681b      	ldr	r3, [r3, #0]
    93a4:	3b01      	subs	r3, #1
    93a6:	9a00      	ldr	r2, [sp, #0]
    93a8:	18d3      	adds	r3, r2, r3
    93aa:	781b      	ldrb	r3, [r3, #0]
    93ac:	2b00      	cmp	r3, #0
    93ae:	d108      	bne.n	93c2 <spi_receiveN+0x4e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:232
        index = 0;
    93b0:	4b06      	ldr	r3, [pc, #24]	; (93cc <spi_receiveN+0x58>)
    93b2:	2200      	movs	r2, #0
    93b4:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:233
        return strlen(buff);
    93b6:	9b00      	ldr	r3, [sp, #0]
    93b8:	0018      	movs	r0, r3
    93ba:	f7fe fe9b 	bl	80f4 <strlen>
    93be:	0003      	movs	r3, r0
    93c0:	e000      	b.n	93c4 <spi_receiveN+0x50>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:237
    }

    // 如果不是字符'\0', 说明还有数据，返回 0
    return 0;
    93c2:	2300      	movs	r3, #0
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:238
}
    93c4:	0018      	movs	r0, r3
    93c6:	b002      	add	sp, #8
    93c8:	bd10      	pop	{r4, pc}
    93ca:	46c0      	nop			; (mov r8, r8)
    93cc:	2000041c 	.word	0x2000041c

000093d0 <spi_enable_re_int>:
spi_enable_re_int():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:247
//功能说明：打开SPI接收中断。
//函数参数：No：模块号，可用参数可参见gec.h文件
//函数返回：无。
//=====================================================================
void spi_enable_re_int(uint8_t No)
{
    93d0:	b500      	push	{lr}
    93d2:	b083      	sub	sp, #12
    93d4:	0002      	movs	r2, r0
    93d6:	466b      	mov	r3, sp
    93d8:	3307      	adds	r3, #7
    93da:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:249
    //enable_irq (No+10);
    NVIC_EnableIRQ(No + 10);
    93dc:	466b      	mov	r3, sp
    93de:	3307      	adds	r3, #7
    93e0:	781b      	ldrb	r3, [r3, #0]
    93e2:	330a      	adds	r3, #10
    93e4:	b2db      	uxtb	r3, r3
    93e6:	b25b      	sxtb	r3, r3
    93e8:	0018      	movs	r0, r3
    93ea:	f7ff fd4d 	bl	8e88 <NVIC_EnableIRQ>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/spi.c:250
}
    93ee:	46c0      	nop			; (mov r8, r8)
    93f0:	b003      	add	sp, #12
    93f2:	bd00      	pop	{pc}

000093f4 <Vectors_Init>:
Vectors_Init():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:15
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
    93f4:	b580      	push	{r7, lr}
    93f6:	4f2e      	ldr	r7, [pc, #184]	; (94b0 <Vectors_Init+0xbc>)
    93f8:	44bd      	add	sp, r7
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:19
    //有用户程序，编译本段代码
    #if (GEC_USER_SECTOR_START!=0)   
    //（1）若Flash倒数2扇区的前24字节为空，则写入设备序列号及软件版本号初值
    if(flash_isempty(MCU_SECTOR_NUM-1,24))
    93fa:	2118      	movs	r1, #24
    93fc:	203f      	movs	r0, #63	; 0x3f
    93fe:	f7ff f815 	bl	842c <flash_isempty>
    9402:	1e03      	subs	r3, r0, #0
    9404:	d006      	beq.n	9414 <Vectors_Init+0x20>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:21
    {
        flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    9406:	4a2b      	ldr	r2, [pc, #172]	; (94b4 <Vectors_Init+0xc0>)
    9408:	23fc      	movs	r3, #252	; 0xfc
    940a:	021b      	lsls	r3, r3, #8
    940c:	2118      	movs	r1, #24
    940e:	0018      	movs	r0, r3
    9410:	f7fe ffb0 	bl	8374 <flash_write_physical>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:25
        MCU_FLASH_ADDR_START,24,(uint8_t *)"0123456789ABCDEF20200716");
    }
    //（2）继承BIOS的串口中断              
    void ** bios=MCU_FLASH_ADDR_START;   //向量表起始地址  
    9414:	2300      	movs	r3, #0
    9416:	aaff      	add	r2, sp, #1020	; 0x3fc
    9418:	3208      	adds	r2, #8
    941a:	6013      	str	r3, [r2, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:28
    uint32_t user[MCU_SECTORSIZE/4];     //向量表变量数组
    //读取USER中断向量表各中断处理程序地址赋给user数组
    flash_read_physical((uint8_t *)user,GEC_USER_SECTOR_START*
    941c:	2380      	movs	r3, #128	; 0x80
    941e:	00da      	lsls	r2, r3, #3
    9420:	23d0      	movs	r3, #208	; 0xd0
    9422:	01d9      	lsls	r1, r3, #7
    9424:	ab01      	add	r3, sp, #4
    9426:	0018      	movs	r0, r3
    9428:	f7fe ffec 	bl	8404 <flash_read_physical>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:32
    MCU_SECTORSIZE+MCU_FLASH_ADDR_START,MCU_SECTORSIZE);
    //判断USER中串口更新中断是否为BIOS对应中断地址。若是，则不作操作；否则修改
    //为BIOS对应中断地址
    if(user[BIOS_UART_UPDATE_IRQn] != (uint32_t)bios[BIOS_UART_UPDATE_IRQn])
    942c:	4b22      	ldr	r3, [pc, #136]	; (94b8 <Vectors_Init+0xc4>)
    942e:	aaff      	add	r2, sp, #1020	; 0x3fc
    9430:	320c      	adds	r2, #12
    9432:	4694      	mov	ip, r2
    9434:	4463      	add	r3, ip
    9436:	6f9a      	ldr	r2, [r3, #120]	; 0x78
    9438:	abff      	add	r3, sp, #1020	; 0x3fc
    943a:	3308      	adds	r3, #8
    943c:	681b      	ldr	r3, [r3, #0]
    943e:	3378      	adds	r3, #120	; 0x78
    9440:	681b      	ldr	r3, [r3, #0]
    9442:	429a      	cmp	r2, r3
    9444:	d022      	beq.n	948c <Vectors_Init+0x98>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:35
    {
        //改变User中断向量表中BIOS_UART中断向量
        flash_erase(GEC_USER_SECTOR_START);
    9446:	201a      	movs	r0, #26
    9448:	f7fe ff48 	bl	82dc <flash_erase>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:37
        //改USER中断向量表的BIOS程序写入串口的中断处理程序地址
        user[2]=(uint32_t)bios[2];     //【20200903】
    944c:	abff      	add	r3, sp, #1020	; 0x3fc
    944e:	3308      	adds	r3, #8
    9450:	681b      	ldr	r3, [r3, #0]
    9452:	3308      	adds	r3, #8
    9454:	681b      	ldr	r3, [r3, #0]
    9456:	001a      	movs	r2, r3
    9458:	4b17      	ldr	r3, [pc, #92]	; (94b8 <Vectors_Init+0xc4>)
    945a:	a9ff      	add	r1, sp, #1020	; 0x3fc
    945c:	310c      	adds	r1, #12
    945e:	468c      	mov	ip, r1
    9460:	4463      	add	r3, ip
    9462:	609a      	str	r2, [r3, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:38
        user[BIOS_UART_UPDATE_IRQn]=(uint32_t)bios[BIOS_UART_UPDATE_IRQn];
    9464:	abff      	add	r3, sp, #1020	; 0x3fc
    9466:	3308      	adds	r3, #8
    9468:	681b      	ldr	r3, [r3, #0]
    946a:	3378      	adds	r3, #120	; 0x78
    946c:	681b      	ldr	r3, [r3, #0]
    946e:	001a      	movs	r2, r3
    9470:	4b11      	ldr	r3, [pc, #68]	; (94b8 <Vectors_Init+0xc4>)
    9472:	a9ff      	add	r1, sp, #1020	; 0x3fc
    9474:	310c      	adds	r1, #12
    9476:	468c      	mov	ip, r1
    9478:	4463      	add	r3, ip
    947a:	679a      	str	r2, [r3, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:39
        flash_write_physical(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    947c:	aa01      	add	r2, sp, #4
    947e:	2380      	movs	r3, #128	; 0x80
    9480:	00d9      	lsls	r1, r3, #3
    9482:	23d0      	movs	r3, #208	; 0xd0
    9484:	01db      	lsls	r3, r3, #7
    9486:	0018      	movs	r0, r3
    9488:	f7fe ff74 	bl	8374 <flash_write_physical>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:44
        MCU_FLASH_ADDR_START,MCU_SECTORSIZE,(uint8_t *)user);
    }
    
    //（3）中断向量表指针重定向到USER程序的中断向量表
    SCB->VTOR = (uint32_t)(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    948c:	4b0b      	ldr	r3, [pc, #44]	; (94bc <Vectors_Init+0xc8>)
    948e:	22d0      	movs	r2, #208	; 0xd0
    9490:	01d2      	lsls	r2, r2, #7
    9492:	609a      	str	r2, [r3, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:47
    MCU_FLASH_ADDR_START);  
    //（4）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+
    9494:	4b0a      	ldr	r3, [pc, #40]	; (94c0 <Vectors_Init+0xcc>)
    9496:	22e0      	movs	r2, #224	; 0xe0
    9498:	0192      	lsls	r2, r2, #6
    949a:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:50
    GEC_COMPONENT_LST_START*MCU_SECTORSIZE); 
    //（5）printf提示             
    printf("  【User提示】：将进入User的main()执行...\r\n");
    949c:	4b09      	ldr	r3, [pc, #36]	; (94c4 <Vectors_Init+0xd0>)
    949e:	0018      	movs	r0, r3
    94a0:	f000 fe7a 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/gec.c:53
    
    #endif
}
    94a4:	46c0      	nop			; (mov r8, r8)
    94a6:	2381      	movs	r3, #129	; 0x81
    94a8:	00db      	lsls	r3, r3, #3
    94aa:	449d      	add	sp, r3
    94ac:	bd80      	pop	{r7, pc}
    94ae:	46c0      	nop			; (mov r8, r8)
    94b0:	fffffbf8 	.word	0xfffffbf8
    94b4:	0000a288 	.word	0x0000a288
    94b8:	fffffbfc 	.word	0xfffffbfc
    94bc:	e000ed00 	.word	0xe000ed00
    94c0:	20000624 	.word	0x20000624
    94c4:	0000a2a4 	.word	0x0000a2a4

000094c8 <uart_send1>:
uart_send1():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:173
//          ch:要发送的字节
//函数返回：函数执行状态：1=发送成功；0=发送失败。
//功能概要：串行发送1个字节
//======================================================================
uint8_t uart_send1(uint8_t uartNo, uint8_t ch)
{
    94c8:	b500      	push	{lr}
    94ca:	b087      	sub	sp, #28
    94cc:	0002      	movs	r2, r0
    94ce:	466b      	mov	r3, sp
    94d0:	3307      	adds	r3, #7
    94d2:	701a      	strb	r2, [r3, #0]
    94d4:	466b      	mov	r3, sp
    94d6:	3306      	adds	r3, #6
    94d8:	1c0a      	adds	r2, r1, #0
    94da:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:176
    uint32_t t;
    uint32_t i;
    UART0_MemMapPtr UART_2h_0=UART0_BASE_PTR; //获取UART0基地址
    94dc:	4b22      	ldr	r3, [pc, #136]	; (9568 <uart_send1+0xa0>)
    94de:	9304      	str	r3, [sp, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:177
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    94e0:	466b      	mov	r3, sp
    94e2:	3307      	adds	r3, #7
    94e4:	781b      	ldrb	r3, [r3, #0]
    94e6:	1e5a      	subs	r2, r3, #1
    94e8:	4b20      	ldr	r3, [pc, #128]	; (956c <uart_send1+0xa4>)
    94ea:	0092      	lsls	r2, r2, #2
    94ec:	58d3      	ldr	r3, [r2, r3]
    94ee:	9303      	str	r3, [sp, #12]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:185
    {
    	__asm (" nop ");
    }
    */
    //判断传入串口号参数是否有误，有误直接退出
    if(!uart_is_uartNo(uartNo))
    94f0:	466b      	mov	r3, sp
    94f2:	3307      	adds	r3, #7
    94f4:	781b      	ldrb	r3, [r3, #0]
    94f6:	0018      	movs	r0, r3
    94f8:	f000 f83c 	bl	9574 <uart_is_uartNo>
    94fc:	1e03      	subs	r3, r0, #0
    94fe:	d101      	bne.n	9504 <uart_send1+0x3c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:187
    {
        return 0;
    9500:	2300      	movs	r3, #0
    9502:	e02d      	b.n	9560 <uart_send1+0x98>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:190
    }

    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    9504:	2300      	movs	r3, #0
    9506:	9305      	str	r3, [sp, #20]
    9508:	e01f      	b.n	954a <uart_send1+0x82>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:192
    {
        if(0==uartNo)     //判断使用的哪个串口
    950a:	466b      	mov	r3, sp
    950c:	3307      	adds	r3, #7
    950e:	781b      	ldrb	r3, [r3, #0]
    9510:	2b00      	cmp	r3, #0
    9512:	d10b      	bne.n	952c <uart_send1+0x64>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:195
        {
        	//发送缓冲区为空则发送数据
            if ( UART0_S1_REG(UART_2h_0) & UART0_S1_TDRE_MASK )
    9514:	9b04      	ldr	r3, [sp, #16]
    9516:	791b      	ldrb	r3, [r3, #4]
    9518:	b2db      	uxtb	r3, r3
    951a:	b25b      	sxtb	r3, r3
    951c:	2b00      	cmp	r3, #0
    951e:	da11      	bge.n	9544 <uart_send1+0x7c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:197
            {
                UART0_D_REG(UART_2h_0) = ch;
    9520:	9b04      	ldr	r3, [sp, #16]
    9522:	466a      	mov	r2, sp
    9524:	3206      	adds	r2, #6
    9526:	7812      	ldrb	r2, [r2, #0]
    9528:	71da      	strb	r2, [r3, #7]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:198
                break;
    952a:	e012      	b.n	9552 <uart_send1+0x8a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:204
            }
        }
        else
        {
        	//发送缓冲区为空则发送数据
            if (UART_S1_REG(UART_2h_1_2) & UART_S1_TDRE_MASK )
    952c:	9b03      	ldr	r3, [sp, #12]
    952e:	791b      	ldrb	r3, [r3, #4]
    9530:	b2db      	uxtb	r3, r3
    9532:	b25b      	sxtb	r3, r3
    9534:	2b00      	cmp	r3, #0
    9536:	da05      	bge.n	9544 <uart_send1+0x7c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:206
            {
                UART_D_REG(UART_2h_1_2) = ch;
    9538:	9b03      	ldr	r3, [sp, #12]
    953a:	466a      	mov	r2, sp
    953c:	3206      	adds	r2, #6
    953e:	7812      	ldrb	r2, [r2, #0]
    9540:	71da      	strb	r2, [r3, #7]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:207
                break;
    9542:	e006      	b.n	9552 <uart_send1+0x8a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:190 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    9544:	9b05      	ldr	r3, [sp, #20]
    9546:	3301      	adds	r3, #1
    9548:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:190 (discriminator 1)
    954a:	9b05      	ldr	r3, [sp, #20]
    954c:	4a08      	ldr	r2, [pc, #32]	; (9570 <uart_send1+0xa8>)
    954e:	4293      	cmp	r3, r2
    9550:	d9db      	bls.n	950a <uart_send1+0x42>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:217
    for(i=0;i<5000;i++)
    {
    	__asm (" nop ");
    }
    */
    if (t >= 0xFBBB)
    9552:	9b05      	ldr	r3, [sp, #20]
    9554:	4a06      	ldr	r2, [pc, #24]	; (9570 <uart_send1+0xa8>)
    9556:	4293      	cmp	r3, r2
    9558:	d901      	bls.n	955e <uart_send1+0x96>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:218
        return 0; //发送超时，发送失败
    955a:	2300      	movs	r3, #0
    955c:	e000      	b.n	9560 <uart_send1+0x98>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:220
    else
        return 1; //成功发送
    955e:	2301      	movs	r3, #1
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:221
}
    9560:	0018      	movs	r0, r3
    9562:	b007      	add	sp, #28
    9564:	bd00      	pop	{pc}
    9566:	46c0      	nop			; (mov r8, r8)
    9568:	4006a000 	.word	0x4006a000
    956c:	0000a320 	.word	0x0000a320
    9570:	0000fbba 	.word	0x0000fbba

00009574 <uart_is_uartNo>:
uart_is_uartNo():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:538
//函数返回：1:串口号在合理范围内，0：串口号不合理
//参数说明：串口号uartNo  :UART_0、UART_1、UART_2
//功能概要：为程序健壮性而判断uartNo是否在串口数字范围内
//=====================================================================
uint8_t uart_is_uartNo(uint8_t uartNo)
{
    9574:	b082      	sub	sp, #8
    9576:	0002      	movs	r2, r0
    9578:	466b      	mov	r3, sp
    957a:	3307      	adds	r3, #7
    957c:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:539
    if(uartNo < UART_0 || uartNo > UART_2)
    957e:	466b      	mov	r3, sp
    9580:	3307      	adds	r3, #7
    9582:	781b      	ldrb	r3, [r3, #0]
    9584:	2b02      	cmp	r3, #2
    9586:	d901      	bls.n	958c <uart_is_uartNo+0x18>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:540
        return 0;
    9588:	2300      	movs	r3, #0
    958a:	e000      	b.n	958e <uart_is_uartNo+0x1a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:542
    else
        return 1;
    958c:	2301      	movs	r3, #1
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/uart.c:543
}
    958e:	0018      	movs	r0, r3
    9590:	b002      	add	sp, #8
    9592:	4770      	bx	lr

00009594 <PORTC_PORTD_IRQHandler>:
PORTC_PORTD_IRQHandler():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:9
//版本更新：20170801-20191020
//功能描述：提供中断处理程序编程框架
//=====================================================================
#include "includes.h"

void SUART_PortC_PortD_Handler(void) {
    9594:	b500      	push	{lr}
    9596:	b083      	sub	sp, #12
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:11

    uint32_t len = suart_receive(SUART_RX, gRecvBuff);
    9598:	4b09      	ldr	r3, [pc, #36]	; (95c0 <PORTC_PORTD_IRQHandler+0x2c>)
    959a:	4a0a      	ldr	r2, [pc, #40]	; (95c4 <PORTC_PORTD_IRQHandler+0x30>)
    959c:	0019      	movs	r1, r3
    959e:	0010      	movs	r0, r2
    95a0:	f7ff fa1e 	bl	89e0 <suart_receive>
    95a4:	0003      	movs	r3, r0
    95a6:	9301      	str	r3, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:12
    printf("gLenth: %d\n", len);
    95a8:	9a01      	ldr	r2, [sp, #4]
    95aa:	4b07      	ldr	r3, [pc, #28]	; (95c8 <PORTC_PORTD_IRQHandler+0x34>)
    95ac:	0011      	movs	r1, r2
    95ae:	0018      	movs	r0, r3
    95b0:	f000 fdf2 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:13
    gSendFlag = 1;
    95b4:	4b05      	ldr	r3, [pc, #20]	; (95cc <PORTC_PORTD_IRQHandler+0x38>)
    95b6:	2201      	movs	r2, #1
    95b8:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:15

}
    95ba:	46c0      	nop			; (mov r8, r8)
    95bc:	b003      	add	sp, #12
    95be:	bd00      	pop	{pc}
    95c0:	20000420 	.word	0x20000420
    95c4:	00000201 	.word	0x00000201
    95c8:	0000a2d0 	.word	0x0000a2d0
    95cc:	20000628 	.word	0x20000628

000095d0 <SPI0_IRQHandler>:
SPI0_IRQHandler():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:17

void SPI_Send_Handler(void) {
    95d0:	b500      	push	{lr}
    95d2:	b087      	sub	sp, #28
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:19
    uint8_t data[20];
    DISABLE_INTERRUPTS;     //关总中断
    95d4:	b672      	cpsid	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:22
    //------------------------------------------------------------------
    //（在此处增加功能）
    data[0] = spi_receive1(SPI_SEND);    //接收1个字节的数据
    95d6:	2000      	movs	r0, #0
    95d8:	f7ff feb0 	bl	933c <spi_receive1>
    95dc:	0003      	movs	r3, r0
    95de:	001a      	movs	r2, r3
    95e0:	ab01      	add	r3, sp, #4
    95e2:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:24

    suart_send(SUART_TX, data, 1);
    95e4:	a901      	add	r1, sp, #4
    95e6:	2380      	movs	r3, #128	; 0x80
    95e8:	009b      	lsls	r3, r3, #2
    95ea:	2201      	movs	r2, #1
    95ec:	0018      	movs	r0, r3
    95ee:	f7ff f8bb 	bl	8768 <suart_send>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:26
    //------------------------------------------------------------------
    ENABLE_INTERRUPTS;     //关总中断
    95f2:	b662      	cpsie	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:27
}
    95f4:	46c0      	nop			; (mov r8, r8)
    95f6:	b007      	add	sp, #28
    95f8:	bd00      	pop	{pc}
	...

000095fc <SPI1_IRQHandler>:
SPI1_IRQHandler():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:29

void SPI_Receive_Handler(void) {
    95fc:	b500      	push	{lr}
    95fe:	b083      	sub	sp, #12
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:30
    DISABLE_INTERRUPTS;     //关总中断
    9600:	b672      	cpsid	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:33
    //------------------------------------------------------------------
    //（在此处增加功能）
    uint32_t len = spi_receiveN(SPI_RECEIVE, gRecvBuff);
    9602:	4b0d      	ldr	r3, [pc, #52]	; (9638 <SPI1_IRQHandler+0x3c>)
    9604:	0019      	movs	r1, r3
    9606:	2001      	movs	r0, #1
    9608:	f7ff feb4 	bl	9374 <spi_receiveN>
    960c:	0003      	movs	r3, r0
    960e:	9301      	str	r3, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:35
    // 如果len的长度不为0,说明字符接收成功，长度为len
    if (len) {
    9610:	9b01      	ldr	r3, [sp, #4]
    9612:	2b00      	cmp	r3, #0
    9614:	d00c      	beq.n	9630 <SPI1_IRQHandler+0x34>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:36
        printf("%s\n", gRecvBuff);
    9616:	4a08      	ldr	r2, [pc, #32]	; (9638 <SPI1_IRQHandler+0x3c>)
    9618:	4b08      	ldr	r3, [pc, #32]	; (963c <SPI1_IRQHandler+0x40>)
    961a:	0011      	movs	r1, r2
    961c:	0018      	movs	r0, r3
    961e:	f000 fdbb 	bl	a198 <myprintf>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:37
        suart_send(SUART_TX, gRecvBuff, len);
    9622:	9a01      	ldr	r2, [sp, #4]
    9624:	4904      	ldr	r1, [pc, #16]	; (9638 <SPI1_IRQHandler+0x3c>)
    9626:	2380      	movs	r3, #128	; 0x80
    9628:	009b      	lsls	r3, r3, #2
    962a:	0018      	movs	r0, r3
    962c:	f7ff f89c 	bl	8768 <suart_send>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:41
    }

    //------------------------------------------------------------------
    ENABLE_INTERRUPTS;     //关总中断
    9630:	b662      	cpsie	i
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/isr.c:42
}
    9632:	46c0      	nop			; (mov r8, r8)
    9634:	b003      	add	sp, #12
    9636:	bd00      	pop	{pc}
    9638:	20000420 	.word	0x20000420
    963c:	0000a2dc 	.word	0x0000a2dc

00009640 <out_char>:
out_char():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:17
//参数说明：uartNo:串口号：UARTA、UARTB、UARTC、UART_DEBUG
//       data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================

void out_char(char data) {
    9640:	b500      	push	{lr}
    9642:	b083      	sub	sp, #12
    9644:	0002      	movs	r2, r0
    9646:	466b      	mov	r3, sp
    9648:	3307      	adds	r3, #7
    964a:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:19
	// suart_send_char(SUART_TX_PORT, SUART_TX_PIN, data);
	uart_send1(UART_printf, data);
    964c:	466b      	mov	r3, sp
    964e:	3307      	adds	r3, #7
    9650:	781b      	ldrb	r3, [r3, #0]
    9652:	0019      	movs	r1, r3
    9654:	2002      	movs	r0, #2
    9656:	f7ff ff37 	bl	94c8 <uart_send1>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:20
}
    965a:	46c0      	nop			; (mov r8, r8)
    965c:	b003      	add	sp, #12
    965e:	bd00      	pop	{pc}

00009660 <printk_putc>:
printk_putc():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:27
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int* count, PRINTK_INFO* info)
{
    9660:	b500      	push	{lr}
    9662:	b085      	sub	sp, #20
    9664:	9003      	str	r0, [sp, #12]
    9666:	9102      	str	r1, [sp, #8]
    9668:	9201      	str	r2, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:28
	switch (info->dest) {
    966a:	9b01      	ldr	r3, [sp, #4]
    966c:	681b      	ldr	r3, [r3, #0]
    966e:	2b01      	cmp	r3, #1
    9670:	d002      	beq.n	9678 <printk_putc+0x18>
    9672:	2b02      	cmp	r3, #2
    9674:	d007      	beq.n	9686 <printk_putc+0x26>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:37
	case DEST_STRING:
		*(info->loc) = (unsigned char)c;
		++(info->loc);
		break;
	default:
		break;
    9676:	e011      	b.n	969c <printk_putc+0x3c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:30
		info->func((char)c);
    9678:	9b01      	ldr	r3, [sp, #4]
    967a:	685b      	ldr	r3, [r3, #4]
    967c:	9a03      	ldr	r2, [sp, #12]
    967e:	b252      	sxtb	r2, r2
    9680:	0010      	movs	r0, r2
    9682:	4798      	blx	r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:31
		break;
    9684:	e00a      	b.n	969c <printk_putc+0x3c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:33
		*(info->loc) = (unsigned char)c;
    9686:	9b01      	ldr	r3, [sp, #4]
    9688:	689b      	ldr	r3, [r3, #8]
    968a:	9a03      	ldr	r2, [sp, #12]
    968c:	b252      	sxtb	r2, r2
    968e:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:34
		++(info->loc);
    9690:	9b01      	ldr	r3, [sp, #4]
    9692:	689b      	ldr	r3, [r3, #8]
    9694:	1c5a      	adds	r2, r3, #1
    9696:	9b01      	ldr	r3, [sp, #4]
    9698:	609a      	str	r2, [r3, #8]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:35
		break;
    969a:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:39
	}
	*count += 1;
    969c:	9b02      	ldr	r3, [sp, #8]
    969e:	681b      	ldr	r3, [r3, #0]
    96a0:	1c5a      	adds	r2, r3, #1
    96a2:	9b02      	ldr	r3, [sp, #8]
    96a4:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:40
}
    96a6:	46c0      	nop			; (mov r8, r8)
    96a8:	b005      	add	sp, #20
    96aa:	bd00      	pop	{pc}

000096ac <printk_mkfloatstr>:
printk_mkfloatstr():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:48
//参数说明： *f:浮点型数据：float型数据
//       c[]:字符串数组：转化后的到的字符串数组
//函数返回：无
//======================================================================
int printk_mkfloatstr(double* f, char c[], int precision_width)
{
    96ac:	b530      	push	{r4, r5, lr}
    96ae:	b0a7      	sub	sp, #156	; 0x9c
    96b0:	9003      	str	r0, [sp, #12]
    96b2:	9102      	str	r1, [sp, #8]
    96b4:	9201      	str	r2, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:49
	uint32_t p, i, j, k, a[5] = { 0 }, b[19] = { 0 };
    96b6:	ab17      	add	r3, sp, #92	; 0x5c
    96b8:	0018      	movs	r0, r3
    96ba:	2314      	movs	r3, #20
    96bc:	001a      	movs	r2, r3
    96be:	2100      	movs	r1, #0
    96c0:	f000 fd91 	bl	a1e6 <memset>
    96c4:	ab04      	add	r3, sp, #16
    96c6:	0018      	movs	r0, r3
    96c8:	234c      	movs	r3, #76	; 0x4c
    96ca:	001a      	movs	r2, r3
    96cc:	2100      	movs	r1, #0
    96ce:	f000 fd8a 	bl	a1e6 <memset>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:52
	uint64_t q;
	double tempf;
	p = 0;
    96d2:	2300      	movs	r3, #0
    96d4:	9325      	str	r3, [sp, #148]	; 0x94
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:53
	q = 0;
    96d6:	2300      	movs	r3, #0
    96d8:	2400      	movs	r4, #0
    96da:	9320      	str	r3, [sp, #128]	; 0x80
    96dc:	9421      	str	r4, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:56
	//float m;
	double m;
	p = (uint32_t)*f;//整数部分
    96de:	9b03      	ldr	r3, [sp, #12]
    96e0:	685c      	ldr	r4, [r3, #4]
    96e2:	681b      	ldr	r3, [r3, #0]
    96e4:	0018      	movs	r0, r3
    96e6:	0021      	movs	r1, r4
    96e8:	f7fd fcb2 	bl	7050 <__aeabi_d2uiz>
    96ec:	0003      	movs	r3, r0
    96ee:	9325      	str	r3, [sp, #148]	; 0x94
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:57
	tempf = (*f - p);
    96f0:	9b03      	ldr	r3, [sp, #12]
    96f2:	681c      	ldr	r4, [r3, #0]
    96f4:	685d      	ldr	r5, [r3, #4]
    96f6:	9825      	ldr	r0, [sp, #148]	; 0x94
    96f8:	f7fe fca0 	bl	803c <__aeabi_ui2d>
    96fc:	0002      	movs	r2, r0
    96fe:	000b      	movs	r3, r1
    9700:	0020      	movs	r0, r4
    9702:	0029      	movs	r1, r5
    9704:	f7fe f91c 	bl	7940 <__aeabi_dsub>
    9708:	0003      	movs	r3, r0
    970a:	000c      	movs	r4, r1
    970c:	931e      	str	r3, [sp, #120]	; 0x78
    970e:	941f      	str	r4, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:58
	if (precision_width == 0)
    9710:	9b01      	ldr	r3, [sp, #4]
    9712:	2b00      	cmp	r3, #0
    9714:	d128      	bne.n	9768 <printk_mkfloatstr+0xbc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:59
		q = (*f - p) * 100000000000000000;//小数部分
    9716:	9b03      	ldr	r3, [sp, #12]
    9718:	681c      	ldr	r4, [r3, #0]
    971a:	685d      	ldr	r5, [r3, #4]
    971c:	9825      	ldr	r0, [sp, #148]	; 0x94
    971e:	f7fe fc8d 	bl	803c <__aeabi_ui2d>
    9722:	0002      	movs	r2, r0
    9724:	000b      	movs	r3, r1
    9726:	0020      	movs	r0, r4
    9728:	0029      	movs	r1, r5
    972a:	f7fe f909 	bl	7940 <__aeabi_dsub>
    972e:	0003      	movs	r3, r0
    9730:	000c      	movs	r4, r1
    9732:	0018      	movs	r0, r3
    9734:	0021      	movs	r1, r4
    9736:	4a78      	ldr	r2, [pc, #480]	; (9918 <printk_mkfloatstr+0x26c>)
    9738:	4b78      	ldr	r3, [pc, #480]	; (991c <printk_mkfloatstr+0x270>)
    973a:	f7fd fe8f 	bl	745c <__aeabi_dmul>
    973e:	0003      	movs	r3, r0
    9740:	000c      	movs	r4, r1
    9742:	0018      	movs	r0, r3
    9744:	0021      	movs	r1, r4
    9746:	f7fd fca1 	bl	708c <__aeabi_d2ulz>
    974a:	0003      	movs	r3, r0
    974c:	000c      	movs	r4, r1
    974e:	9320      	str	r3, [sp, #128]	; 0x80
    9750:	9421      	str	r4, [sp, #132]	; 0x84
    9752:	e016      	b.n	9782 <printk_mkfloatstr+0xd6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:63
	else
	{
		while (precision_width--)
			tempf *= 10;
    9754:	2200      	movs	r2, #0
    9756:	4b72      	ldr	r3, [pc, #456]	; (9920 <printk_mkfloatstr+0x274>)
    9758:	981e      	ldr	r0, [sp, #120]	; 0x78
    975a:	991f      	ldr	r1, [sp, #124]	; 0x7c
    975c:	f7fd fe7e 	bl	745c <__aeabi_dmul>
    9760:	0003      	movs	r3, r0
    9762:	000c      	movs	r4, r1
    9764:	931e      	str	r3, [sp, #120]	; 0x78
    9766:	941f      	str	r4, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:62
		while (precision_width--)
    9768:	9b01      	ldr	r3, [sp, #4]
    976a:	1e5a      	subs	r2, r3, #1
    976c:	9201      	str	r2, [sp, #4]
    976e:	2b00      	cmp	r3, #0
    9770:	d1f0      	bne.n	9754 <printk_mkfloatstr+0xa8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:64
		q = tempf;
    9772:	981e      	ldr	r0, [sp, #120]	; 0x78
    9774:	991f      	ldr	r1, [sp, #124]	; 0x7c
    9776:	f7fd fc89 	bl	708c <__aeabi_d2ulz>
    977a:	0003      	movs	r3, r0
    977c:	000c      	movs	r4, r1
    977e:	9320      	str	r3, [sp, #128]	; 0x80
    9780:	9421      	str	r4, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:66
	}
	m = *f - p;
    9782:	9b03      	ldr	r3, [sp, #12]
    9784:	681c      	ldr	r4, [r3, #0]
    9786:	685d      	ldr	r5, [r3, #4]
    9788:	9825      	ldr	r0, [sp, #148]	; 0x94
    978a:	f7fe fc57 	bl	803c <__aeabi_ui2d>
    978e:	0002      	movs	r2, r0
    9790:	000b      	movs	r3, r1
    9792:	0020      	movs	r0, r4
    9794:	0029      	movs	r1, r5
    9796:	f7fe f8d3 	bl	7940 <__aeabi_dsub>
    979a:	0003      	movs	r3, r0
    979c:	000c      	movs	r4, r1
    979e:	931c      	str	r3, [sp, #112]	; 0x70
    97a0:	941d      	str	r4, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:67
	k = 0;
    97a2:	2300      	movs	r3, #0
    97a4:	9322      	str	r3, [sp, #136]	; 0x88
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:68
	while (m < 1)
    97a6:	e00c      	b.n	97c2 <printk_mkfloatstr+0x116>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:70
	{
		m = m * 10;
    97a8:	2200      	movs	r2, #0
    97aa:	4b5d      	ldr	r3, [pc, #372]	; (9920 <printk_mkfloatstr+0x274>)
    97ac:	981c      	ldr	r0, [sp, #112]	; 0x70
    97ae:	991d      	ldr	r1, [sp, #116]	; 0x74
    97b0:	f7fd fe54 	bl	745c <__aeabi_dmul>
    97b4:	0003      	movs	r3, r0
    97b6:	000c      	movs	r4, r1
    97b8:	931c      	str	r3, [sp, #112]	; 0x70
    97ba:	941d      	str	r4, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:71
		k++;
    97bc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    97be:	3301      	adds	r3, #1
    97c0:	9322      	str	r3, [sp, #136]	; 0x88
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:68
	while (m < 1)
    97c2:	2200      	movs	r2, #0
    97c4:	4b57      	ldr	r3, [pc, #348]	; (9924 <printk_mkfloatstr+0x278>)
    97c6:	981c      	ldr	r0, [sp, #112]	; 0x70
    97c8:	991d      	ldr	r1, [sp, #116]	; 0x74
    97ca:	f7fd fbf9 	bl	6fc0 <__aeabi_dcmplt>
    97ce:	1e03      	subs	r3, r0, #0
    97d0:	d1ea      	bne.n	97a8 <printk_mkfloatstr+0xfc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:73
	};
	k--;          //记录小数点后到第一位不为零的小数之前 有多少个0.
    97d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    97d4:	3b01      	subs	r3, #1
    97d6:	9322      	str	r3, [sp, #136]	; 0x88
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:75

	i = 0;
    97d8:	2300      	movs	r3, #0
    97da:	9324      	str	r3, [sp, #144]	; 0x90
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:76
	if (0 == p)     //整数部分为0
    97dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
    97de:	2b00      	cmp	r3, #0
    97e0:	d107      	bne.n	97f2 <printk_mkfloatstr+0x146>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:77
		c[i++] = '0';
    97e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
    97e4:	1c5a      	adds	r2, r3, #1
    97e6:	9224      	str	r2, [sp, #144]	; 0x90
    97e8:	9a02      	ldr	r2, [sp, #8]
    97ea:	18d3      	adds	r3, r2, r3
    97ec:	2230      	movs	r2, #48	; 0x30
    97ee:	701a      	strb	r2, [r3, #0]
    97f0:	e02f      	b.n	9852 <printk_mkfloatstr+0x1a6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:80
	else        //整数部分不为0
	{
		j = 0;
    97f2:	2300      	movs	r3, #0
    97f4:	9323      	str	r3, [sp, #140]	; 0x8c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:81
		while (p != 0)//倒序的数字
    97f6:	e013      	b.n	9820 <printk_mkfloatstr+0x174>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:83
		{
			a[j++] = p % 10;
    97f8:	9c23      	ldr	r4, [sp, #140]	; 0x8c
    97fa:	1c63      	adds	r3, r4, #1
    97fc:	9323      	str	r3, [sp, #140]	; 0x8c
    97fe:	9b25      	ldr	r3, [sp, #148]	; 0x94
    9800:	210a      	movs	r1, #10
    9802:	0018      	movs	r0, r3
    9804:	f7fd fad6 	bl	6db4 <__aeabi_uidivmod>
    9808:	000b      	movs	r3, r1
    980a:	0019      	movs	r1, r3
    980c:	ab17      	add	r3, sp, #92	; 0x5c
    980e:	00a2      	lsls	r2, r4, #2
    9810:	50d1      	str	r1, [r2, r3]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:84
			p /= 10;
    9812:	9b25      	ldr	r3, [sp, #148]	; 0x94
    9814:	210a      	movs	r1, #10
    9816:	0018      	movs	r0, r3
    9818:	f7fd fa46 	bl	6ca8 <__udivsi3>
    981c:	0003      	movs	r3, r0
    981e:	9325      	str	r3, [sp, #148]	; 0x94
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:81
		while (p != 0)//倒序的数字
    9820:	9b25      	ldr	r3, [sp, #148]	; 0x94
    9822:	2b00      	cmp	r3, #0
    9824:	d1e8      	bne.n	97f8 <printk_mkfloatstr+0x14c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:86
		}
		while (j > 0)//将倒序数字转为正序，并转换为对应的字符形式
    9826:	e011      	b.n	984c <printk_mkfloatstr+0x1a0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:88
		{
			c[i++] = a[j - 1] + '0';
    9828:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    982a:	1e5a      	subs	r2, r3, #1
    982c:	ab17      	add	r3, sp, #92	; 0x5c
    982e:	0092      	lsls	r2, r2, #2
    9830:	58d3      	ldr	r3, [r2, r3]
    9832:	b2db      	uxtb	r3, r3
    9834:	3330      	adds	r3, #48	; 0x30
    9836:	b2d9      	uxtb	r1, r3
    9838:	9b24      	ldr	r3, [sp, #144]	; 0x90
    983a:	1c5a      	adds	r2, r3, #1
    983c:	9224      	str	r2, [sp, #144]	; 0x90
    983e:	9a02      	ldr	r2, [sp, #8]
    9840:	18d3      	adds	r3, r2, r3
    9842:	b24a      	sxtb	r2, r1
    9844:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:89
			--j;
    9846:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    9848:	3b01      	subs	r3, #1
    984a:	9323      	str	r3, [sp, #140]	; 0x8c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:86
		while (j > 0)//将倒序数字转为正序，并转换为对应的字符形式
    984c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    984e:	2b00      	cmp	r3, #0
    9850:	d1ea      	bne.n	9828 <printk_mkfloatstr+0x17c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:92
		}
	}
	c[i++] = '.';     //小数点
    9852:	9b24      	ldr	r3, [sp, #144]	; 0x90
    9854:	1c5a      	adds	r2, r3, #1
    9856:	9224      	str	r2, [sp, #144]	; 0x90
    9858:	9a02      	ldr	r2, [sp, #8]
    985a:	18d3      	adds	r3, r2, r3
    985c:	222e      	movs	r2, #46	; 0x2e
    985e:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:93
	if (0 == q)        //小数部分为0
    9860:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9862:	9a21      	ldr	r2, [sp, #132]	; 0x84
    9864:	4313      	orrs	r3, r2
    9866:	d107      	bne.n	9878 <printk_mkfloatstr+0x1cc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:94
		c[i++] = '0';
    9868:	9b24      	ldr	r3, [sp, #144]	; 0x90
    986a:	1c5a      	adds	r2, r3, #1
    986c:	9224      	str	r2, [sp, #144]	; 0x90
    986e:	9a02      	ldr	r2, [sp, #8]
    9870:	18d3      	adds	r3, r2, r3
    9872:	2230      	movs	r2, #48	; 0x30
    9874:	701a      	strb	r2, [r3, #0]
    9876:	e045      	b.n	9904 <printk_mkfloatstr+0x258>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:97
	else           //小数部分不为0
	{
		j = 0;
    9878:	2300      	movs	r3, #0
    987a:	9323      	str	r3, [sp, #140]	; 0x8c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:99

		while (q != 0)//倒序的数字
    987c:	e01a      	b.n	98b4 <printk_mkfloatstr+0x208>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:101
		{
			b[j++] = q % 10;
    987e:	9820      	ldr	r0, [sp, #128]	; 0x80
    9880:	9921      	ldr	r1, [sp, #132]	; 0x84
    9882:	220a      	movs	r2, #10
    9884:	2300      	movs	r3, #0
    9886:	f7fd fbc3 	bl	7010 <__aeabi_uldivmod>
    988a:	001c      	movs	r4, r3
    988c:	0013      	movs	r3, r2
    988e:	0018      	movs	r0, r3
    9890:	0021      	movs	r1, r4
    9892:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    9894:	1c5a      	adds	r2, r3, #1
    9896:	9223      	str	r2, [sp, #140]	; 0x8c
    9898:	0001      	movs	r1, r0
    989a:	aa04      	add	r2, sp, #16
    989c:	009b      	lsls	r3, r3, #2
    989e:	5099      	str	r1, [r3, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:102
			q /= 10;
    98a0:	9820      	ldr	r0, [sp, #128]	; 0x80
    98a2:	9921      	ldr	r1, [sp, #132]	; 0x84
    98a4:	220a      	movs	r2, #10
    98a6:	2300      	movs	r3, #0
    98a8:	f7fd fbb2 	bl	7010 <__aeabi_uldivmod>
    98ac:	0003      	movs	r3, r0
    98ae:	000c      	movs	r4, r1
    98b0:	9320      	str	r3, [sp, #128]	; 0x80
    98b2:	9421      	str	r4, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:99
		while (q != 0)//倒序的数字
    98b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
    98b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
    98b8:	4313      	orrs	r3, r2
    98ba:	d1e0      	bne.n	987e <printk_mkfloatstr+0x1d2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:104
		}
		while (k != 0)
    98bc:	e009      	b.n	98d2 <printk_mkfloatstr+0x226>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:106
		{
			b[j++] = 0;
    98be:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    98c0:	1c5a      	adds	r2, r3, #1
    98c2:	9223      	str	r2, [sp, #140]	; 0x8c
    98c4:	aa04      	add	r2, sp, #16
    98c6:	009b      	lsls	r3, r3, #2
    98c8:	2100      	movs	r1, #0
    98ca:	5099      	str	r1, [r3, r2]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:107
			k--;
    98cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    98ce:	3b01      	subs	r3, #1
    98d0:	9322      	str	r3, [sp, #136]	; 0x88
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:104
		while (k != 0)
    98d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    98d4:	2b00      	cmp	r3, #0
    98d6:	d1f2      	bne.n	98be <printk_mkfloatstr+0x212>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:109
		}
		while (j > 0)//将倒序数字转为正序，并转换为对应的字符形式
    98d8:	e011      	b.n	98fe <printk_mkfloatstr+0x252>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:111
		{
			c[i++] = b[j - 1] + '0';
    98da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    98dc:	1e5a      	subs	r2, r3, #1
    98de:	ab04      	add	r3, sp, #16
    98e0:	0092      	lsls	r2, r2, #2
    98e2:	58d3      	ldr	r3, [r2, r3]
    98e4:	b2db      	uxtb	r3, r3
    98e6:	3330      	adds	r3, #48	; 0x30
    98e8:	b2d9      	uxtb	r1, r3
    98ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
    98ec:	1c5a      	adds	r2, r3, #1
    98ee:	9224      	str	r2, [sp, #144]	; 0x90
    98f0:	9a02      	ldr	r2, [sp, #8]
    98f2:	18d3      	adds	r3, r2, r3
    98f4:	b24a      	sxtb	r2, r1
    98f6:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:112
			--j;
    98f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    98fa:	3b01      	subs	r3, #1
    98fc:	9323      	str	r3, [sp, #140]	; 0x8c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:109
		while (j > 0)//将倒序数字转为正序，并转换为对应的字符形式
    98fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    9900:	2b00      	cmp	r3, #0
    9902:	d1ea      	bne.n	98da <printk_mkfloatstr+0x22e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:115
		}
	}
	c[i] = '\0';
    9904:	9a02      	ldr	r2, [sp, #8]
    9906:	9b24      	ldr	r3, [sp, #144]	; 0x90
    9908:	18d3      	adds	r3, r2, r3
    990a:	2200      	movs	r2, #0
    990c:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:116
	return i;
    990e:	9b24      	ldr	r3, [sp, #144]	; 0x90
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:117
}
    9910:	0018      	movs	r0, r3
    9912:	b027      	add	sp, #156	; 0x9c
    9914:	bd30      	pop	{r4, r5, pc}
    9916:	46c0      	nop			; (mov r8, r8)
    9918:	85d8a000 	.word	0x85d8a000
    991c:	43763457 	.word	0x43763457
    9920:	40240000 	.word	0x40240000
    9924:	3ff00000 	.word	0x3ff00000

00009928 <printk_mknumstr>:
printk_mknumstr():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:127
//       neg:有无符号:判断数据时有符号还是无符号整形
//       radix:格式选择:确定输出格式例如：十进制或十六进制...
//函数返回：无
//======================================================================
static int printk_mknumstr(char* numstr, void* nump, int neg, int radix)
{
    9928:	b500      	push	{lr}
    992a:	b08d      	sub	sp, #52	; 0x34
    992c:	9003      	str	r0, [sp, #12]
    992e:	9102      	str	r1, [sp, #8]
    9930:	9201      	str	r2, [sp, #4]
    9932:	9300      	str	r3, [sp, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:133
	int a, b, c;
	unsigned int ua, ub, uc;
	int nlen;
	char* nstrp;

	nlen = 0;
    9934:	2300      	movs	r3, #0
    9936:	9307      	str	r3, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:134
	nstrp = numstr;
    9938:	9b03      	ldr	r3, [sp, #12]
    993a:	9306      	str	r3, [sp, #24]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:135
	*nstrp++ = '\0';
    993c:	9b06      	ldr	r3, [sp, #24]
    993e:	1c5a      	adds	r2, r3, #1
    9940:	9206      	str	r2, [sp, #24]
    9942:	2200      	movs	r2, #0
    9944:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:137

	if (neg) {
    9946:	9b01      	ldr	r3, [sp, #4]
    9948:	2b00      	cmp	r3, #0
    994a:	d032      	beq.n	99b2 <printk_mknumstr+0x8a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:138
		a = *(int*)nump;
    994c:	9b02      	ldr	r3, [sp, #8]
    994e:	681b      	ldr	r3, [r3, #0]
    9950:	930b      	str	r3, [sp, #44]	; 0x2c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:139
		if (a == 0) {
    9952:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9954:	2b00      	cmp	r3, #0
    9956:	d128      	bne.n	99aa <printk_mknumstr+0x82>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:140
			*nstrp = '0';
    9958:	9b06      	ldr	r3, [sp, #24]
    995a:	2230      	movs	r2, #48	; 0x30
    995c:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:141
			++nlen;
    995e:	9b07      	ldr	r3, [sp, #28]
    9960:	3301      	adds	r3, #1
    9962:	9307      	str	r3, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:142
			goto done;
    9964:	e058      	b.n	9a18 <printk_mknumstr+0xf0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:145
		}
		while (a != 0) {
			b = (int)a / (int)radix;
    9966:	9900      	ldr	r1, [sp, #0]
    9968:	980b      	ldr	r0, [sp, #44]	; 0x2c
    996a:	f7fd fa27 	bl	6dbc <__divsi3>
    996e:	0003      	movs	r3, r0
    9970:	9304      	str	r3, [sp, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:146
			c = (int)a - ((int)b * (int)radix);
    9972:	9b04      	ldr	r3, [sp, #16]
    9974:	9a00      	ldr	r2, [sp, #0]
    9976:	4353      	muls	r3, r2
    9978:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    997a:	1ad3      	subs	r3, r2, r3
    997c:	930a      	str	r3, [sp, #40]	; 0x28
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:147
			if (c < 0) {
    997e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9980:	2b00      	cmp	r3, #0
    9982:	da04      	bge.n	998e <printk_mknumstr+0x66>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:148
				c = ~c + 1 + '0';
    9984:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9986:	2230      	movs	r2, #48	; 0x30
    9988:	1ad3      	subs	r3, r2, r3
    998a:	930a      	str	r3, [sp, #40]	; 0x28
    998c:	e002      	b.n	9994 <printk_mknumstr+0x6c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:151
			}
			else {
				c = c + '0';
    998e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9990:	3330      	adds	r3, #48	; 0x30
    9992:	930a      	str	r3, [sp, #40]	; 0x28
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:153
			}
			a = b;
    9994:	9b04      	ldr	r3, [sp, #16]
    9996:	930b      	str	r3, [sp, #44]	; 0x2c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:154
			*nstrp++ = (char)c;
    9998:	9b06      	ldr	r3, [sp, #24]
    999a:	1c5a      	adds	r2, r3, #1
    999c:	9206      	str	r2, [sp, #24]
    999e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    99a0:	b252      	sxtb	r2, r2
    99a2:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:155
			++nlen;
    99a4:	9b07      	ldr	r3, [sp, #28]
    99a6:	3301      	adds	r3, #1
    99a8:	9307      	str	r3, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:144
		while (a != 0) {
    99aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    99ac:	2b00      	cmp	r3, #0
    99ae:	d1da      	bne.n	9966 <printk_mknumstr+0x3e>
    99b0:	e032      	b.n	9a18 <printk_mknumstr+0xf0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:159
		}
	}
	else {
		ua = *(unsigned int*)nump;
    99b2:	9b02      	ldr	r3, [sp, #8]
    99b4:	681b      	ldr	r3, [r3, #0]
    99b6:	9309      	str	r3, [sp, #36]	; 0x24
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:160
		if (ua == 0) {
    99b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    99ba:	2b00      	cmp	r3, #0
    99bc:	d128      	bne.n	9a10 <printk_mknumstr+0xe8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:161
			*nstrp = '0';
    99be:	9b06      	ldr	r3, [sp, #24]
    99c0:	2230      	movs	r2, #48	; 0x30
    99c2:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:162
			++nlen;
    99c4:	9b07      	ldr	r3, [sp, #28]
    99c6:	3301      	adds	r3, #1
    99c8:	9307      	str	r3, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:163
			goto done;
    99ca:	e025      	b.n	9a18 <printk_mknumstr+0xf0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:166
		}
		while (ua != 0) {
			ub = (unsigned int)ua / (unsigned int)radix;
    99cc:	9b00      	ldr	r3, [sp, #0]
    99ce:	0019      	movs	r1, r3
    99d0:	9809      	ldr	r0, [sp, #36]	; 0x24
    99d2:	f7fd f969 	bl	6ca8 <__udivsi3>
    99d6:	0003      	movs	r3, r0
    99d8:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:167
			uc = (unsigned int)ua - ((unsigned int)ub * (unsigned int)radix);
    99da:	9b00      	ldr	r3, [sp, #0]
    99dc:	9a05      	ldr	r2, [sp, #20]
    99de:	4353      	muls	r3, r2
    99e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    99e2:	1ad3      	subs	r3, r2, r3
    99e4:	9308      	str	r3, [sp, #32]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:168
			if (uc < 10) {
    99e6:	9b08      	ldr	r3, [sp, #32]
    99e8:	2b09      	cmp	r3, #9
    99ea:	d803      	bhi.n	99f4 <printk_mknumstr+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:169
				uc = uc + '0';
    99ec:	9b08      	ldr	r3, [sp, #32]
    99ee:	3330      	adds	r3, #48	; 0x30
    99f0:	9308      	str	r3, [sp, #32]
    99f2:	e002      	b.n	99fa <printk_mknumstr+0xd2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:172
			}
			else {
				uc = uc - 10 + 'A';
    99f4:	9b08      	ldr	r3, [sp, #32]
    99f6:	3337      	adds	r3, #55	; 0x37
    99f8:	9308      	str	r3, [sp, #32]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:174
			}
			ua = ub;
    99fa:	9b05      	ldr	r3, [sp, #20]
    99fc:	9309      	str	r3, [sp, #36]	; 0x24
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:175
			*nstrp++ = (char)uc;
    99fe:	9b06      	ldr	r3, [sp, #24]
    9a00:	1c5a      	adds	r2, r3, #1
    9a02:	9206      	str	r2, [sp, #24]
    9a04:	9a08      	ldr	r2, [sp, #32]
    9a06:	b252      	sxtb	r2, r2
    9a08:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:176
			++nlen;
    9a0a:	9b07      	ldr	r3, [sp, #28]
    9a0c:	3301      	adds	r3, #1
    9a0e:	9307      	str	r3, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:165
		while (ua != 0) {
    9a10:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9a12:	2b00      	cmp	r3, #0
    9a14:	d1da      	bne.n	99cc <printk_mknumstr+0xa4>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:179
		}
	}
	done: return nlen;
    9a16:	46c0      	nop			; (mov r8, r8)
    9a18:	9b07      	ldr	r3, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:180
}
    9a1a:	0018      	movs	r0, r3
    9a1c:	b00d      	add	sp, #52	; 0x34
    9a1e:	bd00      	pop	{pc}

00009a20 <printk_pad_zero>:
printk_pad_zero():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:183
/********************************************************************/
static void printk_pad_zero(int curlen, int field_width, int* count,
	PRINTK_INFO* info) {
    9a20:	b500      	push	{lr}
    9a22:	b087      	sub	sp, #28
    9a24:	9003      	str	r0, [sp, #12]
    9a26:	9102      	str	r1, [sp, #8]
    9a28:	9201      	str	r2, [sp, #4]
    9a2a:	9300      	str	r3, [sp, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:186
	int i;

	for (i = curlen; i < field_width; i++) {
    9a2c:	9b03      	ldr	r3, [sp, #12]
    9a2e:	9305      	str	r3, [sp, #20]
    9a30:	e008      	b.n	9a44 <printk_pad_zero+0x24>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:187 (discriminator 3)
		printk_putc('0', count, info);
    9a32:	9a00      	ldr	r2, [sp, #0]
    9a34:	9b01      	ldr	r3, [sp, #4]
    9a36:	0019      	movs	r1, r3
    9a38:	2030      	movs	r0, #48	; 0x30
    9a3a:	f7ff fe11 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:186 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    9a3e:	9b05      	ldr	r3, [sp, #20]
    9a40:	3301      	adds	r3, #1
    9a42:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:186 (discriminator 1)
    9a44:	9a05      	ldr	r2, [sp, #20]
    9a46:	9b02      	ldr	r3, [sp, #8]
    9a48:	429a      	cmp	r2, r3
    9a4a:	dbf2      	blt.n	9a32 <printk_pad_zero+0x12>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:189
	}
}
    9a4c:	46c0      	nop			; (mov r8, r8)
    9a4e:	b007      	add	sp, #28
    9a50:	bd00      	pop	{pc}

00009a52 <printk_pad_space>:
printk_pad_space():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:193

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int* count,
	PRINTK_INFO* info) {
    9a52:	b500      	push	{lr}
    9a54:	b087      	sub	sp, #28
    9a56:	9003      	str	r0, [sp, #12]
    9a58:	9102      	str	r1, [sp, #8]
    9a5a:	9201      	str	r2, [sp, #4]
    9a5c:	9300      	str	r3, [sp, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:196
	int i;

	for (i = curlen; i < field_width; i++) {
    9a5e:	9b03      	ldr	r3, [sp, #12]
    9a60:	9305      	str	r3, [sp, #20]
    9a62:	e008      	b.n	9a76 <printk_pad_space+0x24>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:197 (discriminator 3)
		printk_putc(' ', count, info);
    9a64:	9a00      	ldr	r2, [sp, #0]
    9a66:	9b01      	ldr	r3, [sp, #4]
    9a68:	0019      	movs	r1, r3
    9a6a:	2020      	movs	r0, #32
    9a6c:	f7ff fdf8 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:196 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    9a70:	9b05      	ldr	r3, [sp, #20]
    9a72:	3301      	adds	r3, #1
    9a74:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:196 (discriminator 1)
    9a76:	9a05      	ldr	r2, [sp, #20]
    9a78:	9b02      	ldr	r3, [sp, #8]
    9a7a:	429a      	cmp	r2, r3
    9a7c:	dbf2      	blt.n	9a64 <printk_pad_space+0x12>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:199
	}
}
    9a7e:	46c0      	nop			; (mov r8, r8)
    9a80:	b007      	add	sp, #28
    9a82:	bd00      	pop	{pc}

00009a84 <printk>:
printk():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:208
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO* info, const char* fmt, char* ap)
{
    9a84:	b570      	push	{r4, r5, r6, lr}
    9a86:	b0a2      	sub	sp, #136	; 0x88
    9a88:	9003      	str	r0, [sp, #12]
    9a8a:	9102      	str	r1, [sp, #8]
    9a8c:	9201      	str	r2, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:232

		}un1;*/
	char* p;
	int c;
	//char temp1;
	char vstr[33] = { '0' };
    9a8e:	ab0a      	add	r3, sp, #40	; 0x28
    9a90:	0018      	movs	r0, r3
    9a92:	2321      	movs	r3, #33	; 0x21
    9a94:	001a      	movs	r2, r3
    9a96:	2100      	movs	r1, #0
    9a98:	f000 fba5 	bl	a1e6 <memset>
    9a9c:	ab0a      	add	r3, sp, #40	; 0x28
    9a9e:	2230      	movs	r2, #48	; 0x30
    9aa0:	701a      	strb	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:253
	int* ivalp;
	char* sval;
	int cval;
	unsigned int uval;

	count = 0;
    9aa2:	2300      	movs	r3, #0
    9aa4:	9309      	str	r3, [sp, #36]	; 0x24
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:254
	length_modifier = 0;
    9aa6:	2300      	movs	r3, #0
    9aa8:	931b      	str	r3, [sp, #108]	; 0x6c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:255
	precision_used = TRUE;
    9aaa:	2301      	movs	r3, #1
    9aac:	931a      	str	r3, [sp, #104]	; 0x68
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:257
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char*)fmt; (c = *p) != 0; p++)
    9aae:	9b02      	ldr	r3, [sp, #8]
    9ab0:	9321      	str	r3, [sp, #132]	; 0x84
    9ab2:	f000 fb65 	bl	a180 <printk+0x6fc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:260
	{
		//读取%前面的字符，直接输出的字符和最后的\n类的转义字符
		if (c != '%')
    9ab6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9ab8:	2b25      	cmp	r3, #37	; 0x25
    9aba:	d017      	beq.n	9aec <printk+0x68>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:264
		{
#ifndef UNIX_DEBUG
			//%之前的字符
			if (c != '\n') {
    9abc:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9abe:	2b0a      	cmp	r3, #10
    9ac0:	d007      	beq.n	9ad2 <printk+0x4e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:265
				printk_putc(c, &count, info);
    9ac2:	9a03      	ldr	r2, [sp, #12]
    9ac4:	a909      	add	r1, sp, #36	; 0x24
    9ac6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9ac8:	0018      	movs	r0, r3
    9aca:	f7ff fdc9 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:276
			}
#else
			printk_putc(c, &count, info);
#endif

			continue;
    9ace:	f000 fb54 	bl	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:269
				printk_putc(0x0D /* CR */, &count, info);
    9ad2:	9a03      	ldr	r2, [sp, #12]
    9ad4:	ab09      	add	r3, sp, #36	; 0x24
    9ad6:	0019      	movs	r1, r3
    9ad8:	200d      	movs	r0, #13
    9ada:	f7ff fdc1 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:270
				printk_putc(0x0A /* LF */, &count, info);
    9ade:	9a03      	ldr	r2, [sp, #12]
    9ae0:	ab09      	add	r3, sp, #36	; 0x24
    9ae2:	0019      	movs	r1, r3
    9ae4:	200a      	movs	r0, #10
    9ae6:	f7ff fdbb 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:276
			continue;
    9aea:	e346      	b.n	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:282
		}


		//此时字符为%  查看百分号后的第一个格式字符，对输出格式字符并做出相应输出判断
		//检查相应的修改标志
		flags_used = 0;
    9aec:	2300      	movs	r3, #0
    9aee:	931d      	str	r3, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:283
		done = FALSE;
    9af0:	2300      	movs	r3, #0
    9af2:	931e      	str	r3, [sp, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:284
		while (!done) {
    9af4:	e02c      	b.n	9b50 <printk+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:285
			switch (/* c = */*++p) {
    9af6:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9af8:	3301      	adds	r3, #1
    9afa:	9321      	str	r3, [sp, #132]	; 0x84
    9afc:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9afe:	781b      	ldrb	r3, [r3, #0]
    9b00:	b25b      	sxtb	r3, r3
    9b02:	3b20      	subs	r3, #32
    9b04:	2b10      	cmp	r3, #16
    9b06:	d81d      	bhi.n	9b44 <printk+0xc0>
    9b08:	009a      	lsls	r2, r3, #2
    9b0a:	4bca      	ldr	r3, [pc, #808]	; (9e34 <printk+0x3b0>)
    9b0c:	18d3      	adds	r3, r2, r3
    9b0e:	681b      	ldr	r3, [r3, #0]
    9b10:	469f      	mov	pc, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:287
			case '-':
				flags_used |= FLAGS_MINUS;
    9b12:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9b14:	2201      	movs	r2, #1
    9b16:	4313      	orrs	r3, r2
    9b18:	931d      	str	r3, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:288
				break;
    9b1a:	e019      	b.n	9b50 <printk+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:290
			case '+':
				flags_used |= FLAGS_PLUS;
    9b1c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9b1e:	2202      	movs	r2, #2
    9b20:	4313      	orrs	r3, r2
    9b22:	931d      	str	r3, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:291
				break;
    9b24:	e014      	b.n	9b50 <printk+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:293
			case ' ':
				flags_used |= FLAGS_SPACE;
    9b26:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9b28:	2204      	movs	r2, #4
    9b2a:	4313      	orrs	r3, r2
    9b2c:	931d      	str	r3, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:294
				break;
    9b2e:	e00f      	b.n	9b50 <printk+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:296
			case '0':
				flags_used |= FLAGS_ZERO;
    9b30:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9b32:	2208      	movs	r2, #8
    9b34:	4313      	orrs	r3, r2
    9b36:	931d      	str	r3, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:297
				break;
    9b38:	e00a      	b.n	9b50 <printk+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:299
			case '#':
				flags_used |= FLAGS_POUND;
    9b3a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9b3c:	2210      	movs	r2, #16
    9b3e:	4313      	orrs	r3, r2
    9b40:	931d      	str	r3, [sp, #116]	; 0x74
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:300
				break;
    9b42:	e005      	b.n	9b50 <printk+0xcc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:303
			default:
				/* we've gone one char too far */
				--p;
    9b44:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9b46:	3b01      	subs	r3, #1
    9b48:	9321      	str	r3, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:304
				done = TRUE;
    9b4a:	2301      	movs	r3, #1
    9b4c:	931e      	str	r3, [sp, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:305
				break;
    9b4e:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:284
		while (!done) {
    9b50:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    9b52:	2b00      	cmp	r3, #0
    9b54:	d0cf      	beq.n	9af6 <printk+0x72>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:311
			}
		}


		//检查%后再下一个字符 确定输出长度
		field_width = 0;
    9b56:	2300      	movs	r3, #0
    9b58:	931c      	str	r3, [sp, #112]	; 0x70
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:312
		done = FALSE;
    9b5a:	2300      	movs	r3, #0
    9b5c:	931e      	str	r3, [sp, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:313
		while (!done) {
    9b5e:	e01b      	b.n	9b98 <printk+0x114>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:314
			switch (c = *++p) {
    9b60:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9b62:	3301      	adds	r3, #1
    9b64:	9321      	str	r3, [sp, #132]	; 0x84
    9b66:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9b68:	781b      	ldrb	r3, [r3, #0]
    9b6a:	b25b      	sxtb	r3, r3
    9b6c:	9315      	str	r3, [sp, #84]	; 0x54
    9b6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9b70:	3b30      	subs	r3, #48	; 0x30
    9b72:	2b09      	cmp	r3, #9
    9b74:	d80a      	bhi.n	9b8c <printk+0x108>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:325
			case '5':
			case '6':
			case '7':
			case '8':
			case '9':
				field_width = (field_width * 10) + (c - '0');
    9b76:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    9b78:	0013      	movs	r3, r2
    9b7a:	009b      	lsls	r3, r3, #2
    9b7c:	189b      	adds	r3, r3, r2
    9b7e:	005b      	lsls	r3, r3, #1
    9b80:	001a      	movs	r2, r3
    9b82:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9b84:	3b30      	subs	r3, #48	; 0x30
    9b86:	18d3      	adds	r3, r2, r3
    9b88:	931c      	str	r3, [sp, #112]	; 0x70
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:326
				break;
    9b8a:	e005      	b.n	9b98 <printk+0x114>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:329
			default:
				/* we've gone one char too far */
				--p;
    9b8c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9b8e:	3b01      	subs	r3, #1
    9b90:	9321      	str	r3, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:330
				done = TRUE;
    9b92:	2301      	movs	r3, #1
    9b94:	931e      	str	r3, [sp, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:331
				break;
    9b96:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:313
		while (!done) {
    9b98:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    9b9a:	2b00      	cmp	r3, #0
    9b9c:	d0e0      	beq.n	9b60 <printk+0xdc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:335
			}
		}
		//此时字符为%看是否有.输入
		if (/* (c = *++p) */*++p == '.') {
    9b9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9ba0:	3301      	adds	r3, #1
    9ba2:	9321      	str	r3, [sp, #132]	; 0x84
    9ba4:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9ba6:	781b      	ldrb	r3, [r3, #0]
    9ba8:	b25b      	sxtb	r3, r3
    9baa:	2b2e      	cmp	r3, #46	; 0x2e
    9bac:	d124      	bne.n	9bf8 <printk+0x174>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:341
			/* precision_used = TRUE; */

			/*
			 * Must get precision field width, if present.
			 */
			precision_width = 0;
    9bae:	2300      	movs	r3, #0
    9bb0:	9319      	str	r3, [sp, #100]	; 0x64
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:342
			done = FALSE;
    9bb2:	2300      	movs	r3, #0
    9bb4:	931e      	str	r3, [sp, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:343
			while (!done) {
    9bb6:	e01b      	b.n	9bf0 <printk+0x16c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:344
				switch (c = *++p) {
    9bb8:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9bba:	3301      	adds	r3, #1
    9bbc:	9321      	str	r3, [sp, #132]	; 0x84
    9bbe:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9bc0:	781b      	ldrb	r3, [r3, #0]
    9bc2:	b25b      	sxtb	r3, r3
    9bc4:	9315      	str	r3, [sp, #84]	; 0x54
    9bc6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9bc8:	3b30      	subs	r3, #48	; 0x30
    9bca:	2b09      	cmp	r3, #9
    9bcc:	d80a      	bhi.n	9be4 <printk+0x160>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:356
				case '6':
				case '7':
				case '8':
				case '9':
#if 1
					precision_width = (precision_width * 10) + (c - '0');
    9bce:	9a19      	ldr	r2, [sp, #100]	; 0x64
    9bd0:	0013      	movs	r3, r2
    9bd2:	009b      	lsls	r3, r3, #2
    9bd4:	189b      	adds	r3, r3, r2
    9bd6:	005b      	lsls	r3, r3, #1
    9bd8:	001a      	movs	r2, r3
    9bda:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9bdc:	3b30      	subs	r3, #48	; 0x30
    9bde:	18d3      	adds	r3, r2, r3
    9be0:	9319      	str	r3, [sp, #100]	; 0x64
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:359

#endif
					break;
    9be2:	e005      	b.n	9bf0 <printk+0x16c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:362
				default:
					/* we've gone one char too far */
					--p;
    9be4:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9be6:	3b01      	subs	r3, #1
    9be8:	9321      	str	r3, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:363
					done = TRUE;
    9bea:	2301      	movs	r3, #1
    9bec:	931e      	str	r3, [sp, #120]	; 0x78
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:364
					break;
    9bee:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:343
			while (!done) {
    9bf0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    9bf2:	2b00      	cmp	r3, #0
    9bf4:	d0e0      	beq.n	9bb8 <printk+0x134>
    9bf6:	e006      	b.n	9c06 <printk+0x182>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:370
				}
			}
		}
		else {
			/* we've gone one char too far */
			--p;
    9bf8:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9bfa:	3b01      	subs	r3, #1
    9bfc:	9321      	str	r3, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:372
#if 1
			precision_used = FALSE;
    9bfe:	2300      	movs	r3, #0
    9c00:	931a      	str	r3, [sp, #104]	; 0x68
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:373
			precision_width = 0;
    9c02:	2300      	movs	r3, #0
    9c04:	9319      	str	r3, [sp, #100]	; 0x64
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:377
#endif
		}
		//判断 输出的是否有lf、LF等
		switch (/* c = */*++p) {
    9c06:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9c08:	3301      	adds	r3, #1
    9c0a:	9321      	str	r3, [sp, #132]	; 0x84
    9c0c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9c0e:	781b      	ldrb	r3, [r3, #0]
    9c10:	b25b      	sxtb	r3, r3
    9c12:	2b68      	cmp	r3, #104	; 0x68
    9c14:	d012      	beq.n	9c3c <printk+0x1b8>
    9c16:	2b6c      	cmp	r3, #108	; 0x6c
    9c18:	d002      	beq.n	9c20 <printk+0x19c>
    9c1a:	2b4c      	cmp	r3, #76	; 0x4c
    9c1c:	d005      	beq.n	9c2a <printk+0x1a6>
    9c1e:	e009      	b.n	9c34 <printk+0x1b0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:382
		case 'h':
			// length_modifier |= LENMOD_h;
			break;
		case 'l':
			length_modifier |= LENMOD_l;
    9c20:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    9c22:	2201      	movs	r2, #1
    9c24:	4313      	orrs	r3, r2
    9c26:	931b      	str	r3, [sp, #108]	; 0x6c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:383
			break;
    9c28:	e009      	b.n	9c3e <printk+0x1ba>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:385
		case 'L':
			length_modifier |= LENMOD_L;
    9c2a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    9c2c:	2202      	movs	r2, #2
    9c2e:	4313      	orrs	r3, r2
    9c30:	931b      	str	r3, [sp, #108]	; 0x6c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:386
			break;
    9c32:	e004      	b.n	9c3e <printk+0x1ba>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:389
		default:
			/* we've gone one char too far */
			--p;
    9c34:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9c36:	3b01      	subs	r3, #1
    9c38:	9321      	str	r3, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:390
			break;
    9c3a:	e000      	b.n	9c3e <printk+0x1ba>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:380
			break;
    9c3c:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:394
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
    9c3e:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9c40:	3301      	adds	r3, #1
    9c42:	9321      	str	r3, [sp, #132]	; 0x84
    9c44:	9b21      	ldr	r3, [sp, #132]	; 0x84
    9c46:	781b      	ldrb	r3, [r3, #0]
    9c48:	b25b      	sxtb	r3, r3
    9c4a:	9315      	str	r3, [sp, #84]	; 0x54
    9c4c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9c4e:	3b58      	subs	r3, #88	; 0x58
    9c50:	2b20      	cmp	r3, #32
    9c52:	d900      	bls.n	9c56 <printk+0x1d2>
    9c54:	e285      	b.n	a162 <printk+0x6de>
    9c56:	009a      	lsls	r2, r3, #2
    9c58:	4b77      	ldr	r3, [pc, #476]	; (9e38 <printk+0x3b4>)
    9c5a:	18d3      	adds	r3, r2, r3
    9c5c:	681b      	ldr	r3, [r3, #0]
    9c5e:	469f      	mov	pc, r3
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:399
		case 'd':
		case 'i':
			//此时ap为指向可变参数列表的第一个参数
			//返回当前参数，并将ap指向下一个参数
			ival = (int)va_arg(ap, int);
    9c60:	9b01      	ldr	r3, [sp, #4]
    9c62:	3304      	adds	r3, #4
    9c64:	9301      	str	r3, [sp, #4]
    9c66:	9b01      	ldr	r3, [sp, #4]
    9c68:	3b04      	subs	r3, #4
    9c6a:	681b      	ldr	r3, [r3, #0]
    9c6c:	9308      	str	r3, [sp, #32]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:401
			//将整型转换成字符型保存在vstr中，返回字符数vlen
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);
    9c6e:	a908      	add	r1, sp, #32
    9c70:	a80a      	add	r0, sp, #40	; 0x28
    9c72:	230a      	movs	r3, #10
    9c74:	2201      	movs	r2, #1
    9c76:	f7ff fe57 	bl	9928 <printk_mknumstr>
    9c7a:	0003      	movs	r3, r0
    9c7c:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:403
			//指向转换后的最后一个字符
			vstrp = &vstr[vlen];
    9c7e:	aa0a      	add	r2, sp, #40	; 0x28
    9c80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9c82:	18d3      	adds	r3, r2, r3
    9c84:	9320      	str	r3, [sp, #128]	; 0x80
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:406

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
    9c86:	9b08      	ldr	r3, [sp, #32]
    9c88:	2b00      	cmp	r3, #0
    9c8a:	da05      	bge.n	9c98 <printk+0x214>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:407
				schar = '-';
    9c8c:	232d      	movs	r3, #45	; 0x2d
    9c8e:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:408
				++vlen;
    9c90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9c92:	3301      	adds	r3, #1
    9c94:	931f      	str	r3, [sp, #124]	; 0x7c
    9c96:	e015      	b.n	9cc4 <printk+0x240>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:412
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    9c98:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9c9a:	2202      	movs	r2, #2
    9c9c:	4013      	ands	r3, r2
    9c9e:	d005      	beq.n	9cac <printk+0x228>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:413
					schar = '+';
    9ca0:	232b      	movs	r3, #43	; 0x2b
    9ca2:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:414
					++vlen;
    9ca4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9ca6:	3301      	adds	r3, #1
    9ca8:	931f      	str	r3, [sp, #124]	; 0x7c
    9caa:	e00b      	b.n	9cc4 <printk+0x240>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:417
				}
				else {
					if (IS_FLAG_SPACE(flags_used)) {
    9cac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9cae:	2204      	movs	r2, #4
    9cb0:	4013      	ands	r3, r2
    9cb2:	d005      	beq.n	9cc0 <printk+0x23c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:418
						schar = ' ';
    9cb4:	2320      	movs	r3, #32
    9cb6:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:419
						++vlen;
    9cb8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9cba:	3301      	adds	r3, #1
    9cbc:	931f      	str	r3, [sp, #124]	; 0x7c
    9cbe:	e001      	b.n	9cc4 <printk+0x240>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:422
					}
					else {
						schar = 0;
    9cc0:	2300      	movs	r3, #0
    9cc2:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:426
					}
				}
			}
			dschar = FALSE;
    9cc4:	2300      	movs	r3, #0
    9cc6:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:431

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    9cc8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9cca:	2208      	movs	r2, #8
    9ccc:	4013      	ands	r3, r2
    9cce:	d013      	beq.n	9cf8 <printk+0x274>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:432
				if (schar)
    9cd0:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9cd2:	2b00      	cmp	r3, #0
    9cd4:	d005      	beq.n	9ce2 <printk+0x25e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:433
					printk_putc(schar, &count, info);  //输出符号
    9cd6:	9a03      	ldr	r2, [sp, #12]
    9cd8:	a909      	add	r1, sp, #36	; 0x24
    9cda:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9cdc:	0018      	movs	r0, r3
    9cde:	f7ff fcbf 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:434
				dschar = TRUE;
    9ce2:	2301      	movs	r3, #1
    9ce4:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:435
				printk_pad_zero(vlen, field_width, &count, info);
    9ce6:	9b03      	ldr	r3, [sp, #12]
    9ce8:	aa09      	add	r2, sp, #36	; 0x24
    9cea:	991c      	ldr	r1, [sp, #112]	; 0x70
    9cec:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9cee:	f7ff fe97 	bl	9a20 <printk_pad_zero>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:436
				vlen = field_width;
    9cf2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    9cf4:	931f      	str	r3, [sp, #124]	; 0x7c
    9cf6:	e014      	b.n	9d22 <printk+0x29e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:439
			}
			else {
				if (!IS_FLAG_MINUS(flags_used)) {
    9cf8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9cfa:	2201      	movs	r2, #1
    9cfc:	4013      	ands	r3, r2
    9cfe:	d110      	bne.n	9d22 <printk+0x29e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:440
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    9d00:	9b03      	ldr	r3, [sp, #12]
    9d02:	aa09      	add	r2, sp, #36	; 0x24
    9d04:	991c      	ldr	r1, [sp, #112]	; 0x70
    9d06:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9d08:	f7ff fea3 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:442

					if (schar)
    9d0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9d0e:	2b00      	cmp	r3, #0
    9d10:	d005      	beq.n	9d1e <printk+0x29a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:443
						printk_putc(schar, &count, info);
    9d12:	9a03      	ldr	r2, [sp, #12]
    9d14:	a909      	add	r1, sp, #36	; 0x24
    9d16:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9d18:	0018      	movs	r0, r3
    9d1a:	f7ff fca1 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:444
					dschar = TRUE;
    9d1e:	2301      	movs	r3, #1
    9d20:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:450
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    9d22:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    9d24:	2b00      	cmp	r3, #0
    9d26:	d000      	beq.n	9d2a <printk+0x2a6>
    9d28:	e18f      	b.n	a04a <printk+0x5c6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:450 (discriminator 1)
    9d2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9d2c:	2b00      	cmp	r3, #0
    9d2e:	d100      	bne.n	9d32 <printk+0x2ae>
    9d30:	e18b      	b.n	a04a <printk+0x5c6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:451
				printk_putc(schar, &count, info);
    9d32:	9a03      	ldr	r2, [sp, #12]
    9d34:	a909      	add	r1, sp, #36	; 0x24
    9d36:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9d38:	0018      	movs	r0, r3
    9d3a:	f7ff fc91 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:453
			}
			goto cont_xd;  //开始跳转
    9d3e:	e184      	b.n	a04a <printk+0x5c6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:464
			//3.140001 对double数:0x40091EB85F577E6C
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。

			//【20200816】  XSX，解决浮点数不优化问题
			ap = ap + 4;
    9d40:	9b01      	ldr	r3, [sp, #4]
    9d42:	3304      	adds	r3, #4
    9d44:	9301      	str	r3, [sp, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:465
			fval = (double)va_arg(ap, double);
    9d46:	9b01      	ldr	r3, [sp, #4]
    9d48:	3308      	adds	r3, #8
    9d4a:	9301      	str	r3, [sp, #4]
    9d4c:	9b01      	ldr	r3, [sp, #4]
    9d4e:	3b08      	subs	r3, #8
    9d50:	685c      	ldr	r4, [r3, #4]
    9d52:	681b      	ldr	r3, [r3, #0]
    9d54:	9306      	str	r3, [sp, #24]
    9d56:	9407      	str	r4, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:469

			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
    9d58:	9806      	ldr	r0, [sp, #24]
    9d5a:	9907      	ldr	r1, [sp, #28]
    9d5c:	2200      	movs	r2, #0
    9d5e:	2300      	movs	r3, #0
    9d60:	f7fd f92e 	bl	6fc0 <__aeabi_dcmplt>
    9d64:	1e03      	subs	r3, r0, #0
    9d66:	d00f      	beq.n	9d88 <printk+0x304>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:470
				schar = '-';
    9d68:	232d      	movs	r3, #45	; 0x2d
    9d6a:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:471
				fval = -fval;				//负数取它的正数
    9d6c:	9b06      	ldr	r3, [sp, #24]
    9d6e:	9c07      	ldr	r4, [sp, #28]
    9d70:	001a      	movs	r2, r3
    9d72:	0015      	movs	r5, r2
    9d74:	2280      	movs	r2, #128	; 0x80
    9d76:	0612      	lsls	r2, r2, #24
    9d78:	4062      	eors	r2, r4
    9d7a:	0016      	movs	r6, r2
    9d7c:	9506      	str	r5, [sp, #24]
    9d7e:	9607      	str	r6, [sp, #28]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:472
				++vlen;
    9d80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9d82:	3301      	adds	r3, #1
    9d84:	931f      	str	r3, [sp, #124]	; 0x7c
    9d86:	e015      	b.n	9db4 <printk+0x330>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:476
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    9d88:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9d8a:	2202      	movs	r2, #2
    9d8c:	4013      	ands	r3, r2
    9d8e:	d005      	beq.n	9d9c <printk+0x318>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:477
					schar = '+';
    9d90:	232b      	movs	r3, #43	; 0x2b
    9d92:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:478
					++vlen;
    9d94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9d96:	3301      	adds	r3, #1
    9d98:	931f      	str	r3, [sp, #124]	; 0x7c
    9d9a:	e00b      	b.n	9db4 <printk+0x330>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:481
				}
				else {
					if (IS_FLAG_SPACE(flags_used)) {
    9d9c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9d9e:	2204      	movs	r2, #4
    9da0:	4013      	ands	r3, r2
    9da2:	d005      	beq.n	9db0 <printk+0x32c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:482
						schar = ' ';
    9da4:	2320      	movs	r3, #32
    9da6:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:483
						++vlen;
    9da8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9daa:	3301      	adds	r3, #1
    9dac:	931f      	str	r3, [sp, #124]	; 0x7c
    9dae:	e001      	b.n	9db4 <printk+0x330>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:486
					}
					else {
						schar = 0;
    9db0:	2300      	movs	r3, #0
    9db2:	9318      	str	r3, [sp, #96]	; 0x60
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:490
					}
				}
			}
			dschar = FALSE;
    9db4:	2300      	movs	r3, #0
    9db6:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:493

			//确定是否使用小数点精度数值
			if (precision_used)
    9db8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    9dba:	2b00      	cmp	r3, #0
    9dbc:	d00a      	beq.n	9dd4 <printk+0x350>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:496
			{
				//将整型转换成字符型保存在vstr中，返回字符数vlen
				vlen = printk_mkfloatstr(&fval, vstr, precision_width);
    9dbe:	9a19      	ldr	r2, [sp, #100]	; 0x64
    9dc0:	a90a      	add	r1, sp, #40	; 0x28
    9dc2:	ab06      	add	r3, sp, #24
    9dc4:	0018      	movs	r0, r3
    9dc6:	f7ff fc71 	bl	96ac <printk_mkfloatstr>
    9dca:	0003      	movs	r3, r0
    9dcc:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:497
				vstrp = &vstr[0];  //指向转换后的第一个字符
    9dce:	ab0a      	add	r3, sp, #40	; 0x28
    9dd0:	9320      	str	r3, [sp, #128]	; 0x80
    9dd2:	e017      	b.n	9e04 <printk+0x380>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:501
			}
			else
			{	//浮点型精度到小数点后8位
				if (length_modifier == 0)
    9dd4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    9dd6:	2b00      	cmp	r3, #0
    9dd8:	d10a      	bne.n	9df0 <printk+0x36c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:503
				{	//将整型转换成字符型保存在vstr中，返回字符数vlen
					vlen = printk_mkfloatstr(&fval, vstr, 8);
    9dda:	a90a      	add	r1, sp, #40	; 0x28
    9ddc:	ab06      	add	r3, sp, #24
    9dde:	2208      	movs	r2, #8
    9de0:	0018      	movs	r0, r3
    9de2:	f7ff fc63 	bl	96ac <printk_mkfloatstr>
    9de6:	0003      	movs	r3, r0
    9de8:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:505
					//指向转换后的第一个字符
					vstrp = &vstr[0];
    9dea:	ab0a      	add	r3, sp, #40	; 0x28
    9dec:	9320      	str	r3, [sp, #128]	; 0x80
    9dee:	e009      	b.n	9e04 <printk+0x380>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:509
				}
				else
				{	//将整型转换成字符型保存在vstr中，返回字符数vlen
					vlen = printk_mkfloatstr(&fval, vstr, precision_width);
    9df0:	9a19      	ldr	r2, [sp, #100]	; 0x64
    9df2:	a90a      	add	r1, sp, #40	; 0x28
    9df4:	ab06      	add	r3, sp, #24
    9df6:	0018      	movs	r0, r3
    9df8:	f7ff fc58 	bl	96ac <printk_mkfloatstr>
    9dfc:	0003      	movs	r3, r0
    9dfe:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:511
					//指向转换后的第一个字符
					vstrp = &vstr[0];
    9e00:	ab0a      	add	r3, sp, #40	; 0x28
    9e02:	9320      	str	r3, [sp, #128]	; 0x80
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:521


			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    9e04:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9e06:	2208      	movs	r2, #8
    9e08:	4013      	ands	r3, r2
    9e0a:	d017      	beq.n	9e3c <printk+0x3b8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:522
				if (schar)
    9e0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e0e:	2b00      	cmp	r3, #0
    9e10:	d005      	beq.n	9e1e <printk+0x39a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:523
					printk_putc(schar, &count, info);  //输出符号
    9e12:	9a03      	ldr	r2, [sp, #12]
    9e14:	a909      	add	r1, sp, #36	; 0x24
    9e16:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e18:	0018      	movs	r0, r3
    9e1a:	f7ff fc21 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:524
				dschar = TRUE;
    9e1e:	2301      	movs	r3, #1
    9e20:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:525
				printk_pad_zero(vlen, field_width, &count, info);
    9e22:	9b03      	ldr	r3, [sp, #12]
    9e24:	aa09      	add	r2, sp, #36	; 0x24
    9e26:	991c      	ldr	r1, [sp, #112]	; 0x70
    9e28:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9e2a:	f7ff fdf9 	bl	9a20 <printk_pad_zero>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:526
				vlen = field_width;
    9e2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    9e30:	931f      	str	r3, [sp, #124]	; 0x7c
    9e32:	e018      	b.n	9e66 <printk+0x3e2>
    9e34:	0000a328 	.word	0x0000a328
    9e38:	0000a36c 	.word	0x0000a36c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:529
			}
			else {
				if (!IS_FLAG_MINUS(flags_used)) {
    9e3c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9e3e:	2201      	movs	r2, #1
    9e40:	4013      	ands	r3, r2
    9e42:	d110      	bne.n	9e66 <printk+0x3e2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:530
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    9e44:	9b03      	ldr	r3, [sp, #12]
    9e46:	aa09      	add	r2, sp, #36	; 0x24
    9e48:	991c      	ldr	r1, [sp, #112]	; 0x70
    9e4a:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9e4c:	f7ff fe01 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:532

					if (schar)
    9e50:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e52:	2b00      	cmp	r3, #0
    9e54:	d005      	beq.n	9e62 <printk+0x3de>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:533
						printk_putc(schar, &count, info);
    9e56:	9a03      	ldr	r2, [sp, #12]
    9e58:	a909      	add	r1, sp, #36	; 0x24
    9e5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e5c:	0018      	movs	r0, r3
    9e5e:	f7ff fbff 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:534
					dschar = TRUE;
    9e62:	2301      	movs	r3, #1
    9e64:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:540
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    9e66:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    9e68:	2b00      	cmp	r3, #0
    9e6a:	d114      	bne.n	9e96 <printk+0x412>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:540 (discriminator 1)
    9e6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e6e:	2b00      	cmp	r3, #0
    9e70:	d011      	beq.n	9e96 <printk+0x412>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:541
				printk_putc(schar, &count, info);
    9e72:	9a03      	ldr	r2, [sp, #12]
    9e74:	a909      	add	r1, sp, #36	; 0x24
    9e76:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e78:	0018      	movs	r0, r3
    9e7a:	f7ff fbf1 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:543
			}
			while (*vstrp)
    9e7e:	e00a      	b.n	9e96 <printk+0x412>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:544
				printk_putc(*vstrp++, &count, info);
    9e80:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9e82:	1c5a      	adds	r2, r3, #1
    9e84:	9220      	str	r2, [sp, #128]	; 0x80
    9e86:	781b      	ldrb	r3, [r3, #0]
    9e88:	b25b      	sxtb	r3, r3
    9e8a:	0018      	movs	r0, r3
    9e8c:	9a03      	ldr	r2, [sp, #12]
    9e8e:	ab09      	add	r3, sp, #36	; 0x24
    9e90:	0019      	movs	r1, r3
    9e92:	f7ff fbe5 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:543
			while (*vstrp)
    9e96:	9b20      	ldr	r3, [sp, #128]	; 0x80
    9e98:	781b      	ldrb	r3, [r3, #0]
    9e9a:	b25b      	sxtb	r3, r3
    9e9c:	2b00      	cmp	r3, #0
    9e9e:	d1ef      	bne.n	9e80 <printk+0x3fc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:545
			if (IS_FLAG_MINUS(flags_used)) {
    9ea0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9ea2:	2201      	movs	r2, #1
    9ea4:	4013      	ands	r3, r2
    9ea6:	d100      	bne.n	9eaa <printk+0x426>
    9ea8:	e162      	b.n	a170 <printk+0x6ec>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:546
				printk_pad_space(vlen, field_width, &count, info);
    9eaa:	9b03      	ldr	r3, [sp, #12]
    9eac:	aa09      	add	r2, sp, #36	; 0x24
    9eae:	991c      	ldr	r1, [sp, #112]	; 0x70
    9eb0:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9eb2:	f7ff fdce 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:548
			}
			break;
    9eb6:	e15b      	b.n	a170 <printk+0x6ec>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:552
			//以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int)va_arg(ap, unsigned int);
    9eb8:	9b01      	ldr	r3, [sp, #4]
    9eba:	3304      	adds	r3, #4
    9ebc:	9301      	str	r3, [sp, #4]
    9ebe:	9b01      	ldr	r3, [sp, #4]
    9ec0:	3b04      	subs	r3, #4
    9ec2:	681b      	ldr	r3, [r3, #0]
    9ec4:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:553
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    9ec6:	a905      	add	r1, sp, #20
    9ec8:	a80a      	add	r0, sp, #40	; 0x28
    9eca:	2310      	movs	r3, #16
    9ecc:	2200      	movs	r2, #0
    9ece:	f7ff fd2b 	bl	9928 <printk_mknumstr>
    9ed2:	0003      	movs	r3, r0
    9ed4:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:554
			vstrp = &vstr[vlen];
    9ed6:	aa0a      	add	r2, sp, #40	; 0x28
    9ed8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9eda:	18d3      	adds	r3, r2, r3
    9edc:	9320      	str	r3, [sp, #128]	; 0x80
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:556

			dschar = FALSE;
    9ede:	2300      	movs	r3, #0
    9ee0:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:557
			if (IS_FLAG_ZERO(flags_used)) {
    9ee2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9ee4:	2208      	movs	r2, #8
    9ee6:	4013      	ands	r3, r2
    9ee8:	d01a      	beq.n	9f20 <printk+0x49c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:558
				if (IS_FLAG_POUND(flags_used)) {
    9eea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9eec:	2210      	movs	r2, #16
    9eee:	4013      	ands	r3, r2
    9ef0:	d00d      	beq.n	9f0e <printk+0x48a>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:559
					printk_putc('0', &count, info);
    9ef2:	9a03      	ldr	r2, [sp, #12]
    9ef4:	ab09      	add	r3, sp, #36	; 0x24
    9ef6:	0019      	movs	r1, r3
    9ef8:	2030      	movs	r0, #48	; 0x30
    9efa:	f7ff fbb1 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:560
					printk_putc('x', &count, info);
    9efe:	9a03      	ldr	r2, [sp, #12]
    9f00:	ab09      	add	r3, sp, #36	; 0x24
    9f02:	0019      	movs	r1, r3
    9f04:	2078      	movs	r0, #120	; 0x78
    9f06:	f7ff fbab 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:562
					/*vlen += 2;*/
					dschar = TRUE;
    9f0a:	2301      	movs	r3, #1
    9f0c:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:564
				}
				printk_pad_zero(vlen, field_width, &count, info);
    9f0e:	9b03      	ldr	r3, [sp, #12]
    9f10:	aa09      	add	r2, sp, #36	; 0x24
    9f12:	991c      	ldr	r1, [sp, #112]	; 0x70
    9f14:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9f16:	f7ff fd83 	bl	9a20 <printk_pad_zero>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:565
				vlen = field_width;
    9f1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    9f1c:	931f      	str	r3, [sp, #124]	; 0x7c
    9f1e:	e022      	b.n	9f66 <printk+0x4e2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:568
			}
			else {
				if (!IS_FLAG_MINUS(flags_used)) {
    9f20:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9f22:	2201      	movs	r2, #1
    9f24:	4013      	ands	r3, r2
    9f26:	d11e      	bne.n	9f66 <printk+0x4e2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:569
					if (IS_FLAG_POUND(flags_used)) {
    9f28:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9f2a:	2210      	movs	r2, #16
    9f2c:	4013      	ands	r3, r2
    9f2e:	d002      	beq.n	9f36 <printk+0x4b2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:570
						vlen += 2;
    9f30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9f32:	3302      	adds	r3, #2
    9f34:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:572
					}
					printk_pad_space(vlen, field_width, &count, info);
    9f36:	9b03      	ldr	r3, [sp, #12]
    9f38:	aa09      	add	r2, sp, #36	; 0x24
    9f3a:	991c      	ldr	r1, [sp, #112]	; 0x70
    9f3c:	981f      	ldr	r0, [sp, #124]	; 0x7c
    9f3e:	f7ff fd88 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:573
					if (IS_FLAG_POUND(flags_used)) {
    9f42:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9f44:	2210      	movs	r2, #16
    9f46:	4013      	ands	r3, r2
    9f48:	d00d      	beq.n	9f66 <printk+0x4e2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:574
						printk_putc('0', &count, info);
    9f4a:	9a03      	ldr	r2, [sp, #12]
    9f4c:	ab09      	add	r3, sp, #36	; 0x24
    9f4e:	0019      	movs	r1, r3
    9f50:	2030      	movs	r0, #48	; 0x30
    9f52:	f7ff fb85 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:575
						printk_putc('x', &count, info);
    9f56:	9a03      	ldr	r2, [sp, #12]
    9f58:	ab09      	add	r3, sp, #36	; 0x24
    9f5a:	0019      	movs	r1, r3
    9f5c:	2078      	movs	r0, #120	; 0x78
    9f5e:	f7ff fb7f 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:576
						dschar = TRUE;
    9f62:	2301      	movs	r3, #1
    9f64:	9317      	str	r3, [sp, #92]	; 0x5c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:581
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
    9f66:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9f68:	2210      	movs	r2, #16
    9f6a:	4013      	ands	r3, r2
    9f6c:	d06f      	beq.n	a04e <printk+0x5ca>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:581 (discriminator 1)
    9f6e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    9f70:	2b00      	cmp	r3, #0
    9f72:	d16c      	bne.n	a04e <printk+0x5ca>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:582
				printk_putc('0', &count, info);
    9f74:	9a03      	ldr	r2, [sp, #12]
    9f76:	ab09      	add	r3, sp, #36	; 0x24
    9f78:	0019      	movs	r1, r3
    9f7a:	2030      	movs	r0, #48	; 0x30
    9f7c:	f7ff fb70 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:583
				printk_putc('x', &count, info);
    9f80:	9a03      	ldr	r2, [sp, #12]
    9f82:	ab09      	add	r3, sp, #36	; 0x24
    9f84:	0019      	movs	r1, r3
    9f86:	2078      	movs	r0, #120	; 0x78
    9f88:	f7ff fb6a 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:584
				vlen += 2;
    9f8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9f8e:	3302      	adds	r3, #2
    9f90:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:586
			}
			goto cont_xd;
    9f92:	e05c      	b.n	a04e <printk+0x5ca>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:589
			//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int)va_arg(ap, unsigned int);
    9f94:	9b01      	ldr	r3, [sp, #4]
    9f96:	3304      	adds	r3, #4
    9f98:	9301      	str	r3, [sp, #4]
    9f9a:	9b01      	ldr	r3, [sp, #4]
    9f9c:	3b04      	subs	r3, #4
    9f9e:	681b      	ldr	r3, [r3, #0]
    9fa0:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:590
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
    9fa2:	a905      	add	r1, sp, #20
    9fa4:	a80a      	add	r0, sp, #40	; 0x28
    9fa6:	2308      	movs	r3, #8
    9fa8:	2200      	movs	r2, #0
    9faa:	f7ff fcbd 	bl	9928 <printk_mknumstr>
    9fae:	0003      	movs	r3, r0
    9fb0:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:591
			goto cont_u;
    9fb2:	e02e      	b.n	a012 <printk+0x58e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:594
			//二进制输出
		case 'b':
			uval = (unsigned int)va_arg(ap, unsigned int);
    9fb4:	9b01      	ldr	r3, [sp, #4]
    9fb6:	3304      	adds	r3, #4
    9fb8:	9301      	str	r3, [sp, #4]
    9fba:	9b01      	ldr	r3, [sp, #4]
    9fbc:	3b04      	subs	r3, #4
    9fbe:	681b      	ldr	r3, [r3, #0]
    9fc0:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:595
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
    9fc2:	a905      	add	r1, sp, #20
    9fc4:	a80a      	add	r0, sp, #40	; 0x28
    9fc6:	2302      	movs	r3, #2
    9fc8:	2200      	movs	r2, #0
    9fca:	f7ff fcad 	bl	9928 <printk_mknumstr>
    9fce:	0003      	movs	r3, r0
    9fd0:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:596
			goto cont_u;
    9fd2:	e01e      	b.n	a012 <printk+0x58e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:599
			//输出指针的值
		case 'p':
			uval = (unsigned int)va_arg(ap, void*);
    9fd4:	9b01      	ldr	r3, [sp, #4]
    9fd6:	3304      	adds	r3, #4
    9fd8:	9301      	str	r3, [sp, #4]
    9fda:	9b01      	ldr	r3, [sp, #4]
    9fdc:	3b04      	subs	r3, #4
    9fde:	681b      	ldr	r3, [r3, #0]
    9fe0:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:600
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    9fe2:	a905      	add	r1, sp, #20
    9fe4:	a80a      	add	r0, sp, #40	; 0x28
    9fe6:	2310      	movs	r3, #16
    9fe8:	2200      	movs	r2, #0
    9fea:	f7ff fc9d 	bl	9928 <printk_mknumstr>
    9fee:	0003      	movs	r3, r0
    9ff0:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:601
			goto cont_u;
    9ff2:	e00e      	b.n	a012 <printk+0x58e>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:603
		case 'u':
			uval = (unsigned int)va_arg(ap, unsigned int);
    9ff4:	9b01      	ldr	r3, [sp, #4]
    9ff6:	3304      	adds	r3, #4
    9ff8:	9301      	str	r3, [sp, #4]
    9ffa:	9b01      	ldr	r3, [sp, #4]
    9ffc:	3b04      	subs	r3, #4
    9ffe:	681b      	ldr	r3, [r3, #0]
    a000:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:604
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
    a002:	a905      	add	r1, sp, #20
    a004:	a80a      	add	r0, sp, #40	; 0x28
    a006:	230a      	movs	r3, #10
    a008:	2200      	movs	r2, #0
    a00a:	f7ff fc8d 	bl	9928 <printk_mknumstr>
    a00e:	0003      	movs	r3, r0
    a010:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:606

			cont_u: vstrp = &vstr[vlen];
    a012:	aa0a      	add	r2, sp, #40	; 0x28
    a014:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a016:	18d3      	adds	r3, r2, r3
    a018:	9320      	str	r3, [sp, #128]	; 0x80
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:608

			if (IS_FLAG_ZERO(flags_used)) {
    a01a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a01c:	2208      	movs	r2, #8
    a01e:	4013      	ands	r3, r2
    a020:	d008      	beq.n	a034 <printk+0x5b0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:609
				printk_pad_zero(vlen, field_width, &count, info);
    a022:	9b03      	ldr	r3, [sp, #12]
    a024:	aa09      	add	r2, sp, #36	; 0x24
    a026:	991c      	ldr	r1, [sp, #112]	; 0x70
    a028:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a02a:	f7ff fcf9 	bl	9a20 <printk_pad_zero>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:610
				vlen = field_width;
    a02e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    a030:	931f      	str	r3, [sp, #124]	; 0x7c
    a032:	e01b      	b.n	a06c <printk+0x5e8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:613
			}
			else {
				if (!IS_FLAG_MINUS(flags_used)) {
    a034:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a036:	2201      	movs	r2, #1
    a038:	4013      	ands	r3, r2
    a03a:	d10a      	bne.n	a052 <printk+0x5ce>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:614
					printk_pad_space(vlen, field_width, &count, info);
    a03c:	9b03      	ldr	r3, [sp, #12]
    a03e:	aa09      	add	r2, sp, #36	; 0x24
    a040:	991c      	ldr	r1, [sp, #112]	; 0x70
    a042:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a044:	f7ff fd05 	bl	9a52 <printk_pad_space>
    a048:	e010      	b.n	a06c <printk+0x5e8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:453
			goto cont_xd;  //开始跳转
    a04a:	46c0      	nop			; (mov r8, r8)
    a04c:	e00e      	b.n	a06c <printk+0x5e8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:586
			goto cont_xd;
    a04e:	46c0      	nop			; (mov r8, r8)
    a050:	e00c      	b.n	a06c <printk+0x5e8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:618
				}
			}

			cont_xd: while (*vstrp)
    a052:	46c0      	nop			; (mov r8, r8)
    a054:	e00a      	b.n	a06c <printk+0x5e8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:619
				printk_putc(*vstrp--, &count, info);
    a056:	9b20      	ldr	r3, [sp, #128]	; 0x80
    a058:	1e5a      	subs	r2, r3, #1
    a05a:	9220      	str	r2, [sp, #128]	; 0x80
    a05c:	781b      	ldrb	r3, [r3, #0]
    a05e:	b25b      	sxtb	r3, r3
    a060:	0018      	movs	r0, r3
    a062:	9a03      	ldr	r2, [sp, #12]
    a064:	ab09      	add	r3, sp, #36	; 0x24
    a066:	0019      	movs	r1, r3
    a068:	f7ff fafa 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:618 (discriminator 1)
			cont_xd: while (*vstrp)
    a06c:	9b20      	ldr	r3, [sp, #128]	; 0x80
    a06e:	781b      	ldrb	r3, [r3, #0]
    a070:	b25b      	sxtb	r3, r3
    a072:	2b00      	cmp	r3, #0
    a074:	d1ef      	bne.n	a056 <printk+0x5d2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:621

			if (IS_FLAG_MINUS(flags_used)) {
    a076:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a078:	2201      	movs	r2, #1
    a07a:	4013      	ands	r3, r2
    a07c:	d100      	bne.n	a080 <printk+0x5fc>
    a07e:	e079      	b.n	a174 <printk+0x6f0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:622
				printk_pad_space(vlen, field_width, &count, info);
    a080:	9b03      	ldr	r3, [sp, #12]
    a082:	aa09      	add	r2, sp, #36	; 0x24
    a084:	991c      	ldr	r1, [sp, #112]	; 0x70
    a086:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a088:	f7ff fce3 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:625
			}

			break;
    a08c:	e072      	b.n	a174 <printk+0x6f0>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:628
			//字符型输出
		case 'c':
			cval = (char)va_arg(ap, unsigned int);
    a08e:	9b01      	ldr	r3, [sp, #4]
    a090:	3304      	adds	r3, #4
    a092:	9301      	str	r3, [sp, #4]
    a094:	9b01      	ldr	r3, [sp, #4]
    a096:	3b04      	subs	r3, #4
    a098:	681b      	ldr	r3, [r3, #0]
    a09a:	b25b      	sxtb	r3, r3
    a09c:	9313      	str	r3, [sp, #76]	; 0x4c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:629
			printk_putc(cval, &count, info);
    a09e:	9a03      	ldr	r2, [sp, #12]
    a0a0:	a909      	add	r1, sp, #36	; 0x24
    a0a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a0a4:	0018      	movs	r0, r3
    a0a6:	f7ff fadb 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:630
			break;
    a0aa:	e066      	b.n	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:632
		case 's':
			sval = (char*)va_arg(ap, char*);
    a0ac:	9b01      	ldr	r3, [sp, #4]
    a0ae:	3304      	adds	r3, #4
    a0b0:	9301      	str	r3, [sp, #4]
    a0b2:	9b01      	ldr	r3, [sp, #4]
    a0b4:	3b04      	subs	r3, #4
    a0b6:	681b      	ldr	r3, [r3, #0]
    a0b8:	9316      	str	r3, [sp, #88]	; 0x58
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:633
			if (sval) {
    a0ba:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a0bc:	2b00      	cmp	r3, #0
    a0be:	d05b      	beq.n	a178 <printk+0x6f4>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:634
				vlen = strlen(sval);
    a0c0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a0c2:	0018      	movs	r0, r3
    a0c4:	f7fe f816 	bl	80f4 <strlen>
    a0c8:	0003      	movs	r3, r0
    a0ca:	931f      	str	r3, [sp, #124]	; 0x7c
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:635
				if (!IS_FLAG_MINUS(flags_used)) {
    a0cc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a0ce:	2201      	movs	r2, #1
    a0d0:	4013      	ands	r3, r2
    a0d2:	d105      	bne.n	a0e0 <printk+0x65c>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:636
					printk_pad_space(vlen, field_width, &count, info);
    a0d4:	9b03      	ldr	r3, [sp, #12]
    a0d6:	aa09      	add	r2, sp, #36	; 0x24
    a0d8:	991c      	ldr	r1, [sp, #112]	; 0x70
    a0da:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a0dc:	f7ff fcb9 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:638
				}
				if (precision_width != 0)
    a0e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
    a0e2:	2b00      	cmp	r3, #0
    a0e4:	d022      	beq.n	a12c <printk+0x6a8>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:640
				{
					while (*sval)
    a0e6:	e010      	b.n	a10a <printk+0x686>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:642
					{
						if (precision_width >= 1)
    a0e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
    a0ea:	2b00      	cmp	r3, #0
    a0ec:	dd0d      	ble.n	a10a <printk+0x686>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:644
						{
							precision_width--;
    a0ee:	9b19      	ldr	r3, [sp, #100]	; 0x64
    a0f0:	3b01      	subs	r3, #1
    a0f2:	9319      	str	r3, [sp, #100]	; 0x64
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:645
							printk_putc(*sval++, &count, info);
    a0f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a0f6:	1c5a      	adds	r2, r3, #1
    a0f8:	9216      	str	r2, [sp, #88]	; 0x58
    a0fa:	781b      	ldrb	r3, [r3, #0]
    a0fc:	b25b      	sxtb	r3, r3
    a0fe:	0018      	movs	r0, r3
    a100:	9a03      	ldr	r2, [sp, #12]
    a102:	ab09      	add	r3, sp, #36	; 0x24
    a104:	0019      	movs	r1, r3
    a106:	f7ff faab 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:640
					while (*sval)
    a10a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a10c:	781b      	ldrb	r3, [r3, #0]
    a10e:	b25b      	sxtb	r3, r3
    a110:	2b00      	cmp	r3, #0
    a112:	d1e9      	bne.n	a0e8 <printk+0x664>
    a114:	e00f      	b.n	a136 <printk+0x6b2>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:652
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
						printk_putc(*sval++, &count, info);
    a116:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a118:	1c5a      	adds	r2, r3, #1
    a11a:	9216      	str	r2, [sp, #88]	; 0x58
    a11c:	781b      	ldrb	r3, [r3, #0]
    a11e:	b25b      	sxtb	r3, r3
    a120:	0018      	movs	r0, r3
    a122:	9a03      	ldr	r2, [sp, #12]
    a124:	ab09      	add	r3, sp, #36	; 0x24
    a126:	0019      	movs	r1, r3
    a128:	f7ff fa9a 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:651
					while (*sval)
    a12c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a12e:	781b      	ldrb	r3, [r3, #0]
    a130:	b25b      	sxtb	r3, r3
    a132:	2b00      	cmp	r3, #0
    a134:	d1ef      	bne.n	a116 <printk+0x692>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:654
				}
				if (IS_FLAG_MINUS(flags_used)) {
    a136:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a138:	2201      	movs	r2, #1
    a13a:	4013      	ands	r3, r2
    a13c:	d01c      	beq.n	a178 <printk+0x6f4>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:655
					printk_pad_space(vlen, field_width, &count, info);
    a13e:	9b03      	ldr	r3, [sp, #12]
    a140:	aa09      	add	r2, sp, #36	; 0x24
    a142:	991c      	ldr	r1, [sp, #112]	; 0x70
    a144:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a146:	f7ff fc84 	bl	9a52 <printk_pad_space>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:658
				}
			}
			break;
    a14a:	e015      	b.n	a178 <printk+0x6f4>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:660
		case 'n':
			ivalp = (int*)va_arg(ap, int*);
    a14c:	9b01      	ldr	r3, [sp, #4]
    a14e:	3304      	adds	r3, #4
    a150:	9301      	str	r3, [sp, #4]
    a152:	9b01      	ldr	r3, [sp, #4]
    a154:	3b04      	subs	r3, #4
    a156:	681b      	ldr	r3, [r3, #0]
    a158:	9314      	str	r3, [sp, #80]	; 0x50
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:661
			*ivalp = count;
    a15a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a15c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a15e:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:662
			break;
    a160:	e00b      	b.n	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:665

		default:
			printk_putc(c, &count, info);
    a162:	9a03      	ldr	r2, [sp, #12]
    a164:	a909      	add	r1, sp, #36	; 0x24
    a166:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a168:	0018      	movs	r0, r3
    a16a:	f7ff fa79 	bl	9660 <printk_putc>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:666
			break;
    a16e:	e004      	b.n	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:548
			break;
    a170:	46c0      	nop			; (mov r8, r8)
    a172:	e002      	b.n	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:625
			break;
    a174:	46c0      	nop			; (mov r8, r8)
    a176:	e000      	b.n	a17a <printk+0x6f6>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:658
			break;
    a178:	46c0      	nop			; (mov r8, r8)
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:257 (discriminator 2)
	for (p = (char*)fmt; (c = *p) != 0; p++)
    a17a:	9b21      	ldr	r3, [sp, #132]	; 0x84
    a17c:	3301      	adds	r3, #1
    a17e:	9321      	str	r3, [sp, #132]	; 0x84
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:257 (discriminator 1)
    a180:	9b21      	ldr	r3, [sp, #132]	; 0x84
    a182:	781b      	ldrb	r3, [r3, #0]
    a184:	b25b      	sxtb	r3, r3
    a186:	9315      	str	r3, [sp, #84]	; 0x54
    a188:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a18a:	2b00      	cmp	r3, #0
    a18c:	d000      	beq.n	a190 <printk+0x70c>
    a18e:	e492      	b.n	9ab6 <printk+0x32>
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:669
		}
	}
	return count;
    a190:	9b09      	ldr	r3, [sp, #36]	; 0x24
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:670
}
    a192:	0018      	movs	r0, r3
    a194:	b022      	add	sp, #136	; 0x88
    a196:	bd70      	pop	{r4, r5, r6, pc}

0000a198 <myprintf>:
myprintf():
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:678
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char* fmt, ...)
{
    a198:	b40f      	push	{r0, r1, r2, r3}
    a19a:	b500      	push	{lr}
    a19c:	b087      	sub	sp, #28
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:682
	char* ap;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
    a19e:	ab01      	add	r3, sp, #4
    a1a0:	2201      	movs	r2, #1
    a1a2:	601a      	str	r2, [r3, #0]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:683
	info.func = &out_char;     //调用的串口输出函数
    a1a4:	ab01      	add	r3, sp, #4
    a1a6:	4a0a      	ldr	r2, [pc, #40]	; (a1d0 <myprintf+0x38>)
    a1a8:	605a      	str	r2, [r3, #4]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:685
	//对ap 进行初始化，让它指向可变参数表里面的第一个参数
	va_start(ap, fmt);
    a1aa:	ab09      	add	r3, sp, #36	; 0x24
    a1ac:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:686
	rvalue = printk(&info, fmt, ap);
    a1ae:	9908      	ldr	r1, [sp, #32]
    a1b0:	9a05      	ldr	r2, [sp, #20]
    a1b2:	ab01      	add	r3, sp, #4
    a1b4:	0018      	movs	r0, r3
    a1b6:	f7ff fc65 	bl	9a84 <printk>
    a1ba:	0003      	movs	r3, r0
    a1bc:	9304      	str	r3, [sp, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:688

	va_end(ap);
    a1be:	2300      	movs	r3, #0
    a1c0:	9305      	str	r3, [sp, #20]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:690

	return rvalue;
    a1c2:	9b04      	ldr	r3, [sp, #16]
D:\Users\lihaifeng\Desktop\学习文件夹\嵌入式\实验考核题目\26\SPI_实现基本功能\Debug/srcc/printf.c:691
}
    a1c4:	0018      	movs	r0, r3
    a1c6:	b007      	add	sp, #28
    a1c8:	bc08      	pop	{r3}
    a1ca:	b004      	add	sp, #16
    a1cc:	4718      	bx	r3
    a1ce:	46c0      	nop			; (mov r8, r8)
    a1d0:	00009641 	.word	0x00009641

0000a1d4 <memcpy>:
memcpy():
    a1d4:	2300      	movs	r3, #0
    a1d6:	b510      	push	{r4, lr}
    a1d8:	429a      	cmp	r2, r3
    a1da:	d100      	bne.n	a1de <memcpy+0xa>
    a1dc:	bd10      	pop	{r4, pc}
    a1de:	5ccc      	ldrb	r4, [r1, r3]
    a1e0:	54c4      	strb	r4, [r0, r3]
    a1e2:	3301      	adds	r3, #1
    a1e4:	e7f8      	b.n	a1d8 <memcpy+0x4>

0000a1e6 <memset>:
memset():
    a1e6:	0003      	movs	r3, r0
    a1e8:	1812      	adds	r2, r2, r0
    a1ea:	4293      	cmp	r3, r2
    a1ec:	d100      	bne.n	a1f0 <memset+0xa>
    a1ee:	4770      	bx	lr
    a1f0:	7019      	strb	r1, [r3, #0]
    a1f2:	3301      	adds	r3, #1
    a1f4:	e7f9      	b.n	a1ea <memset+0x4>
    a1f6:	0000      	movs	r0, r0
    a1f8:	fabbf7d6 	.word	0xfabbf7d6
    a1fc:	fbb7d6d7 	.word	0xfbb7d6d7
    a200:	aabfaeb4 	.word	0xaabfaeb4
    a204:	a2b7bcca 	.word	0xa2b7bcca
    a208:	0a21cdcb 	.word	0x0a21cdcb
    a20c:	00000000 	.word	0x00000000
    a210:	fabbf7d6 	.word	0xfabbf7d6
    a214:	fbb7d6d7 	.word	0xfbb7d6d7
    a218:	a2b7aeb4 	.word	0xa2b7aeb4
    a21c:	eacdcdcb 	.word	0xeacdcdcb
    a220:	0a21cfb1 	.word	0x0a21cfb1
    a224:	00000000 	.word	0x00000000
    a228:	68746f6e 	.word	0x68746f6e
    a22c:	00676e69 	.word	0x00676e69
	...
    a23c:	6c696146 	.word	0x6c696146
    a240:	206f7420 	.word	0x206f7420
    a244:	74696e69 	.word	0x74696e69
    a248:	726f7020 	.word	0x726f7020
    a24c:	6e692074 	.word	0x6e692074
    a250:	75726574 	.word	0x75726574
    a254:	a1a37470 	.word	0xa1a37470
    a258:	a1a3a1a3 	.word	0xa1a3a1a3
    a25c:	0000000a 	.word	0x0000000a
    a260:	61656c50 	.word	0x61656c50
    a264:	73206573 	.word	0x73206573
    a268:	63656c65 	.word	0x63656c65
    a26c:	72612074 	.word	0x72612074
    a270:	646e756f 	.word	0x646e756f
    a274:	726f5020 	.word	0x726f5020
    a278:	20412074 	.word	0x20412074
    a27c:	4320726f 	.word	0x4320726f
    a280:	20726f20 	.word	0x20726f20
    a284:	00000a44 	.word	0x00000a44
    a288:	33323130 	.word	0x33323130
    a28c:	37363534 	.word	0x37363534
    a290:	42413938 	.word	0x42413938
    a294:	46454443 	.word	0x46454443
    a298:	30323032 	.word	0x30323032
    a29c:	36313730 	.word	0x36313730
    a2a0:	00000000 	.word	0x00000000
    a2a4:	bea12020 	.word	0xbea12020
    a2a8:	72657355 	.word	0x72657355
    a2ac:	becae1cc 	.word	0xbecae1cc
    a2b0:	baa3bfa1 	.word	0xbaa3bfa1
    a2b4:	f8bdabbd 	.word	0xf8bdabbd
    a2b8:	7355ebc8 	.word	0x7355ebc8
    a2bc:	c4b57265 	.word	0xc4b57265
    a2c0:	6e69616d 	.word	0x6e69616d
    a2c4:	b4d62928 	.word	0xb4d62928
    a2c8:	2e2ed0d0 	.word	0x2e2ed0d0
    a2cc:	000a0d2e 	.word	0x000a0d2e
    a2d0:	6e654c67 	.word	0x6e654c67
    a2d4:	203a6874 	.word	0x203a6874
    a2d8:	000a6425 	.word	0x000a6425
    a2dc:	000a7325 	.word	0x000a7325
    a2e0:	00007614 	.word	0x00007614
    a2e4:	00007516 	.word	0x00007516
    a2e8:	00007516 	.word	0x00007516
    a2ec:	00007834 	.word	0x00007834
    a2f0:	00007510 	.word	0x00007510
    a2f4:	00007510 	.word	0x00007510
    a2f8:	0000781c 	.word	0x0000781c
    a2fc:	00007834 	.word	0x00007834
    a300:	00007510 	.word	0x00007510
    a304:	0000781c 	.word	0x0000781c
    a308:	00007510 	.word	0x00007510
    a30c:	00007834 	.word	0x00007834
    a310:	0000782a 	.word	0x0000782a
    a314:	0000782a 	.word	0x0000782a
    a318:	0000782a 	.word	0x0000782a
    a31c:	00007838 	.word	0x00007838

0000a320 <UART_ARR>:
    a320:	4006b000 4006c000 00009b26 00009b44     ...@...@&...D...
    a330:	00009b44 00009b3a 00009b44 00009b44     D...:...D...D...
    a340:	00009b44 00009b44 00009b44 00009b44     D...D...D...D...
    a350:	00009b44 00009b1c 00009b44 00009b12     D.......D.......
    a360:	00009b44 00009b44 00009b30 00009eb8     D...D...0.......
    a370:	0000a162 0000a162 0000a162 0000a162     b...b...b...b...
    a380:	0000a162 0000a162 0000a162 0000a162     b...b...b...b...
    a390:	0000a162 00009fb4 0000a08e 00009c60     b...........`...
    a3a0:	0000a162 00009d40 0000a162 0000a162     b...@...b...b...
    a3b0:	00009c60 0000a162 0000a162 0000a162     `...b...b...b...
    a3c0:	0000a162 0000a14c 00009f94 00009fd4     b...L...........
    a3d0:	0000a162 0000a162 0000a0ac 0000a162     b...b.......b...
    a3e0:	00009ff4 0000a162 0000a162 00009eb8     ....b...b.......

0000a3f0 <_init>:
_init():
    a3f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a3f2:	46c0      	nop			; (mov r8, r8)
    a3f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a3f6:	bc08      	pop	{r3}
    a3f8:	469e      	mov	lr, r3
    a3fa:	4770      	bx	lr

0000a3fc <_fini>:
_fini():
    a3fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a3fe:	46c0      	nop			; (mov r8, r8)
    a400:	bcf8      	pop	{r3, r4, r5, r6, r7}
    a402:	bc08      	pop	{r3}
    a404:	469e      	mov	lr, r3
    a406:	4770      	bx	lr
